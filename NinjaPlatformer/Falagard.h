#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Data.dll>
#using <System.Xml.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 
namespace NinjaPlatformer {
    using namespace System;
    ref class NewDataSet;
    
    
    /// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
    [System::Serializable, 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedDataSetSchema"), 
    System::Xml::Serialization::XmlRootAttribute(L"NewDataSet"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.DataSet")]
    public ref class NewDataSet : public ::System::Data::DataSet {
        public : ref class FalagardDataTable;
        public : ref class WidgetLookDataTable;
        public : ref class EventLinkDefinitionDataTable;
        public : ref class EventLinkTargetDataTable;
        public : ref class PropertyDefinitionDataTable;
        public : ref class PropertyLinkDefinitionDataTable;
        public : ref class PropertyLinkTargetDataTable;
        public : ref class PropertyDataTable;
        public : ref class NamedAreaDataTable;
        public : ref class AreaDataTable;
        public : ref class DimDataTable;
        public : ref class UnifiedDimDataTable;
        public : ref class AbsoluteDimDataTable;
        public : ref class ImageDimDataTable;
        public : ref class ImagePropertyDimDataTable;
        public : ref class WidgetDimDataTable;
        public : ref class FontDimDataTable;
        public : ref class PropertyDimDataTable;
        public : ref class OperatorDimDataTable;
        public : ref class AreaPropertyDataTable;
        public : ref class NamedAreaSourceDataTable;
        public : ref class ChildDataTable;
        public : ref class EventActionDataTable;
        public : ref class VertAlignmentDataTable;
        public : ref class HorzAlignmentDataTable;
        public : ref class ImagerySectionDataTable;
        public : ref class ColourDataTable;
        public : ref class ColoursDataTable;
        public : ref class ColourPropertyDataTable;
        public : ref class ColourRectPropertyDataTable;
        public : ref class FrameComponentDataTable;
        public : ref class ImageDataTable;
        public : ref class ImagePropertyDataTable;
        public : ref class VertFormatDataTable;
        public : ref class VertFormatPropertyDataTable;
        public : ref class HorzFormatDataTable;
        public : ref class HorzFormatPropertyDataTable;
        public : ref class ImageryComponentDataTable;
        public : ref class TextComponentDataTable;
        public : ref class TextDataTable;
        public : ref class TextPropertyDataTable;
        public : ref class FontPropertyDataTable;
        public : ref class StateImageryDataTable;
        public : ref class LayerDataTable;
        public : ref class SectionDataTable;
        public : ref class AnimationDefinitionDataTable;
        public : ref class AffectorDataTable;
        public : ref class KeyFrameDataTable;
        public : ref class SubscriptionDataTable;
        public : ref class FalagardRow;
        public : ref class WidgetLookRow;
        public : ref class EventLinkDefinitionRow;
        public : ref class EventLinkTargetRow;
        public : ref class PropertyDefinitionRow;
        public : ref class PropertyLinkDefinitionRow;
        public : ref class PropertyLinkTargetRow;
        public : ref class PropertyRow;
        public : ref class NamedAreaRow;
        public : ref class AreaRow;
        public : ref class DimRow;
        public : ref class UnifiedDimRow;
        public : ref class AbsoluteDimRow;
        public : ref class ImageDimRow;
        public : ref class ImagePropertyDimRow;
        public : ref class WidgetDimRow;
        public : ref class FontDimRow;
        public : ref class PropertyDimRow;
        public : ref class OperatorDimRow;
        public : ref class AreaPropertyRow;
        public : ref class NamedAreaSourceRow;
        public : ref class ChildRow;
        public : ref class EventActionRow;
        public : ref class VertAlignmentRow;
        public : ref class HorzAlignmentRow;
        public : ref class ImagerySectionRow;
        public : ref class ColourRow;
        public : ref class ColoursRow;
        public : ref class ColourPropertyRow;
        public : ref class ColourRectPropertyRow;
        public : ref class FrameComponentRow;
        public : ref class ImageRow;
        public : ref class ImagePropertyRow;
        public : ref class VertFormatRow;
        public : ref class VertFormatPropertyRow;
        public : ref class HorzFormatRow;
        public : ref class HorzFormatPropertyRow;
        public : ref class ImageryComponentRow;
        public : ref class TextComponentRow;
        public : ref class TextRow;
        public : ref class TextPropertyRow;
        public : ref class FontPropertyRow;
        public : ref class StateImageryRow;
        public : ref class LayerRow;
        public : ref class SectionRow;
        public : ref class AnimationDefinitionRow;
        public : ref class AffectorRow;
        public : ref class KeyFrameRow;
        public : ref class SubscriptionRow;
        public : ref class FalagardRowChangeEvent;
        public : ref class WidgetLookRowChangeEvent;
        public : ref class EventLinkDefinitionRowChangeEvent;
        public : ref class EventLinkTargetRowChangeEvent;
        public : ref class PropertyDefinitionRowChangeEvent;
        public : ref class PropertyLinkDefinitionRowChangeEvent;
        public : ref class PropertyLinkTargetRowChangeEvent;
        public : ref class PropertyRowChangeEvent;
        public : ref class NamedAreaRowChangeEvent;
        public : ref class AreaRowChangeEvent;
        public : ref class DimRowChangeEvent;
        public : ref class UnifiedDimRowChangeEvent;
        public : ref class AbsoluteDimRowChangeEvent;
        public : ref class ImageDimRowChangeEvent;
        public : ref class ImagePropertyDimRowChangeEvent;
        public : ref class WidgetDimRowChangeEvent;
        public : ref class FontDimRowChangeEvent;
        public : ref class PropertyDimRowChangeEvent;
        public : ref class OperatorDimRowChangeEvent;
        public : ref class AreaPropertyRowChangeEvent;
        public : ref class NamedAreaSourceRowChangeEvent;
        public : ref class ChildRowChangeEvent;
        public : ref class EventActionRowChangeEvent;
        public : ref class VertAlignmentRowChangeEvent;
        public : ref class HorzAlignmentRowChangeEvent;
        public : ref class ImagerySectionRowChangeEvent;
        public : ref class ColourRowChangeEvent;
        public : ref class ColoursRowChangeEvent;
        public : ref class ColourPropertyRowChangeEvent;
        public : ref class ColourRectPropertyRowChangeEvent;
        public : ref class FrameComponentRowChangeEvent;
        public : ref class ImageRowChangeEvent;
        public : ref class ImagePropertyRowChangeEvent;
        public : ref class VertFormatRowChangeEvent;
        public : ref class VertFormatPropertyRowChangeEvent;
        public : ref class HorzFormatRowChangeEvent;
        public : ref class HorzFormatPropertyRowChangeEvent;
        public : ref class ImageryComponentRowChangeEvent;
        public : ref class TextComponentRowChangeEvent;
        public : ref class TextRowChangeEvent;
        public : ref class TextPropertyRowChangeEvent;
        public : ref class FontPropertyRowChangeEvent;
        public : ref class StateImageryRowChangeEvent;
        public : ref class LayerRowChangeEvent;
        public : ref class SectionRowChangeEvent;
        public : ref class AnimationDefinitionRowChangeEvent;
        public : ref class AffectorRowChangeEvent;
        public : ref class KeyFrameRowChangeEvent;
        public : ref class SubscriptionRowChangeEvent;
        
        private: NinjaPlatformer::NewDataSet::FalagardDataTable^  tableFalagard;
        
        private: NinjaPlatformer::NewDataSet::WidgetLookDataTable^  tableWidgetLook;
        
        private: NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable^  tableEventLinkDefinition;
        
        private: NinjaPlatformer::NewDataSet::EventLinkTargetDataTable^  tableEventLinkTarget;
        
        private: NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable^  tablePropertyDefinition;
        
        private: NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable^  tablePropertyLinkDefinition;
        
        private: NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable^  tablePropertyLinkTarget;
        
        private: NinjaPlatformer::NewDataSet::PropertyDataTable^  tableProperty;
        
        private: NinjaPlatformer::NewDataSet::NamedAreaDataTable^  tableNamedArea;
        
        private: NinjaPlatformer::NewDataSet::AreaDataTable^  tableArea;
        
        private: NinjaPlatformer::NewDataSet::DimDataTable^  tableDim;
        
        private: NinjaPlatformer::NewDataSet::UnifiedDimDataTable^  tableUnifiedDim;
        
        private: NinjaPlatformer::NewDataSet::AbsoluteDimDataTable^  tableAbsoluteDim;
        
        private: NinjaPlatformer::NewDataSet::ImageDimDataTable^  tableImageDim;
        
        private: NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable^  tableImagePropertyDim;
        
        private: NinjaPlatformer::NewDataSet::WidgetDimDataTable^  tableWidgetDim;
        
        private: NinjaPlatformer::NewDataSet::FontDimDataTable^  tableFontDim;
        
        private: NinjaPlatformer::NewDataSet::PropertyDimDataTable^  tablePropertyDim;
        
        private: NinjaPlatformer::NewDataSet::OperatorDimDataTable^  tableOperatorDim;
        
        private: NinjaPlatformer::NewDataSet::AreaPropertyDataTable^  tableAreaProperty;
        
        private: NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable^  tableNamedAreaSource;
        
        private: NinjaPlatformer::NewDataSet::ChildDataTable^  tableChild;
        
        private: NinjaPlatformer::NewDataSet::EventActionDataTable^  tableEventAction;
        
        private: NinjaPlatformer::NewDataSet::VertAlignmentDataTable^  tableVertAlignment;
        
        private: NinjaPlatformer::NewDataSet::HorzAlignmentDataTable^  tableHorzAlignment;
        
        private: NinjaPlatformer::NewDataSet::ImagerySectionDataTable^  tableImagerySection;
        
        private: NinjaPlatformer::NewDataSet::ColourDataTable^  tableColour;
        
        private: NinjaPlatformer::NewDataSet::ColoursDataTable^  tableColours;
        
        private: NinjaPlatformer::NewDataSet::ColourPropertyDataTable^  tableColourProperty;
        
        private: NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable^  tableColourRectProperty;
        
        private: NinjaPlatformer::NewDataSet::FrameComponentDataTable^  tableFrameComponent;
        
        private: NinjaPlatformer::NewDataSet::ImageDataTable^  tableImage;
        
        private: NinjaPlatformer::NewDataSet::ImagePropertyDataTable^  tableImageProperty;
        
        private: NinjaPlatformer::NewDataSet::VertFormatDataTable^  tableVertFormat;
        
        private: NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable^  tableVertFormatProperty;
        
        private: NinjaPlatformer::NewDataSet::HorzFormatDataTable^  tableHorzFormat;
        
        private: NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable^  tableHorzFormatProperty;
        
        private: NinjaPlatformer::NewDataSet::ImageryComponentDataTable^  tableImageryComponent;
        
        private: NinjaPlatformer::NewDataSet::TextComponentDataTable^  tableTextComponent;
        
        private: NinjaPlatformer::NewDataSet::TextDataTable^  tableText;
        
        private: NinjaPlatformer::NewDataSet::TextPropertyDataTable^  tableTextProperty;
        
        private: NinjaPlatformer::NewDataSet::FontPropertyDataTable^  tableFontProperty;
        
        private: NinjaPlatformer::NewDataSet::StateImageryDataTable^  tableStateImagery;
        
        private: NinjaPlatformer::NewDataSet::LayerDataTable^  tableLayer;
        
        private: NinjaPlatformer::NewDataSet::SectionDataTable^  tableSection;
        
        private: NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable^  tableAnimationDefinition;
        
        private: NinjaPlatformer::NewDataSet::AffectorDataTable^  tableAffector;
        
        private: NinjaPlatformer::NewDataSet::KeyFrameDataTable^  tableKeyFrame;
        
        private: NinjaPlatformer::NewDataSet::SubscriptionDataTable^  tableSubscription;
        
        private: ::System::Data::DataRelation^  relationFalagard_WidgetLook;
        
        private: ::System::Data::DataRelation^  relationWidgetLook_EventLinkDefinition;
        
        private: ::System::Data::DataRelation^  relationEventLinkDefinition_EventLinkTarget;
        
        private: ::System::Data::DataRelation^  relationWidgetLook_PropertyDefinition;
        
        private: ::System::Data::DataRelation^  relationWidgetLook_PropertyLinkDefinition;
        
        private: ::System::Data::DataRelation^  relationPropertyLinkDefinition_PropertyLinkTarget;
        
        private: ::System::Data::DataRelation^  relationChild_Property;
        
        private: ::System::Data::DataRelation^  relationWidgetLook_Property;
        
        private: ::System::Data::DataRelation^  relationWidgetLook_NamedArea;
        
        private: ::System::Data::DataRelation^  relationNamedArea_Area;
        
        private: ::System::Data::DataRelation^  relationChild_Area;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_Area;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_Area;
        
        private: ::System::Data::DataRelation^  relationTextComponent_Area;
        
        private: ::System::Data::DataRelation^  relationArea_Dim;
        
        private: ::System::Data::DataRelation^  relationOperatorDim_UnifiedDim;
        
        private: ::System::Data::DataRelation^  relationDim_UnifiedDim;
        
        private: ::System::Data::DataRelation^  relationOperatorDim_AbsoluteDim;
        
        private: ::System::Data::DataRelation^  relationDim_AbsoluteDim;
        
        private: ::System::Data::DataRelation^  relationOperatorDim_ImageDim;
        
        private: ::System::Data::DataRelation^  relationDim_ImageDim;
        
        private: ::System::Data::DataRelation^  relationOperatorDim_ImagePropertyDim;
        
        private: ::System::Data::DataRelation^  relationDim_ImagePropertyDim;
        
        private: ::System::Data::DataRelation^  relationOperatorDim_WidgetDim;
        
        private: ::System::Data::DataRelation^  relationDim_WidgetDim;
        
        private: ::System::Data::DataRelation^  relationOperatorDim_FontDim;
        
        private: ::System::Data::DataRelation^  relationDim_FontDim;
        
        private: ::System::Data::DataRelation^  relationOperatorDim_PropertyDim;
        
        private: ::System::Data::DataRelation^  relationDim_PropertyDim;
        
        private: ::System::Data::DataRelation^  relationOperatorDim_OperatorDim;
        
        private: ::System::Data::DataRelation^  relationDim_OperatorDim;
        
        private: ::System::Data::DataRelation^  relationArea_AreaProperty;
        
        private: ::System::Data::DataRelation^  relationArea_NamedAreaSource;
        
        private: ::System::Data::DataRelation^  relationWidgetLook_Child;
        
        private: ::System::Data::DataRelation^  relationChild_EventAction;
        
        private: ::System::Data::DataRelation^  relationChild_VertAlignment;
        
        private: ::System::Data::DataRelation^  relationChild_HorzAlignment;
        
        private: ::System::Data::DataRelation^  relationWidgetLook_ImagerySection;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_Colour;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_Colour;
        
        private: ::System::Data::DataRelation^  relationTextComponent_Colour;
        
        private: ::System::Data::DataRelation^  relationImagerySection_Colour;
        
        private: ::System::Data::DataRelation^  relationSection_Colour;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_Colours;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_Colours;
        
        private: ::System::Data::DataRelation^  relationTextComponent_Colours;
        
        private: ::System::Data::DataRelation^  relationImagerySection_Colours;
        
        private: ::System::Data::DataRelation^  relationSection_Colours;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_ColourProperty;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_ColourProperty;
        
        private: ::System::Data::DataRelation^  relationTextComponent_ColourProperty;
        
        private: ::System::Data::DataRelation^  relationImagerySection_ColourProperty;
        
        private: ::System::Data::DataRelation^  relationSection_ColourProperty;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_ColourRectProperty;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_ColourRectProperty;
        
        private: ::System::Data::DataRelation^  relationTextComponent_ColourRectProperty;
        
        private: ::System::Data::DataRelation^  relationImagerySection_ColourRectProperty;
        
        private: ::System::Data::DataRelation^  relationSection_ColourRectProperty;
        
        private: ::System::Data::DataRelation^  relationImagerySection_FrameComponent;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_Image;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_Image;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_ImageProperty;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_ImageProperty;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_VertFormat;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_VertFormat;
        
        private: ::System::Data::DataRelation^  relationTextComponent_VertFormat;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_VertFormatProperty;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_VertFormatProperty;
        
        private: ::System::Data::DataRelation^  relationTextComponent_VertFormatProperty;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_HorzFormat;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_HorzFormat;
        
        private: ::System::Data::DataRelation^  relationTextComponent_HorzFormat;
        
        private: ::System::Data::DataRelation^  relationFrameComponent_HorzFormatProperty;
        
        private: ::System::Data::DataRelation^  relationImageryComponent_HorzFormatProperty;
        
        private: ::System::Data::DataRelation^  relationTextComponent_HorzFormatProperty;
        
        private: ::System::Data::DataRelation^  relationImagerySection_ImageryComponent;
        
        private: ::System::Data::DataRelation^  relationImagerySection_TextComponent;
        
        private: ::System::Data::DataRelation^  relationTextComponent_Text;
        
        private: ::System::Data::DataRelation^  relationTextComponent_TextProperty;
        
        private: ::System::Data::DataRelation^  relationTextComponent_FontProperty;
        
        private: ::System::Data::DataRelation^  relationWidgetLook_StateImagery;
        
        private: ::System::Data::DataRelation^  relationStateImagery_Layer;
        
        private: ::System::Data::DataRelation^  relationLayer_Section;
        
        private: ::System::Data::DataRelation^  relationWidgetLook_AnimationDefinition;
        
        private: ::System::Data::DataRelation^  relationAnimationDefinition_Affector;
        
        private: ::System::Data::DataRelation^  relationAffector_KeyFrame;
        
        private: ::System::Data::DataRelation^  relationAnimationDefinition_Subscription;
        
        private: ::System::Data::SchemaSerializationMode _schemaSerializationMode;
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void FalagardRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::FalagardRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void WidgetLookRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::WidgetLookRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void EventLinkDefinitionRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::EventLinkDefinitionRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void EventLinkTargetRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::EventLinkTargetRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void PropertyDefinitionRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::PropertyDefinitionRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void PropertyLinkDefinitionRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void PropertyLinkTargetRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::PropertyLinkTargetRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void PropertyRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::PropertyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void NamedAreaRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::NamedAreaRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void AreaRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::AreaRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void DimRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::DimRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void UnifiedDimRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::UnifiedDimRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void AbsoluteDimRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::AbsoluteDimRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ImageDimRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ImageDimRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ImagePropertyDimRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ImagePropertyDimRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void WidgetDimRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::WidgetDimRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void FontDimRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::FontDimRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void PropertyDimRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::PropertyDimRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void OperatorDimRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::OperatorDimRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void AreaPropertyRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::AreaPropertyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void NamedAreaSourceRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::NamedAreaSourceRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ChildRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ChildRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void EventActionRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::EventActionRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void VertAlignmentRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::VertAlignmentRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void HorzAlignmentRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::HorzAlignmentRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ImagerySectionRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ImagerySectionRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ColourRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ColourRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ColoursRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ColoursRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ColourPropertyRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ColourPropertyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ColourRectPropertyRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ColourRectPropertyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void FrameComponentRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::FrameComponentRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ImageRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ImageRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ImagePropertyRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ImagePropertyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void VertFormatRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::VertFormatRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void VertFormatPropertyRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::VertFormatPropertyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void HorzFormatRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::HorzFormatRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void HorzFormatPropertyRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::HorzFormatPropertyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ImageryComponentRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::ImageryComponentRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void TextComponentRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::TextComponentRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void TextRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::TextRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void TextPropertyRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::TextPropertyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void FontPropertyRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::FontPropertyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void StateImageryRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::StateImageryRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void LayerRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::LayerRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void SectionRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::SectionRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void AnimationDefinitionRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::AnimationDefinitionRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void AffectorRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::AffectorRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void KeyFrameRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::KeyFrameRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void SubscriptionRowChangeEventHandler(::System::Object^  sender, NinjaPlatformer::NewDataSet::SubscriptionRowChangeEvent^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet();
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::FalagardDataTable^  Falagard {
            NinjaPlatformer::NewDataSet::FalagardDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::WidgetLookDataTable^  WidgetLook {
            NinjaPlatformer::NewDataSet::WidgetLookDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable^  EventLinkDefinition {
            NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::EventLinkTargetDataTable^  EventLinkTarget {
            NinjaPlatformer::NewDataSet::EventLinkTargetDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable^  PropertyDefinition {
            NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable^  PropertyLinkDefinition {
            NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable^  PropertyLinkTarget {
            NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::PropertyDataTable^  Property {
            NinjaPlatformer::NewDataSet::PropertyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::NamedAreaDataTable^  NamedArea {
            NinjaPlatformer::NewDataSet::NamedAreaDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::AreaDataTable^  Area {
            NinjaPlatformer::NewDataSet::AreaDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::DimDataTable^  Dim {
            NinjaPlatformer::NewDataSet::DimDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::UnifiedDimDataTable^  UnifiedDim {
            NinjaPlatformer::NewDataSet::UnifiedDimDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::AbsoluteDimDataTable^  AbsoluteDim {
            NinjaPlatformer::NewDataSet::AbsoluteDimDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ImageDimDataTable^  ImageDim {
            NinjaPlatformer::NewDataSet::ImageDimDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable^  ImagePropertyDim {
            NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::WidgetDimDataTable^  WidgetDim {
            NinjaPlatformer::NewDataSet::WidgetDimDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::FontDimDataTable^  FontDim {
            NinjaPlatformer::NewDataSet::FontDimDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::PropertyDimDataTable^  PropertyDim {
            NinjaPlatformer::NewDataSet::PropertyDimDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::OperatorDimDataTable^  OperatorDim {
            NinjaPlatformer::NewDataSet::OperatorDimDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::AreaPropertyDataTable^  AreaProperty {
            NinjaPlatformer::NewDataSet::AreaPropertyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable^  NamedAreaSource {
            NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ChildDataTable^  Child {
            NinjaPlatformer::NewDataSet::ChildDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::EventActionDataTable^  EventAction {
            NinjaPlatformer::NewDataSet::EventActionDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::VertAlignmentDataTable^  VertAlignment {
            NinjaPlatformer::NewDataSet::VertAlignmentDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::HorzAlignmentDataTable^  HorzAlignment {
            NinjaPlatformer::NewDataSet::HorzAlignmentDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ImagerySectionDataTable^  ImagerySection {
            NinjaPlatformer::NewDataSet::ImagerySectionDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ColourDataTable^  Colour {
            NinjaPlatformer::NewDataSet::ColourDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ColoursDataTable^  Colours {
            NinjaPlatformer::NewDataSet::ColoursDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ColourPropertyDataTable^  ColourProperty {
            NinjaPlatformer::NewDataSet::ColourPropertyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable^  ColourRectProperty {
            NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::FrameComponentDataTable^  FrameComponent {
            NinjaPlatformer::NewDataSet::FrameComponentDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ImageDataTable^  Image {
            NinjaPlatformer::NewDataSet::ImageDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ImagePropertyDataTable^  ImageProperty {
            NinjaPlatformer::NewDataSet::ImagePropertyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::VertFormatDataTable^  VertFormat {
            NinjaPlatformer::NewDataSet::VertFormatDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable^  VertFormatProperty {
            NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::HorzFormatDataTable^  HorzFormat {
            NinjaPlatformer::NewDataSet::HorzFormatDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable^  HorzFormatProperty {
            NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::ImageryComponentDataTable^  ImageryComponent {
            NinjaPlatformer::NewDataSet::ImageryComponentDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::TextComponentDataTable^  TextComponent {
            NinjaPlatformer::NewDataSet::TextComponentDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::TextDataTable^  Text {
            NinjaPlatformer::NewDataSet::TextDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::TextPropertyDataTable^  TextProperty {
            NinjaPlatformer::NewDataSet::TextPropertyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::FontPropertyDataTable^  FontProperty {
            NinjaPlatformer::NewDataSet::FontPropertyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::StateImageryDataTable^  StateImagery {
            NinjaPlatformer::NewDataSet::StateImageryDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::LayerDataTable^  Layer {
            NinjaPlatformer::NewDataSet::LayerDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::SectionDataTable^  Section {
            NinjaPlatformer::NewDataSet::SectionDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable^  AnimationDefinition {
            NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::AffectorDataTable^  Affector {
            NinjaPlatformer::NewDataSet::AffectorDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::KeyFrameDataTable^  KeyFrame {
            NinjaPlatformer::NewDataSet::KeyFrameDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property NinjaPlatformer::NewDataSet::SubscriptionDataTable^  Subscription {
            NinjaPlatformer::NewDataSet::SubscriptionDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::BrowsableAttribute(true), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Visible)]
        virtual property ::System::Data::SchemaSerializationMode SchemaSerializationMode {
            ::System::Data::SchemaSerializationMode get() override;
            System::Void set(::System::Data::SchemaSerializationMode value) override;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataTableCollection^  Tables {
            ::System::Data::DataTableCollection^  get() new;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataRelationCollection^  Relations {
            ::System::Data::DataRelationCollection^  get() new;
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void InitializeDerivedDataSet() override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataSet^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeTables() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeRelations() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void ReadXmlSerializable(::System::Xml::XmlReader^  reader) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Xml::Schema::XmlSchema^  GetSchemaSerializable() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars(::System::Boolean initTable);
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeFalagard();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeWidgetLook();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeEventLinkDefinition();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeEventLinkTarget();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializePropertyDefinition();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializePropertyLinkDefinition();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializePropertyLinkTarget();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeProperty();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeNamedArea();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeArea();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeDim();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeUnifiedDim();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeAbsoluteDim();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeImageDim();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeImagePropertyDim();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeWidgetDim();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeFontDim();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializePropertyDim();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeOperatorDim();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeAreaProperty();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeNamedAreaSource();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeChild();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeEventAction();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeVertAlignment();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeHorzAlignment();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeImagerySection();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeColour();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeColours();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeColourProperty();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeColourRectProperty();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeFrameComponent();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeImage();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeImageProperty();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeVertFormat();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeVertFormatProperty();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeHorzFormat();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeHorzFormatProperty();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeImageryComponent();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeTextComponent();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeText();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeTextProperty();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeFontProperty();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeStateImagery();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeLayer();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeSection();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeAnimationDefinition();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeAffector();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeKeyFrame();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeSubscription();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class FalagardDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnversion;
            
            private: ::System::Data::DataColumn^  columnFalagard_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FalagardRowChangeEventHandler^  FalagardRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FalagardRowChangeEventHandler^  FalagardRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FalagardRowChangeEventHandler^  FalagardRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FalagardRowChangeEventHandler^  FalagardRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FalagardDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FalagardDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FalagardDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  versionColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Falagard_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FalagardRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::FalagardRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddFalagardRow(NinjaPlatformer::NewDataSet::FalagardRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::FalagardRow^  AddFalagardRow(System::UInt64 version);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::FalagardRow^  NewFalagardRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveFalagardRow(NinjaPlatformer::NewDataSet::FalagardRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class WidgetLookDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columninherits;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            private: ::System::Data::DataColumn^  columnFalagard_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::WidgetLookRowChangeEventHandler^  WidgetLookRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::WidgetLookRowChangeEventHandler^  WidgetLookRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::WidgetLookRowChangeEventHandler^  WidgetLookRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::WidgetLookRowChangeEventHandler^  WidgetLookRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetLookDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetLookDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetLookDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  inheritsColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Falagard_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddWidgetLookRow(NinjaPlatformer::NewDataSet::WidgetLookRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::WidgetLookRow^  AddWidgetLookRow(System::String^  name, System::String^  inherits, 
                        NinjaPlatformer::NewDataSet::FalagardRow^  parentFalagardRowByFalagard_WidgetLook);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::WidgetLookRow^  NewWidgetLookRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveWidgetLookRow(NinjaPlatformer::NewDataSet::WidgetLookRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class EventLinkDefinitionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnwidget;
            
            private: ::System::Data::DataColumn^  column_event;
            
            private: ::System::Data::DataColumn^  columnEventLinkDefinition_Id;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventLinkDefinitionRowChangeEventHandler^  EventLinkDefinitionRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventLinkDefinitionRowChangeEventHandler^  EventLinkDefinitionRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventLinkDefinitionRowChangeEventHandler^  EventLinkDefinitionRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventLinkDefinitionRowChangeEventHandler^  EventLinkDefinitionRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkDefinitionDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkDefinitionDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkDefinitionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  widgetColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  _eventColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  EventLinkDefinition_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddEventLinkDefinitionRow(NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  AddEventLinkDefinitionRow(System::String^  name, System::String^  widget, 
                        System::String^  _event, NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_EventLinkDefinition);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  NewEventLinkDefinitionRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveEventLinkDefinitionRow(NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class EventLinkTargetDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnwidget;
            
            private: ::System::Data::DataColumn^  column_event;
            
            private: ::System::Data::DataColumn^  columnEventLinkDefinition_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventLinkTargetRowChangeEventHandler^  EventLinkTargetRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventLinkTargetRowChangeEventHandler^  EventLinkTargetRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventLinkTargetRowChangeEventHandler^  EventLinkTargetRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventLinkTargetRowChangeEventHandler^  EventLinkTargetRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkTargetDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkTargetDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkTargetDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  widgetColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  _eventColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  EventLinkDefinition_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::EventLinkTargetRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::EventLinkTargetRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddEventLinkTargetRow(NinjaPlatformer::NewDataSet::EventLinkTargetRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::EventLinkTargetRow^  AddEventLinkTargetRow(System::String^  widget, System::String^  _event, 
                        NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  parentEventLinkDefinitionRowByEventLinkDefinition_EventLinkTarget);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::EventLinkTargetRow^  NewEventLinkTargetRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveEventLinkTargetRow(NinjaPlatformer::NewDataSet::EventLinkTargetRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class PropertyDefinitionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columninitialValue;
            
            private: ::System::Data::DataColumn^  columnlayoutOnWrite;
            
            private: ::System::Data::DataColumn^  columnredrawOnWrite;
            
            private: ::System::Data::DataColumn^  columnhelp;
            
            private: ::System::Data::DataColumn^  columnfireEvent;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyDefinitionRowChangeEventHandler^  PropertyDefinitionRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyDefinitionRowChangeEventHandler^  PropertyDefinitionRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyDefinitionRowChangeEventHandler^  PropertyDefinitionRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyDefinitionRowChangeEventHandler^  PropertyDefinitionRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDefinitionDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDefinitionDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDefinitionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  initialValueColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  layoutOnWriteColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  redrawOnWriteColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  helpColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  fireEventColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddPropertyDefinitionRow(NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  AddPropertyDefinitionRow(
                        System::String^  type, 
                        System::String^  name, 
                        System::String^  initialValue, 
                        System::Boolean layoutOnWrite, 
                        System::Boolean redrawOnWrite, 
                        System::String^  help, 
                        System::String^  fireEvent, 
                        NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_PropertyDefinition);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  NewPropertyDefinitionRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovePropertyDefinitionRow(NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class PropertyLinkDefinitionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnwidget;
            
            private: ::System::Data::DataColumn^  columntargetProperty;
            
            private: ::System::Data::DataColumn^  columninitialValue;
            
            private: ::System::Data::DataColumn^  columnlayoutOnWrite;
            
            private: ::System::Data::DataColumn^  columnredrawOnWrite;
            
            private: ::System::Data::DataColumn^  columnfireEvent;
            
            private: ::System::Data::DataColumn^  columnPropertyLinkDefinition_Id;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRowChangeEventHandler^  PropertyLinkDefinitionRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRowChangeEventHandler^  PropertyLinkDefinitionRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRowChangeEventHandler^  PropertyLinkDefinitionRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRowChangeEventHandler^  PropertyLinkDefinitionRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkDefinitionDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkDefinitionDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkDefinitionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  widgetColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  targetPropertyColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  initialValueColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  layoutOnWriteColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  redrawOnWriteColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  fireEventColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  PropertyLinkDefinition_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddPropertyLinkDefinitionRow(NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  AddPropertyLinkDefinitionRow(
                        System::String^  type, 
                        System::String^  name, 
                        System::String^  widget, 
                        System::String^  targetProperty, 
                        System::String^  initialValue, 
                        System::Boolean layoutOnWrite, 
                        System::Boolean redrawOnWrite, 
                        System::String^  fireEvent, 
                        NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_PropertyLinkDefinition);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  NewPropertyLinkDefinitionRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovePropertyLinkDefinitionRow(NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class PropertyLinkTargetDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnwidget;
            
            private: ::System::Data::DataColumn^  column_property;
            
            private: ::System::Data::DataColumn^  columnPropertyLinkDefinition_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyLinkTargetRowChangeEventHandler^  PropertyLinkTargetRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyLinkTargetRowChangeEventHandler^  PropertyLinkTargetRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyLinkTargetRowChangeEventHandler^  PropertyLinkTargetRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyLinkTargetRowChangeEventHandler^  PropertyLinkTargetRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkTargetDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkTargetDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkTargetDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  widgetColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  _propertyColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  PropertyLinkDefinition_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddPropertyLinkTargetRow(NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  AddPropertyLinkTargetRow(System::String^  widget, System::String^  _property, 
                        NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  parentPropertyLinkDefinitionRowByPropertyLinkDefinition_PropertyLinkTarget);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  NewPropertyLinkTargetRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovePropertyLinkTargetRow(NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class PropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  column_value;
            
            private: ::System::Data::DataColumn^  columnChild_Id;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyRowChangeEventHandler^  PropertyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyRowChangeEventHandler^  PropertyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyRowChangeEventHandler^  PropertyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyRowChangeEventHandler^  PropertyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  _valueColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Child_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::PropertyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddPropertyRow(NinjaPlatformer::NewDataSet::PropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyRow^  AddPropertyRow(System::String^  name, System::String^  _value, NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_Property, 
                        NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_Property);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyRow^  NewPropertyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovePropertyRow(NinjaPlatformer::NewDataSet::PropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class NamedAreaDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnNamedArea_Id;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::NamedAreaRowChangeEventHandler^  NamedAreaRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::NamedAreaRowChangeEventHandler^  NamedAreaRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::NamedAreaRowChangeEventHandler^  NamedAreaRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::NamedAreaRowChangeEventHandler^  NamedAreaRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  NamedArea_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::NamedAreaRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::NamedAreaRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddNamedAreaRow(NinjaPlatformer::NewDataSet::NamedAreaRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::NamedAreaRow^  AddNamedAreaRow(System::String^  name, NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_NamedArea);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::NamedAreaRow^  NewNamedAreaRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveNamedAreaRow(NinjaPlatformer::NewDataSet::NamedAreaRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class AreaDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnArea_Id;
            
            private: ::System::Data::DataColumn^  columnNamedArea_Id;
            
            private: ::System::Data::DataColumn^  columnChild_Id;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AreaRowChangeEventHandler^  AreaRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AreaRowChangeEventHandler^  AreaRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AreaRowChangeEventHandler^  AreaRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AreaRowChangeEventHandler^  AreaRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Area_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  NamedArea_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Child_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AreaRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::AreaRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddAreaRow(NinjaPlatformer::NewDataSet::AreaRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AreaRow^  AddAreaRow(NinjaPlatformer::NewDataSet::NamedAreaRow^  parentNamedAreaRowByNamedArea_Area, 
                        NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_Area, NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_Area, 
                        NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_Area, NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_Area);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AreaRow^  NewAreaRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveAreaRow(NinjaPlatformer::NewDataSet::AreaRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class DimDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnDim_Id;
            
            private: ::System::Data::DataColumn^  columnArea_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::DimRowChangeEventHandler^  DimRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::DimRowChangeEventHandler^  DimRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::DimRowChangeEventHandler^  DimRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::DimRowChangeEventHandler^  DimRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            DimDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            DimDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            DimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Dim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Area_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::DimRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddDimRow(NinjaPlatformer::NewDataSet::DimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::DimRow^  AddDimRow(System::String^  type, NinjaPlatformer::NewDataSet::AreaRow^  parentAreaRowByArea_Dim);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::DimRow^  NewDimRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveDimRow(NinjaPlatformer::NewDataSet::DimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class UnifiedDimDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnscale;
            
            private: ::System::Data::DataColumn^  columnoffset;
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnOperatorDim_Id;
            
            private: ::System::Data::DataColumn^  columnDim_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::UnifiedDimRowChangeEventHandler^  UnifiedDimRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::UnifiedDimRowChangeEventHandler^  UnifiedDimRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::UnifiedDimRowChangeEventHandler^  UnifiedDimRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::UnifiedDimRowChangeEventHandler^  UnifiedDimRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            UnifiedDimDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            UnifiedDimDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            UnifiedDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  scaleColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  offsetColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  OperatorDim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Dim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::UnifiedDimRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::UnifiedDimRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddUnifiedDimRow(NinjaPlatformer::NewDataSet::UnifiedDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::UnifiedDimRow^  AddUnifiedDimRow(System::Decimal scale, System::Int64 offset, System::String^  type, 
                        NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_UnifiedDim, NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_UnifiedDim);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::UnifiedDimRow^  NewUnifiedDimRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveUnifiedDimRow(NinjaPlatformer::NewDataSet::UnifiedDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class AbsoluteDimDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  column_value;
            
            private: ::System::Data::DataColumn^  columnOperatorDim_Id;
            
            private: ::System::Data::DataColumn^  columnDim_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AbsoluteDimRowChangeEventHandler^  AbsoluteDimRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AbsoluteDimRowChangeEventHandler^  AbsoluteDimRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AbsoluteDimRowChangeEventHandler^  AbsoluteDimRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AbsoluteDimRowChangeEventHandler^  AbsoluteDimRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AbsoluteDimDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AbsoluteDimDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AbsoluteDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  _valueColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  OperatorDim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Dim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AbsoluteDimRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::AbsoluteDimRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddAbsoluteDimRow(NinjaPlatformer::NewDataSet::AbsoluteDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AbsoluteDimRow^  AddAbsoluteDimRow(System::Decimal _value, NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_AbsoluteDim, 
                        NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_AbsoluteDim);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AbsoluteDimRow^  NewAbsoluteDimRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveAbsoluteDimRow(NinjaPlatformer::NewDataSet::AbsoluteDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ImageDimDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columndimension;
            
            private: ::System::Data::DataColumn^  columnOperatorDim_Id;
            
            private: ::System::Data::DataColumn^  columnDim_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageDimRowChangeEventHandler^  ImageDimRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageDimRowChangeEventHandler^  ImageDimRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageDimRowChangeEventHandler^  ImageDimRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageDimRowChangeEventHandler^  ImageDimRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageDimDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageDimDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  dimensionColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  OperatorDim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Dim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageDimRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ImageDimRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddImageDimRow(NinjaPlatformer::NewDataSet::ImageDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImageDimRow^  AddImageDimRow(System::String^  name, System::String^  dimension, 
                        NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_ImageDim, NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_ImageDim);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImageDimRow^  NewImageDimRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveImageDimRow(NinjaPlatformer::NewDataSet::ImageDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ImagePropertyDimDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columndimension;
            
            private: ::System::Data::DataColumn^  columnOperatorDim_Id;
            
            private: ::System::Data::DataColumn^  columnDim_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagePropertyDimRowChangeEventHandler^  ImagePropertyDimRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagePropertyDimRowChangeEventHandler^  ImagePropertyDimRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagePropertyDimRowChangeEventHandler^  ImagePropertyDimRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagePropertyDimRowChangeEventHandler^  ImagePropertyDimRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyDimDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyDimDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  dimensionColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  OperatorDim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Dim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddImagePropertyDimRow(NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  AddImagePropertyDimRow(System::String^  name, System::String^  dimension, 
                        NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_ImagePropertyDim, NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_ImagePropertyDim);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  NewImagePropertyDimRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveImagePropertyDimRow(NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class WidgetDimDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnwidget;
            
            private: ::System::Data::DataColumn^  columndimension;
            
            private: ::System::Data::DataColumn^  columnOperatorDim_Id;
            
            private: ::System::Data::DataColumn^  columnDim_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::WidgetDimRowChangeEventHandler^  WidgetDimRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::WidgetDimRowChangeEventHandler^  WidgetDimRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::WidgetDimRowChangeEventHandler^  WidgetDimRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::WidgetDimRowChangeEventHandler^  WidgetDimRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetDimDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetDimDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  widgetColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  dimensionColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  OperatorDim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Dim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetDimRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::WidgetDimRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddWidgetDimRow(NinjaPlatformer::NewDataSet::WidgetDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::WidgetDimRow^  AddWidgetDimRow(System::String^  widget, System::String^  dimension, 
                        NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_WidgetDim, NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_WidgetDim);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::WidgetDimRow^  NewWidgetDimRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveWidgetDimRow(NinjaPlatformer::NewDataSet::WidgetDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class FontDimDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnwidget;
            
            private: ::System::Data::DataColumn^  columnfont;
            
            private: ::System::Data::DataColumn^  columnstring;
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnpadding;
            
            private: ::System::Data::DataColumn^  columnOperatorDim_Id;
            
            private: ::System::Data::DataColumn^  columnDim_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FontDimRowChangeEventHandler^  FontDimRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FontDimRowChangeEventHandler^  FontDimRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FontDimRowChangeEventHandler^  FontDimRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FontDimRowChangeEventHandler^  FontDimRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontDimDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontDimDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  widgetColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  fontColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  stringColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  paddingColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  OperatorDim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Dim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FontDimRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::FontDimRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddFontDimRow(NinjaPlatformer::NewDataSet::FontDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::FontDimRow^  AddFontDimRow(
                        System::String^  widget, 
                        System::String^  font, 
                        System::String^  string, 
                        System::String^  type, 
                        System::Decimal padding, 
                        NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_FontDim, 
                        NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_FontDim);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::FontDimRow^  NewFontDimRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveFontDimRow(NinjaPlatformer::NewDataSet::FontDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class PropertyDimDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnwidget;
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnOperatorDim_Id;
            
            private: ::System::Data::DataColumn^  columnDim_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyDimRowChangeEventHandler^  PropertyDimRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyDimRowChangeEventHandler^  PropertyDimRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyDimRowChangeEventHandler^  PropertyDimRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::PropertyDimRowChangeEventHandler^  PropertyDimRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDimDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDimDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  widgetColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  OperatorDim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Dim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyDimRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::PropertyDimRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddPropertyDimRow(NinjaPlatformer::NewDataSet::PropertyDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyDimRow^  AddPropertyDimRow(System::String^  widget, System::String^  name, 
                        System::String^  type, NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_PropertyDim, 
                        NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_PropertyDim);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::PropertyDimRow^  NewPropertyDimRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovePropertyDimRow(NinjaPlatformer::NewDataSet::PropertyDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class OperatorDimDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnop;
            
            private: ::System::Data::DataColumn^  columnOperatorDim_Id;
            
            private: ::System::Data::DataColumn^  columnOperatorDim_Id_0;
            
            private: ::System::Data::DataColumn^  columnDim_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::OperatorDimRowChangeEventHandler^  OperatorDimRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::OperatorDimRowChangeEventHandler^  OperatorDimRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::OperatorDimRowChangeEventHandler^  OperatorDimRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::OperatorDimRowChangeEventHandler^  OperatorDimRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            OperatorDimDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            OperatorDimDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            OperatorDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  opColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  OperatorDim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  OperatorDim_Id_0Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Dim_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddOperatorDimRow(NinjaPlatformer::NewDataSet::OperatorDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::OperatorDimRow^  AddOperatorDimRow(System::String^  op, NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_OperatorDim, 
                        NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_OperatorDim);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::OperatorDimRow^  NewOperatorDimRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveOperatorDimRow(NinjaPlatformer::NewDataSet::OperatorDimRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class AreaPropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnArea_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AreaPropertyRowChangeEventHandler^  AreaPropertyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AreaPropertyRowChangeEventHandler^  AreaPropertyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AreaPropertyRowChangeEventHandler^  AreaPropertyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AreaPropertyRowChangeEventHandler^  AreaPropertyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaPropertyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaPropertyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Area_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AreaPropertyRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::AreaPropertyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddAreaPropertyRow(NinjaPlatformer::NewDataSet::AreaPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AreaPropertyRow^  AddAreaPropertyRow(System::String^  name, NinjaPlatformer::NewDataSet::AreaRow^  parentAreaRowByArea_AreaProperty);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AreaPropertyRow^  NewAreaPropertyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveAreaPropertyRow(NinjaPlatformer::NewDataSet::AreaPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class NamedAreaSourceDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnlook;
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnArea_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::NamedAreaSourceRowChangeEventHandler^  NamedAreaSourceRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::NamedAreaSourceRowChangeEventHandler^  NamedAreaSourceRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::NamedAreaSourceRowChangeEventHandler^  NamedAreaSourceRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::NamedAreaSourceRowChangeEventHandler^  NamedAreaSourceRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaSourceDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaSourceDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaSourceDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  lookColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Area_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddNamedAreaSourceRow(NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  AddNamedAreaSourceRow(System::String^  look, System::String^  name, 
                        NinjaPlatformer::NewDataSet::AreaRow^  parentAreaRowByArea_NamedAreaSource);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  NewNamedAreaSourceRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveNamedAreaSourceRow(NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ChildDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnnameSuffix;
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnrenderer;
            
            private: ::System::Data::DataColumn^  columnlook;
            
            private: ::System::Data::DataColumn^  columnautoWindow;
            
            private: ::System::Data::DataColumn^  columnChild_Id;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ChildRowChangeEventHandler^  ChildRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ChildRowChangeEventHandler^  ChildRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ChildRowChangeEventHandler^  ChildRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ChildRowChangeEventHandler^  ChildRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ChildDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ChildDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ChildDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameSuffixColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  rendererColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  lookColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  autoWindowColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Child_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ChildRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ChildRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddChildRow(NinjaPlatformer::NewDataSet::ChildRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ChildRow^  AddChildRow(
                        System::String^  nameSuffix, 
                        System::String^  type, 
                        System::String^  renderer, 
                        System::String^  look, 
                        System::Boolean autoWindow, 
                        NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_Child);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ChildRow^  NewChildRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveChildRow(NinjaPlatformer::NewDataSet::ChildRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class EventActionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  column_event;
            
            private: ::System::Data::DataColumn^  columnaction;
            
            private: ::System::Data::DataColumn^  columnChild_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventActionRowChangeEventHandler^  EventActionRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventActionRowChangeEventHandler^  EventActionRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventActionRowChangeEventHandler^  EventActionRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::EventActionRowChangeEventHandler^  EventActionRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventActionDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventActionDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventActionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  _eventColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  actionColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Child_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::EventActionRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::EventActionRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddEventActionRow(NinjaPlatformer::NewDataSet::EventActionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::EventActionRow^  AddEventActionRow(System::String^  _event, System::String^  action, 
                        NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_EventAction);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::EventActionRow^  NewEventActionRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveEventActionRow(NinjaPlatformer::NewDataSet::EventActionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class VertAlignmentDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnChild_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertAlignmentRowChangeEventHandler^  VertAlignmentRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertAlignmentRowChangeEventHandler^  VertAlignmentRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertAlignmentRowChangeEventHandler^  VertAlignmentRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertAlignmentRowChangeEventHandler^  VertAlignmentRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertAlignmentDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertAlignmentDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertAlignmentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Child_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::VertAlignmentRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::VertAlignmentRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddVertAlignmentRow(NinjaPlatformer::NewDataSet::VertAlignmentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::VertAlignmentRow^  AddVertAlignmentRow(System::String^  type, NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_VertAlignment);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::VertAlignmentRow^  NewVertAlignmentRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveVertAlignmentRow(NinjaPlatformer::NewDataSet::VertAlignmentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class HorzAlignmentDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnChild_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzAlignmentRowChangeEventHandler^  HorzAlignmentRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzAlignmentRowChangeEventHandler^  HorzAlignmentRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzAlignmentRowChangeEventHandler^  HorzAlignmentRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzAlignmentRowChangeEventHandler^  HorzAlignmentRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzAlignmentDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzAlignmentDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzAlignmentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Child_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::HorzAlignmentRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::HorzAlignmentRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddHorzAlignmentRow(NinjaPlatformer::NewDataSet::HorzAlignmentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::HorzAlignmentRow^  AddHorzAlignmentRow(System::String^  type, NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_HorzAlignment);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::HorzAlignmentRow^  NewHorzAlignmentRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveHorzAlignmentRow(NinjaPlatformer::NewDataSet::HorzAlignmentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ImagerySectionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnImagerySection_Id;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagerySectionRowChangeEventHandler^  ImagerySectionRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagerySectionRowChangeEventHandler^  ImagerySectionRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagerySectionRowChangeEventHandler^  ImagerySectionRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagerySectionRowChangeEventHandler^  ImagerySectionRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagerySectionDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagerySectionDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagerySectionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImagerySection_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagerySectionRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddImagerySectionRow(NinjaPlatformer::NewDataSet::ImagerySectionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImagerySectionRow^  AddImagerySectionRow(System::String^  name, NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_ImagerySection);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewImagerySectionRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveImagerySectionRow(NinjaPlatformer::NewDataSet::ImagerySectionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ColourDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columncolour;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImagerySection_Id;
            
            private: ::System::Data::DataColumn^  columnSection_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourRowChangeEventHandler^  ColourRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourRowChangeEventHandler^  ColourRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourRowChangeEventHandler^  ColourRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourRowChangeEventHandler^  ColourRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  colourColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImagerySection_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Section_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ColourRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ColourRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddColourRow(NinjaPlatformer::NewDataSet::ColourRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ColourRow^  AddColourRow(
                        System::String^  colour, 
                        NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_Colour, 
                        NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_Colour, 
                        NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_Colour, 
                        NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_Colour, 
                        NinjaPlatformer::NewDataSet::SectionRow^  parentSectionRowBySection_Colour);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ColourRow^  NewColourRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveColourRow(NinjaPlatformer::NewDataSet::ColourRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ColoursDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columntopLeft;
            
            private: ::System::Data::DataColumn^  columntopRight;
            
            private: ::System::Data::DataColumn^  columnbottomLeft;
            
            private: ::System::Data::DataColumn^  columnbottomRight;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImagerySection_Id;
            
            private: ::System::Data::DataColumn^  columnSection_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColoursRowChangeEventHandler^  ColoursRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColoursRowChangeEventHandler^  ColoursRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColoursRowChangeEventHandler^  ColoursRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColoursRowChangeEventHandler^  ColoursRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColoursDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColoursDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColoursDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  topLeftColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  topRightColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  bottomLeftColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  bottomRightColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImagerySection_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Section_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ColoursRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ColoursRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddColoursRow(NinjaPlatformer::NewDataSet::ColoursRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ColoursRow^  AddColoursRow(
                        System::String^  topLeft, 
                        System::String^  topRight, 
                        System::String^  bottomLeft, 
                        System::String^  bottomRight, 
                        NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_Colours, 
                        NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_Colours, 
                        NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_Colours, 
                        NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_Colours, 
                        NinjaPlatformer::NewDataSet::SectionRow^  parentSectionRowBySection_Colours);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ColoursRow^  NewColoursRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveColoursRow(NinjaPlatformer::NewDataSet::ColoursRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ColourPropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImagerySection_Id;
            
            private: ::System::Data::DataColumn^  columnSection_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourPropertyRowChangeEventHandler^  ColourPropertyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourPropertyRowChangeEventHandler^  ColourPropertyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourPropertyRowChangeEventHandler^  ColourPropertyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourPropertyRowChangeEventHandler^  ColourPropertyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourPropertyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourPropertyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImagerySection_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Section_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ColourPropertyRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ColourPropertyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddColourPropertyRow(NinjaPlatformer::NewDataSet::ColourPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ColourPropertyRow^  AddColourPropertyRow(
                        System::String^  name, 
                        NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_ColourProperty, 
                        NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_ColourProperty, 
                        NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_ColourProperty, 
                        NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_ColourProperty, 
                        NinjaPlatformer::NewDataSet::SectionRow^  parentSectionRowBySection_ColourProperty);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ColourPropertyRow^  NewColourPropertyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveColourPropertyRow(NinjaPlatformer::NewDataSet::ColourPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ColourRectPropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImagerySection_Id;
            
            private: ::System::Data::DataColumn^  columnSection_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourRectPropertyRowChangeEventHandler^  ColourRectPropertyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourRectPropertyRowChangeEventHandler^  ColourRectPropertyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourRectPropertyRowChangeEventHandler^  ColourRectPropertyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ColourRectPropertyRowChangeEventHandler^  ColourRectPropertyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourRectPropertyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourRectPropertyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourRectPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImagerySection_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Section_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddColourRectPropertyRow(NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  AddColourRectPropertyRow(
                        System::String^  name, 
                        NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_ColourRectProperty, 
                        NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_ColourRectProperty, 
                        NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_ColourRectProperty, 
                        NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_ColourRectProperty, 
                        NinjaPlatformer::NewDataSet::SectionRow^  parentSectionRowBySection_ColourRectProperty);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  NewColourRectPropertyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveColourRectPropertyRow(NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class FrameComponentDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImagerySection_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FrameComponentRowChangeEventHandler^  FrameComponentRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FrameComponentRowChangeEventHandler^  FrameComponentRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FrameComponentRowChangeEventHandler^  FrameComponentRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FrameComponentRowChangeEventHandler^  FrameComponentRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FrameComponentDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FrameComponentDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FrameComponentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImagerySection_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddFrameComponentRow(NinjaPlatformer::NewDataSet::FrameComponentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::FrameComponentRow^  AddFrameComponentRow(NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_FrameComponent);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::FrameComponentRow^  NewFrameComponentRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveFrameComponentRow(NinjaPlatformer::NewDataSet::FrameComponentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ImageDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columncomponent;
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageRowChangeEventHandler^  ImageRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageRowChangeEventHandler^  ImageRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageRowChangeEventHandler^  ImageRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageRowChangeEventHandler^  ImageRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  componentColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ImageRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddImageRow(NinjaPlatformer::NewDataSet::ImageRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImageRow^  AddImageRow(System::String^  component, System::String^  name, NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_Image, 
                        NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_Image);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImageRow^  NewImageRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveImageRow(NinjaPlatformer::NewDataSet::ImageRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ImagePropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columncomponent;
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagePropertyRowChangeEventHandler^  ImagePropertyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagePropertyRowChangeEventHandler^  ImagePropertyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagePropertyRowChangeEventHandler^  ImagePropertyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImagePropertyRowChangeEventHandler^  ImagePropertyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  componentColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagePropertyRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ImagePropertyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddImagePropertyRow(NinjaPlatformer::NewDataSet::ImagePropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImagePropertyRow^  AddImagePropertyRow(System::String^  component, System::String^  name, 
                        NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_ImageProperty, NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_ImageProperty);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImagePropertyRow^  NewImagePropertyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveImagePropertyRow(NinjaPlatformer::NewDataSet::ImagePropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class VertFormatDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columncomponent;
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertFormatRowChangeEventHandler^  VertFormatRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertFormatRowChangeEventHandler^  VertFormatRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertFormatRowChangeEventHandler^  VertFormatRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertFormatRowChangeEventHandler^  VertFormatRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  componentColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::VertFormatRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::VertFormatRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddVertFormatRow(NinjaPlatformer::NewDataSet::VertFormatRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::VertFormatRow^  AddVertFormatRow(System::String^  component, System::String^  type, 
                        NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_VertFormat, NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_VertFormat, 
                        NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_VertFormat);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::VertFormatRow^  NewVertFormatRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveVertFormatRow(NinjaPlatformer::NewDataSet::VertFormatRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class VertFormatPropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columncomponent;
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertFormatPropertyRowChangeEventHandler^  VertFormatPropertyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertFormatPropertyRowChangeEventHandler^  VertFormatPropertyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertFormatPropertyRowChangeEventHandler^  VertFormatPropertyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::VertFormatPropertyRowChangeEventHandler^  VertFormatPropertyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatPropertyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatPropertyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  componentColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddVertFormatPropertyRow(NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  AddVertFormatPropertyRow(System::String^  component, System::String^  name, 
                        NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_VertFormatProperty, 
                        NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_VertFormatProperty, 
                        NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_VertFormatProperty);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  NewVertFormatPropertyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveVertFormatPropertyRow(NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class HorzFormatDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columncomponent;
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzFormatRowChangeEventHandler^  HorzFormatRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzFormatRowChangeEventHandler^  HorzFormatRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzFormatRowChangeEventHandler^  HorzFormatRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzFormatRowChangeEventHandler^  HorzFormatRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  componentColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::HorzFormatRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::HorzFormatRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddHorzFormatRow(NinjaPlatformer::NewDataSet::HorzFormatRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::HorzFormatRow^  AddHorzFormatRow(System::String^  component, System::String^  type, 
                        NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_HorzFormat, NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_HorzFormat, 
                        NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_HorzFormat);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::HorzFormatRow^  NewHorzFormatRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveHorzFormatRow(NinjaPlatformer::NewDataSet::HorzFormatRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class HorzFormatPropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columncomponent;
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnFrameComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzFormatPropertyRowChangeEventHandler^  HorzFormatPropertyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzFormatPropertyRowChangeEventHandler^  HorzFormatPropertyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzFormatPropertyRowChangeEventHandler^  HorzFormatPropertyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::HorzFormatPropertyRowChangeEventHandler^  HorzFormatPropertyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatPropertyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatPropertyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  componentColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  FrameComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddHorzFormatPropertyRow(NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  AddHorzFormatPropertyRow(System::String^  component, System::String^  name, 
                        NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_HorzFormatProperty, 
                        NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_HorzFormatProperty, 
                        NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_HorzFormatProperty);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  NewHorzFormatPropertyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveHorzFormatPropertyRow(NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ImageryComponentDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnImageryComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImagerySection_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageryComponentRowChangeEventHandler^  ImageryComponentRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageryComponentRowChangeEventHandler^  ImageryComponentRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageryComponentRowChangeEventHandler^  ImageryComponentRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::ImageryComponentRowChangeEventHandler^  ImageryComponentRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageryComponentDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageryComponentDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageryComponentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImageryComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImagerySection_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddImageryComponentRow(NinjaPlatformer::NewDataSet::ImageryComponentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImageryComponentRow^  AddImageryComponentRow(NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_ImageryComponent);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewImageryComponentRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveImageryComponentRow(NinjaPlatformer::NewDataSet::ImageryComponentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class TextComponentDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            private: ::System::Data::DataColumn^  columnImagerySection_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextComponentRowChangeEventHandler^  TextComponentRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextComponentRowChangeEventHandler^  TextComponentRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextComponentRowChangeEventHandler^  TextComponentRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextComponentRowChangeEventHandler^  TextComponentRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextComponentDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextComponentDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextComponentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ImagerySection_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddTextComponentRow(NinjaPlatformer::NewDataSet::TextComponentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::TextComponentRow^  AddTextComponentRow(NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_TextComponent);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::TextComponentRow^  NewTextComponentRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveTextComponentRow(NinjaPlatformer::NewDataSet::TextComponentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class TextDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnstring;
            
            private: ::System::Data::DataColumn^  columnfont;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextRowChangeEventHandler^  TextRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextRowChangeEventHandler^  TextRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextRowChangeEventHandler^  TextRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextRowChangeEventHandler^  TextRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  stringColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  fontColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::TextRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddTextRow(NinjaPlatformer::NewDataSet::TextRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::TextRow^  AddTextRow(System::String^  string, System::String^  font, NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_Text);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::TextRow^  NewTextRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveTextRow(NinjaPlatformer::NewDataSet::TextRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class TextPropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextPropertyRowChangeEventHandler^  TextPropertyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextPropertyRowChangeEventHandler^  TextPropertyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextPropertyRowChangeEventHandler^  TextPropertyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::TextPropertyRowChangeEventHandler^  TextPropertyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextPropertyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextPropertyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextPropertyRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::TextPropertyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddTextPropertyRow(NinjaPlatformer::NewDataSet::TextPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::TextPropertyRow^  AddTextPropertyRow(System::String^  name, NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_TextProperty);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::TextPropertyRow^  NewTextPropertyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveTextPropertyRow(NinjaPlatformer::NewDataSet::TextPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class FontPropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnTextComponent_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FontPropertyRowChangeEventHandler^  FontPropertyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FontPropertyRowChangeEventHandler^  FontPropertyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FontPropertyRowChangeEventHandler^  FontPropertyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::FontPropertyRowChangeEventHandler^  FontPropertyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontPropertyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontPropertyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TextComponent_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FontPropertyRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::FontPropertyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddFontPropertyRow(NinjaPlatformer::NewDataSet::FontPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::FontPropertyRow^  AddFontPropertyRow(System::String^  name, NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_FontProperty);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::FontPropertyRow^  NewFontPropertyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveFontPropertyRow(NinjaPlatformer::NewDataSet::FontPropertyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class StateImageryDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnclipped;
            
            private: ::System::Data::DataColumn^  columnStateImagery_Id;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::StateImageryRowChangeEventHandler^  StateImageryRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::StateImageryRowChangeEventHandler^  StateImageryRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::StateImageryRowChangeEventHandler^  StateImageryRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::StateImageryRowChangeEventHandler^  StateImageryRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            StateImageryDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            StateImageryDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            StateImageryDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  clippedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  StateImagery_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::StateImageryRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::StateImageryRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddStateImageryRow(NinjaPlatformer::NewDataSet::StateImageryRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::StateImageryRow^  AddStateImageryRow(System::String^  name, System::Boolean clipped, 
                        NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_StateImagery);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::StateImageryRow^  NewStateImageryRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveStateImageryRow(NinjaPlatformer::NewDataSet::StateImageryRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class LayerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnpriority;
            
            private: ::System::Data::DataColumn^  columnLayer_Id;
            
            private: ::System::Data::DataColumn^  columnStateImagery_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::LayerRowChangeEventHandler^  LayerRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::LayerRowChangeEventHandler^  LayerRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::LayerRowChangeEventHandler^  LayerRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::LayerRowChangeEventHandler^  LayerRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            LayerDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            LayerDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            LayerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  priorityColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Layer_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  StateImagery_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::LayerRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::LayerRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddLayerRow(NinjaPlatformer::NewDataSet::LayerRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::LayerRow^  AddLayerRow(System::Int64 priority, NinjaPlatformer::NewDataSet::StateImageryRow^  parentStateImageryRowByStateImagery_Layer);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::LayerRow^  NewLayerRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveLayerRow(NinjaPlatformer::NewDataSet::LayerRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class SectionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnlook;
            
            private: ::System::Data::DataColumn^  columnsection;
            
            private: ::System::Data::DataColumn^  columncontrolProperty;
            
            private: ::System::Data::DataColumn^  columncontrolValue;
            
            private: ::System::Data::DataColumn^  columncontrolWidget;
            
            private: ::System::Data::DataColumn^  columnSection_Id;
            
            private: ::System::Data::DataColumn^  columnLayer_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::SectionRowChangeEventHandler^  SectionRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::SectionRowChangeEventHandler^  SectionRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::SectionRowChangeEventHandler^  SectionRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::SectionRowChangeEventHandler^  SectionRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SectionDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SectionDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SectionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  lookColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sectionColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  controlPropertyColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  controlValueColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  controlWidgetColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Section_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Layer_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::SectionRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::SectionRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddSectionRow(NinjaPlatformer::NewDataSet::SectionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::SectionRow^  AddSectionRow(
                        System::String^  look, 
                        System::String^  section, 
                        System::String^  controlProperty, 
                        System::String^  controlValue, 
                        System::String^  controlWidget, 
                        NinjaPlatformer::NewDataSet::LayerRow^  parentLayerRowByLayer_Section);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::SectionRow^  NewSectionRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveSectionRow(NinjaPlatformer::NewDataSet::SectionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class AnimationDefinitionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnduration;
            
            private: ::System::Data::DataColumn^  columnreplayMode;
            
            private: ::System::Data::DataColumn^  columnautoStart;
            
            private: ::System::Data::DataColumn^  columnAnimationDefinition_Id;
            
            private: ::System::Data::DataColumn^  columnWidgetLook_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AnimationDefinitionRowChangeEventHandler^  AnimationDefinitionRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AnimationDefinitionRowChangeEventHandler^  AnimationDefinitionRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AnimationDefinitionRowChangeEventHandler^  AnimationDefinitionRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AnimationDefinitionRowChangeEventHandler^  AnimationDefinitionRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AnimationDefinitionDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AnimationDefinitionDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AnimationDefinitionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  durationColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  replayModeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  autoStartColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  AnimationDefinition_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  WidgetLook_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddAnimationDefinitionRow(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  AddAnimationDefinitionRow(System::String^  name, System::Decimal duration, 
                        System::String^  replayMode, System::Boolean autoStart, NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_AnimationDefinition);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  NewAnimationDefinitionRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveAnimationDefinitionRow(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class AffectorDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnapplicationMethod;
            
            private: ::System::Data::DataColumn^  column_property;
            
            private: ::System::Data::DataColumn^  columninterpolator;
            
            private: ::System::Data::DataColumn^  columnAffector_Id;
            
            private: ::System::Data::DataColumn^  columnAnimationDefinition_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AffectorRowChangeEventHandler^  AffectorRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AffectorRowChangeEventHandler^  AffectorRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AffectorRowChangeEventHandler^  AffectorRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::AffectorRowChangeEventHandler^  AffectorRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AffectorDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AffectorDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AffectorDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  applicationMethodColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  _propertyColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  interpolatorColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Affector_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  AnimationDefinition_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AffectorRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::AffectorRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddAffectorRow(NinjaPlatformer::NewDataSet::AffectorRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AffectorRow^  AddAffectorRow(System::String^  applicationMethod, System::String^  _property, 
                        System::String^  interpolator, NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  parentAnimationDefinitionRowByAnimationDefinition_Affector);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::AffectorRow^  NewAffectorRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveAffectorRow(NinjaPlatformer::NewDataSet::AffectorRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class KeyFrameDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnposition;
            
            private: ::System::Data::DataColumn^  column_value;
            
            private: ::System::Data::DataColumn^  columnprogression;
            
            private: ::System::Data::DataColumn^  columnsourceProperty;
            
            private: ::System::Data::DataColumn^  columnAffector_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::KeyFrameRowChangeEventHandler^  KeyFrameRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::KeyFrameRowChangeEventHandler^  KeyFrameRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::KeyFrameRowChangeEventHandler^  KeyFrameRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::KeyFrameRowChangeEventHandler^  KeyFrameRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            KeyFrameDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            KeyFrameDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            KeyFrameDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  positionColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  _valueColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  progressionColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sourcePropertyColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Affector_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::KeyFrameRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::KeyFrameRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddKeyFrameRow(NinjaPlatformer::NewDataSet::KeyFrameRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::KeyFrameRow^  AddKeyFrameRow(System::Decimal position, System::String^  _value, 
                        System::String^  progression, System::String^  sourceProperty, NinjaPlatformer::NewDataSet::AffectorRow^  parentAffectorRowByAffector_KeyFrame);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::KeyFrameRow^  NewKeyFrameRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveKeyFrameRow(NinjaPlatformer::NewDataSet::KeyFrameRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class SubscriptionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  column_event;
            
            private: ::System::Data::DataColumn^  columnaction;
            
            private: ::System::Data::DataColumn^  columnAnimationDefinition_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::SubscriptionRowChangeEventHandler^  SubscriptionRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::SubscriptionRowChangeEventHandler^  SubscriptionRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::SubscriptionRowChangeEventHandler^  SubscriptionRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event NinjaPlatformer::NewDataSet::SubscriptionRowChangeEventHandler^  SubscriptionRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SubscriptionDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SubscriptionDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SubscriptionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  _eventColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  actionColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  AnimationDefinition_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::SubscriptionRow^  default [::System::Int32 ] {
                NinjaPlatformer::NewDataSet::SubscriptionRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddSubscriptionRow(NinjaPlatformer::NewDataSet::SubscriptionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::SubscriptionRow^  AddSubscriptionRow(System::String^  _event, System::String^  action, 
                        NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  parentAnimationDefinitionRowByAnimationDefinition_Subscription);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NinjaPlatformer::NewDataSet::SubscriptionRow^  NewSubscriptionRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveSubscriptionRow(NinjaPlatformer::NewDataSet::SubscriptionRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class FalagardRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::FalagardDataTable^  tableFalagard;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FalagardRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::UInt64 version {
                System::UInt64 get();
                System::Void set(System::UInt64 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Falagard_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsversionNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetversionNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::WidgetLookRow^  >^  GetWidgetLookRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class WidgetLookRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::WidgetLookDataTable^  tableWidgetLook;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetLookRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  inherits {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Falagard_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FalagardRow^  FalagardRow {
                NinjaPlatformer::NewDataSet::FalagardRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FalagardRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsinheritsNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetinheritsNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFalagard_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFalagard_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >^  GetEventLinkDefinitionRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >^  GetPropertyDefinitionRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >^  GetPropertyLinkDefinitionRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::PropertyRow^  >^  GetPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::NamedAreaRow^  >^  GetNamedAreaRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ChildRow^  >^  GetChildRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImagerySectionRow^  >^  GetImagerySectionRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::StateImageryRow^  >^  GetStateImageryRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >^  GetAnimationDefinitionRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class EventLinkDefinitionRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable^  tableEventLinkDefinition;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkDefinitionRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  widget {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  _event {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 EventLinkDefinition_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  WidgetLookRow {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IswidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetwidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Is_eventNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Set_eventNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >^  GetEventLinkTargetRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class EventLinkTargetRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::EventLinkTargetDataTable^  tableEventLinkTarget;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkTargetRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  widget {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  _event {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 EventLinkDefinition_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  EventLinkDefinitionRow {
                NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Is_eventNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Set_eventNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsEventLinkDefinition_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetEventLinkDefinition_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class PropertyDefinitionRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable^  tablePropertyDefinition;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDefinitionRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  initialValue {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Boolean layoutOnWrite {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Boolean redrawOnWrite {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  help {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  fireEvent {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  WidgetLookRow {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IstypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SettypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsinitialValueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetinitialValueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IslayoutOnWriteNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetlayoutOnWriteNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsredrawOnWriteNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetredrawOnWriteNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IshelpNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SethelpNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsfireEventNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetfireEventNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetWidgetLook_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class PropertyLinkDefinitionRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable^  tablePropertyLinkDefinition;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkDefinitionRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  widget {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  targetProperty {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  initialValue {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Boolean layoutOnWrite {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Boolean redrawOnWrite {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  fireEvent {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 PropertyLinkDefinition_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  WidgetLookRow {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IstypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SettypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IswidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetwidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IstargetPropertyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SettargetPropertyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsinitialValueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetinitialValueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IslayoutOnWriteNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetlayoutOnWriteNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsredrawOnWriteNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetredrawOnWriteNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsfireEventNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetfireEventNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >^  GetPropertyLinkTargetRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class PropertyLinkTargetRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable^  tablePropertyLinkTarget;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkTargetRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  widget {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  _property {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 PropertyLinkDefinition_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  PropertyLinkDefinitionRow {
                NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Is_propertyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Set_propertyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsPropertyLinkDefinition_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetPropertyLinkDefinition_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class PropertyRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::PropertyDataTable^  tableProperty;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  _value {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Child_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ChildRow^  ChildRow {
                NinjaPlatformer::NewDataSet::ChildRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ChildRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  WidgetLookRow {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsChild_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetChild_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetWidgetLook_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class NamedAreaRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::NamedAreaDataTable^  tableNamedArea;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 NamedArea_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  WidgetLookRow {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  GetAreaRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class AreaRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::AreaDataTable^  tableArea;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Area_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 NamedArea_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Child_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::NamedAreaRow^  NamedAreaRow {
                NinjaPlatformer::NewDataSet::NamedAreaRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::NamedAreaRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ChildRow^  ChildRow {
                NinjaPlatformer::NewDataSet::ChildRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ChildRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsNamedArea_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetNamedArea_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsChild_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetChild_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::DimRow^  >^  GetDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AreaPropertyRow^  >^  GetAreaPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >^  GetNamedAreaSourceRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class DimRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::DimDataTable^  tableDim;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            DimRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Dim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Area_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AreaRow^  AreaRow {
                NinjaPlatformer::NewDataSet::AreaRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::AreaRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsArea_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetArea_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::UnifiedDimRow^  >^  GetUnifiedDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >^  GetAbsoluteDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImageDimRow^  >^  GetImageDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >^  GetImagePropertyDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::WidgetDimRow^  >^  GetWidgetDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::FontDimRow^  >^  GetFontDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::PropertyDimRow^  >^  GetPropertyDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::OperatorDimRow^  >^  GetOperatorDimRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class UnifiedDimRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::UnifiedDimDataTable^  tableUnifiedDim;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            UnifiedDimRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Decimal scale {
                System::Decimal get();
                System::Void set(System::Decimal value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int64 offset {
                System::Int64 get();
                System::Void set(System::Int64 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 OperatorDim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Dim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  OperatorDimRow {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  DimRow {
                NinjaPlatformer::NewDataSet::DimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::DimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsscaleNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetscaleNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsoffsetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetoffsetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetDim_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class AbsoluteDimRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::AbsoluteDimDataTable^  tableAbsoluteDim;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AbsoluteDimRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Decimal _value {
                System::Decimal get();
                System::Void set(System::Decimal value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 OperatorDim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Dim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  OperatorDimRow {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  DimRow {
                NinjaPlatformer::NewDataSet::DimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::DimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Is_valueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Set_valueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetDim_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ImageDimRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ImageDimDataTable^  tableImageDim;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageDimRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  dimension {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 OperatorDim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Dim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  OperatorDimRow {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  DimRow {
                NinjaPlatformer::NewDataSet::DimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::DimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetDim_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ImagePropertyDimRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable^  tableImagePropertyDim;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyDimRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  dimension {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 OperatorDim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Dim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  OperatorDimRow {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  DimRow {
                NinjaPlatformer::NewDataSet::DimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::DimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetDim_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class WidgetDimRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::WidgetDimDataTable^  tableWidgetDim;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetDimRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  widget {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  dimension {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 OperatorDim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Dim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  OperatorDimRow {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  DimRow {
                NinjaPlatformer::NewDataSet::DimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::DimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IswidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetwidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetDim_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class FontDimRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::FontDimDataTable^  tableFontDim;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontDimRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  widget {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  font {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  string {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Decimal padding {
                System::Decimal get();
                System::Void set(System::Decimal value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 OperatorDim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Dim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  OperatorDimRow {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  DimRow {
                NinjaPlatformer::NewDataSet::DimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::DimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IswidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetwidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsfontNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetfontNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsstringNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetstringNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IspaddingNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetpaddingNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetDim_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class PropertyDimRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::PropertyDimDataTable^  tablePropertyDim;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDimRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  widget {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 OperatorDim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Dim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  OperatorDimRow {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  DimRow {
                NinjaPlatformer::NewDataSet::DimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::DimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IswidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetwidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IstypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SettypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetOperatorDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetDim_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class OperatorDimRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::OperatorDimDataTable^  tableOperatorDim;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            OperatorDimRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  op {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 OperatorDim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 OperatorDim_Id_0 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Dim_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  OperatorDimRowParent {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  DimRow {
                NinjaPlatformer::NewDataSet::DimRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::DimRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsOperatorDim_Id_0Null();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetOperatorDim_Id_0Null();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetDim_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::UnifiedDimRow^  >^  GetUnifiedDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >^  GetAbsoluteDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImageDimRow^  >^  GetImageDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >^  GetImagePropertyDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::WidgetDimRow^  >^  GetWidgetDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::FontDimRow^  >^  GetFontDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::PropertyDimRow^  >^  GetPropertyDimRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::OperatorDimRow^  >^  GetOperatorDimRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class AreaPropertyRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::AreaPropertyDataTable^  tableAreaProperty;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaPropertyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Area_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AreaRow^  AreaRow {
                NinjaPlatformer::NewDataSet::AreaRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::AreaRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsArea_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetArea_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class NamedAreaSourceRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable^  tableNamedAreaSource;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaSourceRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  look {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Area_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AreaRow^  AreaRow {
                NinjaPlatformer::NewDataSet::AreaRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::AreaRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IslookNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetlookNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsArea_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetArea_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ChildRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ChildDataTable^  tableChild;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ChildRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  nameSuffix {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  renderer {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  look {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Boolean autoWindow {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Child_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  WidgetLookRow {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsrendererNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetrendererNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IslookNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetlookNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsautoWindowNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetautoWindowNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::EventActionRow^  >^  GetEventActionRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  GetAreaRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::VertAlignmentRow^  >^  GetVertAlignmentRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >^  GetHorzAlignmentRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::PropertyRow^  >^  GetPropertyRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class EventActionRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::EventActionDataTable^  tableEventAction;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventActionRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  _event {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  action {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Child_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ChildRow^  ChildRow {
                NinjaPlatformer::NewDataSet::ChildRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ChildRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsChild_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetChild_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class VertAlignmentRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::VertAlignmentDataTable^  tableVertAlignment;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertAlignmentRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Child_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ChildRow^  ChildRow {
                NinjaPlatformer::NewDataSet::ChildRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ChildRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsChild_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetChild_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class HorzAlignmentRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::HorzAlignmentDataTable^  tableHorzAlignment;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzAlignmentRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Child_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ChildRow^  ChildRow {
                NinjaPlatformer::NewDataSet::ChildRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ChildRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsChild_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetChild_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ImagerySectionRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ImagerySectionDataTable^  tableImagerySection;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagerySectionRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImagerySection_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  WidgetLookRow {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  GetColourRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  GetColoursRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  GetColourPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  GetColourRectPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::FrameComponentRow^  >^  GetFrameComponentRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImageryComponentRow^  >^  GetImageryComponentRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::TextComponentRow^  >^  GetTextComponentRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ColourRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ColourDataTable^  tableColour;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  colour {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImagerySection_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Section_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagerySectionRow^  ImagerySectionRow {
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::SectionRow^  SectionRow {
                NinjaPlatformer::NewDataSet::SectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::SectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsSection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetSection_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ColoursRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ColoursDataTable^  tableColours;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColoursRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  topLeft {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  topRight {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  bottomLeft {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  bottomRight {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImagerySection_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Section_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagerySectionRow^  ImagerySectionRow {
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::SectionRow^  SectionRow {
                NinjaPlatformer::NewDataSet::SectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::SectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsSection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetSection_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ColourPropertyRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ColourPropertyDataTable^  tableColourProperty;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourPropertyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImagerySection_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Section_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagerySectionRow^  ImagerySectionRow {
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::SectionRow^  SectionRow {
                NinjaPlatformer::NewDataSet::SectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::SectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsSection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetSection_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ColourRectPropertyRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable^  tableColourRectProperty;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourRectPropertyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImagerySection_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Section_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagerySectionRow^  ImagerySectionRow {
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::SectionRow^  SectionRow {
                NinjaPlatformer::NewDataSet::SectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::SectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsSection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetSection_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class FrameComponentRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::FrameComponentDataTable^  tableFrameComponent;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FrameComponentRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImagerySection_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagerySectionRow^  ImagerySectionRow {
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  GetAreaRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImageRow^  >^  GetImageRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImagePropertyRow^  >^  GetImagePropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  GetColourRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  GetColoursRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  GetColourPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  GetColourRectPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >^  GetVertFormatRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >^  GetVertFormatPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >^  GetHorzFormatRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >^  GetHorzFormatPropertyRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ImageRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ImageDataTable^  tableImage;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  component {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ImagePropertyRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ImagePropertyDataTable^  tableImageProperty;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  component {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class VertFormatRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::VertFormatDataTable^  tableVertFormat;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  component {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IscomponentNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetcomponentNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IstypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SettypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class VertFormatPropertyRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable^  tableVertFormatProperty;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatPropertyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  component {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IscomponentNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetcomponentNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class HorzFormatRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::HorzFormatDataTable^  tableHorzFormat;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  component {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IscomponentNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetcomponentNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IstypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SettypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class HorzFormatPropertyRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable^  tableHorzFormatProperty;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatPropertyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  component {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 FrameComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  FrameComponentRow {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  ImageryComponentRow {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IscomponentNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetcomponentNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetFrameComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImageryComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ImageryComponentRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::ImageryComponentDataTable^  tableImageryComponent;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageryComponentRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImageryComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImagerySection_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagerySectionRow^  ImagerySectionRow {
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  GetAreaRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImageRow^  >^  GetImageRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ImagePropertyRow^  >^  GetImagePropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  GetColourRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  GetColoursRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  GetColourPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  GetColourRectPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >^  GetVertFormatRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >^  GetVertFormatPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >^  GetHorzFormatRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >^  GetHorzFormatPropertyRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class TextComponentRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::TextComponentDataTable^  tableTextComponent;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextComponentRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ImagerySection_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagerySectionRow^  ImagerySectionRow {
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetImagerySection_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  GetAreaRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::TextRow^  >^  GetTextRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::TextPropertyRow^  >^  GetTextPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::FontPropertyRow^  >^  GetFontPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  GetColourRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  GetColoursRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  GetColourPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  GetColourRectPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >^  GetVertFormatRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >^  GetVertFormatPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >^  GetHorzFormatRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >^  GetHorzFormatPropertyRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class TextRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::TextDataTable^  tableText;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  string {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  font {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsstringNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetstringNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsfontNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetfontNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class TextPropertyRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::TextPropertyDataTable^  tableTextProperty;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextPropertyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class FontPropertyRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::FontPropertyDataTable^  tableFontProperty;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontPropertyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 TextComponent_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  TextComponentRow {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::TextComponentRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsTextComponent_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetTextComponent_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class StateImageryRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::StateImageryDataTable^  tableStateImagery;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            StateImageryRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Boolean clipped {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 StateImagery_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  WidgetLookRow {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsclippedNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetclippedNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::LayerRow^  >^  GetLayerRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class LayerRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::LayerDataTable^  tableLayer;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            LayerRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int64 priority {
                System::Int64 get();
                System::Void set(System::Int64 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Layer_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 StateImagery_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::StateImageryRow^  StateImageryRow {
                NinjaPlatformer::NewDataSet::StateImageryRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::StateImageryRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IspriorityNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetpriorityNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsStateImagery_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetStateImagery_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::SectionRow^  >^  GetSectionRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class SectionRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::SectionDataTable^  tableSection;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SectionRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  look {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  section {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  controlProperty {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  controlValue {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  controlWidget {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Section_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Layer_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::LayerRow^  LayerRow {
                NinjaPlatformer::NewDataSet::LayerRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::LayerRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IslookNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetlookNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IscontrolPropertyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetcontrolPropertyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IscontrolValueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetcontrolValueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IscontrolWidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetcontrolWidgetNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsLayer_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetLayer_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  GetColourRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  GetColoursRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  GetColourPropertyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  GetColourRectPropertyRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class AnimationDefinitionRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable^  tableAnimationDefinition;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AnimationDefinitionRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Decimal duration {
                System::Decimal get();
                System::Void set(System::Decimal value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  replayMode {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Boolean autoStart {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 AnimationDefinition_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 WidgetLook_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  WidgetLookRow {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsreplayModeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetreplayModeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsautoStartNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetautoStartNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetWidgetLook_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::AffectorRow^  >^  GetAffectorRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::SubscriptionRow^  >^  GetSubscriptionRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class AffectorRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::AffectorDataTable^  tableAffector;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AffectorRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  applicationMethod {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  _property {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  interpolator {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Affector_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 AnimationDefinition_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  AnimationDefinitionRow {
                NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsapplicationMethodNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetapplicationMethodNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsAnimationDefinition_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetAnimationDefinition_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< NinjaPlatformer::NewDataSet::KeyFrameRow^  >^  GetKeyFrameRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class KeyFrameRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::KeyFrameDataTable^  tableKeyFrame;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            KeyFrameRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Decimal position {
                System::Decimal get();
                System::Void set(System::Decimal value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  _value {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  progression {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  sourceProperty {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Affector_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AffectorRow^  AffectorRow {
                NinjaPlatformer::NewDataSet::AffectorRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::AffectorRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Is_valueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Set_valueNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsprogressionNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetprogressionNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IssourcePropertyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetsourcePropertyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsAffector_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetAffector_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class SubscriptionRow : public ::System::Data::DataRow {
            
            private: NinjaPlatformer::NewDataSet::SubscriptionDataTable^  tableSubscription;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SubscriptionRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  _event {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  action {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 AnimationDefinition_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  AnimationDefinitionRow {
                NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  get();
                System::Void set(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsAnimationDefinition_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetAnimationDefinition_IdNull();
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class FalagardRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::FalagardRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FalagardRowChangeEvent(NinjaPlatformer::NewDataSet::FalagardRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FalagardRow^  Row {
                NinjaPlatformer::NewDataSet::FalagardRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class WidgetLookRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::WidgetLookRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetLookRowChangeEvent(NinjaPlatformer::NewDataSet::WidgetLookRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetLookRow^  Row {
                NinjaPlatformer::NewDataSet::WidgetLookRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class EventLinkDefinitionRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkDefinitionRowChangeEvent(NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  Row {
                NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class EventLinkTargetRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::EventLinkTargetRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventLinkTargetRowChangeEvent(NinjaPlatformer::NewDataSet::EventLinkTargetRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::EventLinkTargetRow^  Row {
                NinjaPlatformer::NewDataSet::EventLinkTargetRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class PropertyDefinitionRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDefinitionRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  Row {
                NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class PropertyLinkDefinitionRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkDefinitionRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  Row {
                NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class PropertyLinkTargetRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyLinkTargetRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  Row {
                NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class PropertyRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::PropertyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyRow^  Row {
                NinjaPlatformer::NewDataSet::PropertyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class NamedAreaRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::NamedAreaRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaRowChangeEvent(NinjaPlatformer::NewDataSet::NamedAreaRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::NamedAreaRow^  Row {
                NinjaPlatformer::NewDataSet::NamedAreaRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class AreaRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::AreaRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaRowChangeEvent(NinjaPlatformer::NewDataSet::AreaRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AreaRow^  Row {
                NinjaPlatformer::NewDataSet::AreaRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class DimRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::DimRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            DimRowChangeEvent(NinjaPlatformer::NewDataSet::DimRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::DimRow^  Row {
                NinjaPlatformer::NewDataSet::DimRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class UnifiedDimRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::UnifiedDimRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            UnifiedDimRowChangeEvent(NinjaPlatformer::NewDataSet::UnifiedDimRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::UnifiedDimRow^  Row {
                NinjaPlatformer::NewDataSet::UnifiedDimRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class AbsoluteDimRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::AbsoluteDimRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AbsoluteDimRowChangeEvent(NinjaPlatformer::NewDataSet::AbsoluteDimRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AbsoluteDimRow^  Row {
                NinjaPlatformer::NewDataSet::AbsoluteDimRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ImageDimRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ImageDimRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageDimRowChangeEvent(NinjaPlatformer::NewDataSet::ImageDimRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageDimRow^  Row {
                NinjaPlatformer::NewDataSet::ImageDimRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ImagePropertyDimRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyDimRowChangeEvent(NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  Row {
                NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class WidgetDimRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::WidgetDimRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            WidgetDimRowChangeEvent(NinjaPlatformer::NewDataSet::WidgetDimRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::WidgetDimRow^  Row {
                NinjaPlatformer::NewDataSet::WidgetDimRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class FontDimRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::FontDimRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontDimRowChangeEvent(NinjaPlatformer::NewDataSet::FontDimRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FontDimRow^  Row {
                NinjaPlatformer::NewDataSet::FontDimRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class PropertyDimRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::PropertyDimRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            PropertyDimRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyDimRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::PropertyDimRow^  Row {
                NinjaPlatformer::NewDataSet::PropertyDimRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class OperatorDimRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::OperatorDimRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            OperatorDimRowChangeEvent(NinjaPlatformer::NewDataSet::OperatorDimRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::OperatorDimRow^  Row {
                NinjaPlatformer::NewDataSet::OperatorDimRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class AreaPropertyRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::AreaPropertyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AreaPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::AreaPropertyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AreaPropertyRow^  Row {
                NinjaPlatformer::NewDataSet::AreaPropertyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class NamedAreaSourceRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            NamedAreaSourceRowChangeEvent(NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  Row {
                NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ChildRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ChildRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ChildRowChangeEvent(NinjaPlatformer::NewDataSet::ChildRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ChildRow^  Row {
                NinjaPlatformer::NewDataSet::ChildRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class EventActionRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::EventActionRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EventActionRowChangeEvent(NinjaPlatformer::NewDataSet::EventActionRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::EventActionRow^  Row {
                NinjaPlatformer::NewDataSet::EventActionRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class VertAlignmentRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::VertAlignmentRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertAlignmentRowChangeEvent(NinjaPlatformer::NewDataSet::VertAlignmentRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::VertAlignmentRow^  Row {
                NinjaPlatformer::NewDataSet::VertAlignmentRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class HorzAlignmentRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::HorzAlignmentRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzAlignmentRowChangeEvent(NinjaPlatformer::NewDataSet::HorzAlignmentRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::HorzAlignmentRow^  Row {
                NinjaPlatformer::NewDataSet::HorzAlignmentRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ImagerySectionRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ImagerySectionRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagerySectionRowChangeEvent(NinjaPlatformer::NewDataSet::ImagerySectionRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagerySectionRow^  Row {
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ColourRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ColourRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourRowChangeEvent(NinjaPlatformer::NewDataSet::ColourRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ColourRow^  Row {
                NinjaPlatformer::NewDataSet::ColourRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ColoursRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ColoursRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColoursRowChangeEvent(NinjaPlatformer::NewDataSet::ColoursRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ColoursRow^  Row {
                NinjaPlatformer::NewDataSet::ColoursRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ColourPropertyRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ColourPropertyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::ColourPropertyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ColourPropertyRow^  Row {
                NinjaPlatformer::NewDataSet::ColourPropertyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ColourRectPropertyRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ColourRectPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  Row {
                NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class FrameComponentRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::FrameComponentRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FrameComponentRowChangeEvent(NinjaPlatformer::NewDataSet::FrameComponentRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FrameComponentRow^  Row {
                NinjaPlatformer::NewDataSet::FrameComponentRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ImageRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ImageRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageRowChangeEvent(NinjaPlatformer::NewDataSet::ImageRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageRow^  Row {
                NinjaPlatformer::NewDataSet::ImageRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ImagePropertyRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ImagePropertyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImagePropertyRowChangeEvent(NinjaPlatformer::NewDataSet::ImagePropertyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImagePropertyRow^  Row {
                NinjaPlatformer::NewDataSet::ImagePropertyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class VertFormatRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::VertFormatRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatRowChangeEvent(NinjaPlatformer::NewDataSet::VertFormatRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::VertFormatRow^  Row {
                NinjaPlatformer::NewDataSet::VertFormatRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class VertFormatPropertyRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            VertFormatPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  Row {
                NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class HorzFormatRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::HorzFormatRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatRowChangeEvent(NinjaPlatformer::NewDataSet::HorzFormatRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::HorzFormatRow^  Row {
                NinjaPlatformer::NewDataSet::HorzFormatRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class HorzFormatPropertyRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            HorzFormatPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  Row {
                NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ImageryComponentRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::ImageryComponentRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ImageryComponentRowChangeEvent(NinjaPlatformer::NewDataSet::ImageryComponentRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::ImageryComponentRow^  Row {
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class TextComponentRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::TextComponentRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextComponentRowChangeEvent(NinjaPlatformer::NewDataSet::TextComponentRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextComponentRow^  Row {
                NinjaPlatformer::NewDataSet::TextComponentRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class TextRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::TextRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextRowChangeEvent(NinjaPlatformer::NewDataSet::TextRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextRow^  Row {
                NinjaPlatformer::NewDataSet::TextRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class TextPropertyRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::TextPropertyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            TextPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::TextPropertyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::TextPropertyRow^  Row {
                NinjaPlatformer::NewDataSet::TextPropertyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class FontPropertyRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::FontPropertyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            FontPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::FontPropertyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::FontPropertyRow^  Row {
                NinjaPlatformer::NewDataSet::FontPropertyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class StateImageryRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::StateImageryRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            StateImageryRowChangeEvent(NinjaPlatformer::NewDataSet::StateImageryRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::StateImageryRow^  Row {
                NinjaPlatformer::NewDataSet::StateImageryRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class LayerRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::LayerRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            LayerRowChangeEvent(NinjaPlatformer::NewDataSet::LayerRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::LayerRow^  Row {
                NinjaPlatformer::NewDataSet::LayerRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class SectionRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::SectionRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SectionRowChangeEvent(NinjaPlatformer::NewDataSet::SectionRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::SectionRow^  Row {
                NinjaPlatformer::NewDataSet::SectionRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class AnimationDefinitionRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AnimationDefinitionRowChangeEvent(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  Row {
                NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class AffectorRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::AffectorRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            AffectorRowChangeEvent(NinjaPlatformer::NewDataSet::AffectorRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::AffectorRow^  Row {
                NinjaPlatformer::NewDataSet::AffectorRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class KeyFrameRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::KeyFrameRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            KeyFrameRowChangeEvent(NinjaPlatformer::NewDataSet::KeyFrameRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::KeyFrameRow^  Row {
                NinjaPlatformer::NewDataSet::KeyFrameRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class SubscriptionRowChangeEvent : public ::System::EventArgs {
            
            private: NinjaPlatformer::NewDataSet::SubscriptionRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            SubscriptionRowChangeEvent(NinjaPlatformer::NewDataSet::SubscriptionRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property NinjaPlatformer::NewDataSet::SubscriptionRow^  Row {
                NinjaPlatformer::NewDataSet::SubscriptionRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
    };
}
namespace NinjaPlatformer {
    
    
    inline NewDataSet::NewDataSet() {
        this->BeginInit();
        this->InitClass();
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &NinjaPlatformer::NewDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        __super::Relations->CollectionChanged += schemaChangedHandler;
        this->EndInit();
    }
    
    inline NewDataSet::NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataSet(info, context, false) {
        if (this->IsBinarySerialized(info, context) == true) {
            this->InitVars(false);
            ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler1 = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &NinjaPlatformer::NewDataSet::SchemaChanged);
            this->Tables->CollectionChanged += schemaChangedHandler1;
            this->Relations->CollectionChanged += schemaChangedHandler1;
            return;
        }
        ::System::String^  strSchema = (cli::safe_cast<::System::String^  >(info->GetValue(L"XmlSchema", ::System::String::typeid)));
        if (this->DetermineSchemaSerializationMode(info, context) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
            if (ds->Tables[L"Falagard"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::FalagardDataTable(ds->Tables[L"Falagard"])));
            }
            if (ds->Tables[L"WidgetLook"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::WidgetLookDataTable(ds->Tables[L"WidgetLook"])));
            }
            if (ds->Tables[L"EventLinkDefinition"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable(ds->Tables[L"EventLinkDefinition"])));
            }
            if (ds->Tables[L"EventLinkTarget"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::EventLinkTargetDataTable(ds->Tables[L"EventLinkTarget"])));
            }
            if (ds->Tables[L"PropertyDefinition"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable(ds->Tables[L"PropertyDefinition"])));
            }
            if (ds->Tables[L"PropertyLinkDefinition"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable(ds->Tables[L"PropertyLinkDefinition"])));
            }
            if (ds->Tables[L"PropertyLinkTarget"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable(ds->Tables[L"PropertyLinkTarget"])));
            }
            if (ds->Tables[L"Property"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyDataTable(ds->Tables[L"Property"])));
            }
            if (ds->Tables[L"NamedArea"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::NamedAreaDataTable(ds->Tables[L"NamedArea"])));
            }
            if (ds->Tables[L"Area"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AreaDataTable(ds->Tables[L"Area"])));
            }
            if (ds->Tables[L"Dim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::DimDataTable(ds->Tables[L"Dim"])));
            }
            if (ds->Tables[L"UnifiedDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::UnifiedDimDataTable(ds->Tables[L"UnifiedDim"])));
            }
            if (ds->Tables[L"AbsoluteDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AbsoluteDimDataTable(ds->Tables[L"AbsoluteDim"])));
            }
            if (ds->Tables[L"ImageDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImageDimDataTable(ds->Tables[L"ImageDim"])));
            }
            if (ds->Tables[L"ImagePropertyDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable(ds->Tables[L"ImagePropertyDim"])));
            }
            if (ds->Tables[L"WidgetDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::WidgetDimDataTable(ds->Tables[L"WidgetDim"])));
            }
            if (ds->Tables[L"FontDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::FontDimDataTable(ds->Tables[L"FontDim"])));
            }
            if (ds->Tables[L"PropertyDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyDimDataTable(ds->Tables[L"PropertyDim"])));
            }
            if (ds->Tables[L"OperatorDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::OperatorDimDataTable(ds->Tables[L"OperatorDim"])));
            }
            if (ds->Tables[L"AreaProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AreaPropertyDataTable(ds->Tables[L"AreaProperty"])));
            }
            if (ds->Tables[L"NamedAreaSource"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable(ds->Tables[L"NamedAreaSource"])));
            }
            if (ds->Tables[L"Child"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ChildDataTable(ds->Tables[L"Child"])));
            }
            if (ds->Tables[L"EventAction"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::EventActionDataTable(ds->Tables[L"EventAction"])));
            }
            if (ds->Tables[L"VertAlignment"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::VertAlignmentDataTable(ds->Tables[L"VertAlignment"])));
            }
            if (ds->Tables[L"HorzAlignment"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::HorzAlignmentDataTable(ds->Tables[L"HorzAlignment"])));
            }
            if (ds->Tables[L"ImagerySection"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImagerySectionDataTable(ds->Tables[L"ImagerySection"])));
            }
            if (ds->Tables[L"Colour"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ColourDataTable(ds->Tables[L"Colour"])));
            }
            if (ds->Tables[L"Colours"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ColoursDataTable(ds->Tables[L"Colours"])));
            }
            if (ds->Tables[L"ColourProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ColourPropertyDataTable(ds->Tables[L"ColourProperty"])));
            }
            if (ds->Tables[L"ColourRectProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable(ds->Tables[L"ColourRectProperty"])));
            }
            if (ds->Tables[L"FrameComponent"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::FrameComponentDataTable(ds->Tables[L"FrameComponent"])));
            }
            if (ds->Tables[L"Image"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImageDataTable(ds->Tables[L"Image"])));
            }
            if (ds->Tables[L"ImageProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImagePropertyDataTable(ds->Tables[L"ImageProperty"])));
            }
            if (ds->Tables[L"VertFormat"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::VertFormatDataTable(ds->Tables[L"VertFormat"])));
            }
            if (ds->Tables[L"VertFormatProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable(ds->Tables[L"VertFormatProperty"])));
            }
            if (ds->Tables[L"HorzFormat"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::HorzFormatDataTable(ds->Tables[L"HorzFormat"])));
            }
            if (ds->Tables[L"HorzFormatProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable(ds->Tables[L"HorzFormatProperty"])));
            }
            if (ds->Tables[L"ImageryComponent"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImageryComponentDataTable(ds->Tables[L"ImageryComponent"])));
            }
            if (ds->Tables[L"TextComponent"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::TextComponentDataTable(ds->Tables[L"TextComponent"])));
            }
            if (ds->Tables[L"Text"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::TextDataTable(ds->Tables[L"Text"])));
            }
            if (ds->Tables[L"TextProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::TextPropertyDataTable(ds->Tables[L"TextProperty"])));
            }
            if (ds->Tables[L"FontProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::FontPropertyDataTable(ds->Tables[L"FontProperty"])));
            }
            if (ds->Tables[L"StateImagery"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::StateImageryDataTable(ds->Tables[L"StateImagery"])));
            }
            if (ds->Tables[L"Layer"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::LayerDataTable(ds->Tables[L"Layer"])));
            }
            if (ds->Tables[L"Section"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::SectionDataTable(ds->Tables[L"Section"])));
            }
            if (ds->Tables[L"AnimationDefinition"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable(ds->Tables[L"AnimationDefinition"])));
            }
            if (ds->Tables[L"Affector"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AffectorDataTable(ds->Tables[L"Affector"])));
            }
            if (ds->Tables[L"KeyFrame"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::KeyFrameDataTable(ds->Tables[L"KeyFrame"])));
            }
            if (ds->Tables[L"Subscription"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::SubscriptionDataTable(ds->Tables[L"Subscription"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
        }
        this->GetSerializationData(info, context);
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &NinjaPlatformer::NewDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        this->Relations->CollectionChanged += schemaChangedHandler;
    }
    
    inline NinjaPlatformer::NewDataSet::FalagardDataTable^  NewDataSet::Falagard::get() {
        return this->tableFalagard;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookDataTable^  NewDataSet::WidgetLook::get() {
        return this->tableWidgetLook;
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable^  NewDataSet::EventLinkDefinition::get() {
        return this->tableEventLinkDefinition;
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkTargetDataTable^  NewDataSet::EventLinkTarget::get() {
        return this->tableEventLinkTarget;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable^  NewDataSet::PropertyDefinition::get() {
        return this->tablePropertyDefinition;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable^  NewDataSet::PropertyLinkDefinition::get() {
        return this->tablePropertyLinkDefinition;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable^  NewDataSet::PropertyLinkTarget::get() {
        return this->tablePropertyLinkTarget;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDataTable^  NewDataSet::Property::get() {
        return this->tableProperty;
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaDataTable^  NewDataSet::NamedArea::get() {
        return this->tableNamedArea;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaDataTable^  NewDataSet::Area::get() {
        return this->tableArea;
    }
    
    inline NinjaPlatformer::NewDataSet::DimDataTable^  NewDataSet::Dim::get() {
        return this->tableDim;
    }
    
    inline NinjaPlatformer::NewDataSet::UnifiedDimDataTable^  NewDataSet::UnifiedDim::get() {
        return this->tableUnifiedDim;
    }
    
    inline NinjaPlatformer::NewDataSet::AbsoluteDimDataTable^  NewDataSet::AbsoluteDim::get() {
        return this->tableAbsoluteDim;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageDimDataTable^  NewDataSet::ImageDim::get() {
        return this->tableImageDim;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable^  NewDataSet::ImagePropertyDim::get() {
        return this->tableImagePropertyDim;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetDimDataTable^  NewDataSet::WidgetDim::get() {
        return this->tableWidgetDim;
    }
    
    inline NinjaPlatformer::NewDataSet::FontDimDataTable^  NewDataSet::FontDim::get() {
        return this->tableFontDim;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDimDataTable^  NewDataSet::PropertyDim::get() {
        return this->tablePropertyDim;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimDataTable^  NewDataSet::OperatorDim::get() {
        return this->tableOperatorDim;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaPropertyDataTable^  NewDataSet::AreaProperty::get() {
        return this->tableAreaProperty;
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable^  NewDataSet::NamedAreaSource::get() {
        return this->tableNamedAreaSource;
    }
    
    inline NinjaPlatformer::NewDataSet::ChildDataTable^  NewDataSet::Child::get() {
        return this->tableChild;
    }
    
    inline NinjaPlatformer::NewDataSet::EventActionDataTable^  NewDataSet::EventAction::get() {
        return this->tableEventAction;
    }
    
    inline NinjaPlatformer::NewDataSet::VertAlignmentDataTable^  NewDataSet::VertAlignment::get() {
        return this->tableVertAlignment;
    }
    
    inline NinjaPlatformer::NewDataSet::HorzAlignmentDataTable^  NewDataSet::HorzAlignment::get() {
        return this->tableHorzAlignment;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionDataTable^  NewDataSet::ImagerySection::get() {
        return this->tableImagerySection;
    }
    
    inline NinjaPlatformer::NewDataSet::ColourDataTable^  NewDataSet::Colour::get() {
        return this->tableColour;
    }
    
    inline NinjaPlatformer::NewDataSet::ColoursDataTable^  NewDataSet::Colours::get() {
        return this->tableColours;
    }
    
    inline NinjaPlatformer::NewDataSet::ColourPropertyDataTable^  NewDataSet::ColourProperty::get() {
        return this->tableColourProperty;
    }
    
    inline NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable^  NewDataSet::ColourRectProperty::get() {
        return this->tableColourRectProperty;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentDataTable^  NewDataSet::FrameComponent::get() {
        return this->tableFrameComponent;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageDataTable^  NewDataSet::Image::get() {
        return this->tableImage;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyDataTable^  NewDataSet::ImageProperty::get() {
        return this->tableImageProperty;
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatDataTable^  NewDataSet::VertFormat::get() {
        return this->tableVertFormat;
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable^  NewDataSet::VertFormatProperty::get() {
        return this->tableVertFormatProperty;
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatDataTable^  NewDataSet::HorzFormat::get() {
        return this->tableHorzFormat;
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable^  NewDataSet::HorzFormatProperty::get() {
        return this->tableHorzFormatProperty;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentDataTable^  NewDataSet::ImageryComponent::get() {
        return this->tableImageryComponent;
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentDataTable^  NewDataSet::TextComponent::get() {
        return this->tableTextComponent;
    }
    
    inline NinjaPlatformer::NewDataSet::TextDataTable^  NewDataSet::Text::get() {
        return this->tableText;
    }
    
    inline NinjaPlatformer::NewDataSet::TextPropertyDataTable^  NewDataSet::TextProperty::get() {
        return this->tableTextProperty;
    }
    
    inline NinjaPlatformer::NewDataSet::FontPropertyDataTable^  NewDataSet::FontProperty::get() {
        return this->tableFontProperty;
    }
    
    inline NinjaPlatformer::NewDataSet::StateImageryDataTable^  NewDataSet::StateImagery::get() {
        return this->tableStateImagery;
    }
    
    inline NinjaPlatformer::NewDataSet::LayerDataTable^  NewDataSet::Layer::get() {
        return this->tableLayer;
    }
    
    inline NinjaPlatformer::NewDataSet::SectionDataTable^  NewDataSet::Section::get() {
        return this->tableSection;
    }
    
    inline NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable^  NewDataSet::AnimationDefinition::get() {
        return this->tableAnimationDefinition;
    }
    
    inline NinjaPlatformer::NewDataSet::AffectorDataTable^  NewDataSet::Affector::get() {
        return this->tableAffector;
    }
    
    inline NinjaPlatformer::NewDataSet::KeyFrameDataTable^  NewDataSet::KeyFrame::get() {
        return this->tableKeyFrame;
    }
    
    inline NinjaPlatformer::NewDataSet::SubscriptionDataTable^  NewDataSet::Subscription::get() {
        return this->tableSubscription;
    }
    
    inline ::System::Data::SchemaSerializationMode NewDataSet::SchemaSerializationMode::get() {
        return this->_schemaSerializationMode;
    }
    inline System::Void NewDataSet::SchemaSerializationMode::set(::System::Data::SchemaSerializationMode value) {
        this->_schemaSerializationMode = __identifier(value);
    }
    
    inline ::System::Data::DataTableCollection^  NewDataSet::Tables::get() {
        return __super::Tables;
    }
    
    inline ::System::Data::DataRelationCollection^  NewDataSet::Relations::get() {
        return __super::Relations;
    }
    
    inline ::System::Void NewDataSet::InitializeDerivedDataSet() {
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline ::System::Data::DataSet^  NewDataSet::Clone() {
        NinjaPlatformer::NewDataSet^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet^  >(__super::Clone()));
        cln->InitVars();
        cln->SchemaSerializationMode = this->SchemaSerializationMode;
        return cln;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeTables() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeRelations() {
        return false;
    }
    
    inline ::System::Void NewDataSet::ReadXmlSerializable(::System::Xml::XmlReader^  reader) {
        if (this->DetermineSchemaSerializationMode(reader) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            this->Reset();
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXml(reader);
            if (ds->Tables[L"Falagard"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::FalagardDataTable(ds->Tables[L"Falagard"])));
            }
            if (ds->Tables[L"WidgetLook"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::WidgetLookDataTable(ds->Tables[L"WidgetLook"])));
            }
            if (ds->Tables[L"EventLinkDefinition"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable(ds->Tables[L"EventLinkDefinition"])));
            }
            if (ds->Tables[L"EventLinkTarget"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::EventLinkTargetDataTable(ds->Tables[L"EventLinkTarget"])));
            }
            if (ds->Tables[L"PropertyDefinition"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable(ds->Tables[L"PropertyDefinition"])));
            }
            if (ds->Tables[L"PropertyLinkDefinition"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable(ds->Tables[L"PropertyLinkDefinition"])));
            }
            if (ds->Tables[L"PropertyLinkTarget"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable(ds->Tables[L"PropertyLinkTarget"])));
            }
            if (ds->Tables[L"Property"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyDataTable(ds->Tables[L"Property"])));
            }
            if (ds->Tables[L"NamedArea"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::NamedAreaDataTable(ds->Tables[L"NamedArea"])));
            }
            if (ds->Tables[L"Area"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AreaDataTable(ds->Tables[L"Area"])));
            }
            if (ds->Tables[L"Dim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::DimDataTable(ds->Tables[L"Dim"])));
            }
            if (ds->Tables[L"UnifiedDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::UnifiedDimDataTable(ds->Tables[L"UnifiedDim"])));
            }
            if (ds->Tables[L"AbsoluteDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AbsoluteDimDataTable(ds->Tables[L"AbsoluteDim"])));
            }
            if (ds->Tables[L"ImageDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImageDimDataTable(ds->Tables[L"ImageDim"])));
            }
            if (ds->Tables[L"ImagePropertyDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable(ds->Tables[L"ImagePropertyDim"])));
            }
            if (ds->Tables[L"WidgetDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::WidgetDimDataTable(ds->Tables[L"WidgetDim"])));
            }
            if (ds->Tables[L"FontDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::FontDimDataTable(ds->Tables[L"FontDim"])));
            }
            if (ds->Tables[L"PropertyDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::PropertyDimDataTable(ds->Tables[L"PropertyDim"])));
            }
            if (ds->Tables[L"OperatorDim"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::OperatorDimDataTable(ds->Tables[L"OperatorDim"])));
            }
            if (ds->Tables[L"AreaProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AreaPropertyDataTable(ds->Tables[L"AreaProperty"])));
            }
            if (ds->Tables[L"NamedAreaSource"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable(ds->Tables[L"NamedAreaSource"])));
            }
            if (ds->Tables[L"Child"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ChildDataTable(ds->Tables[L"Child"])));
            }
            if (ds->Tables[L"EventAction"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::EventActionDataTable(ds->Tables[L"EventAction"])));
            }
            if (ds->Tables[L"VertAlignment"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::VertAlignmentDataTable(ds->Tables[L"VertAlignment"])));
            }
            if (ds->Tables[L"HorzAlignment"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::HorzAlignmentDataTable(ds->Tables[L"HorzAlignment"])));
            }
            if (ds->Tables[L"ImagerySection"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImagerySectionDataTable(ds->Tables[L"ImagerySection"])));
            }
            if (ds->Tables[L"Colour"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ColourDataTable(ds->Tables[L"Colour"])));
            }
            if (ds->Tables[L"Colours"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ColoursDataTable(ds->Tables[L"Colours"])));
            }
            if (ds->Tables[L"ColourProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ColourPropertyDataTable(ds->Tables[L"ColourProperty"])));
            }
            if (ds->Tables[L"ColourRectProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable(ds->Tables[L"ColourRectProperty"])));
            }
            if (ds->Tables[L"FrameComponent"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::FrameComponentDataTable(ds->Tables[L"FrameComponent"])));
            }
            if (ds->Tables[L"Image"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImageDataTable(ds->Tables[L"Image"])));
            }
            if (ds->Tables[L"ImageProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImagePropertyDataTable(ds->Tables[L"ImageProperty"])));
            }
            if (ds->Tables[L"VertFormat"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::VertFormatDataTable(ds->Tables[L"VertFormat"])));
            }
            if (ds->Tables[L"VertFormatProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable(ds->Tables[L"VertFormatProperty"])));
            }
            if (ds->Tables[L"HorzFormat"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::HorzFormatDataTable(ds->Tables[L"HorzFormat"])));
            }
            if (ds->Tables[L"HorzFormatProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable(ds->Tables[L"HorzFormatProperty"])));
            }
            if (ds->Tables[L"ImageryComponent"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::ImageryComponentDataTable(ds->Tables[L"ImageryComponent"])));
            }
            if (ds->Tables[L"TextComponent"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::TextComponentDataTable(ds->Tables[L"TextComponent"])));
            }
            if (ds->Tables[L"Text"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::TextDataTable(ds->Tables[L"Text"])));
            }
            if (ds->Tables[L"TextProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::TextPropertyDataTable(ds->Tables[L"TextProperty"])));
            }
            if (ds->Tables[L"FontProperty"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::FontPropertyDataTable(ds->Tables[L"FontProperty"])));
            }
            if (ds->Tables[L"StateImagery"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::StateImageryDataTable(ds->Tables[L"StateImagery"])));
            }
            if (ds->Tables[L"Layer"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::LayerDataTable(ds->Tables[L"Layer"])));
            }
            if (ds->Tables[L"Section"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::SectionDataTable(ds->Tables[L"Section"])));
            }
            if (ds->Tables[L"AnimationDefinition"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable(ds->Tables[L"AnimationDefinition"])));
            }
            if (ds->Tables[L"Affector"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::AffectorDataTable(ds->Tables[L"Affector"])));
            }
            if (ds->Tables[L"KeyFrame"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::KeyFrameDataTable(ds->Tables[L"KeyFrame"])));
            }
            if (ds->Tables[L"Subscription"] != nullptr) {
                __super::Tables->Add((gcnew NinjaPlatformer::NewDataSet::SubscriptionDataTable(ds->Tables[L"Subscription"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXml(reader);
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchema^  NewDataSet::GetSchemaSerializable() {
        ::System::IO::MemoryStream^  stream = (gcnew ::System::IO::MemoryStream());
        this->WriteXmlSchema((gcnew ::System::Xml::XmlTextWriter(stream, nullptr)));
        stream->Position = 0;
        return ::System::Xml::Schema::XmlSchema::Read((gcnew ::System::Xml::XmlTextReader(stream)), nullptr);
    }
    
    inline ::System::Void NewDataSet::InitVars() {
        this->InitVars(true);
    }
    
    inline ::System::Void NewDataSet::InitVars(::System::Boolean initTable) {
        this->tableFalagard = (cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardDataTable^  >(__super::Tables[L"Falagard"]));
        if (initTable == true) {
            if (this->tableFalagard != nullptr) {
                this->tableFalagard->InitVars();
            }
        }
        this->tableWidgetLook = (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookDataTable^  >(__super::Tables[L"WidgetLook"]));
        if (initTable == true) {
            if (this->tableWidgetLook != nullptr) {
                this->tableWidgetLook->InitVars();
            }
        }
        this->tableEventLinkDefinition = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable^  >(__super::Tables[L"EventLinkDefinition"]));
        if (initTable == true) {
            if (this->tableEventLinkDefinition != nullptr) {
                this->tableEventLinkDefinition->InitVars();
            }
        }
        this->tableEventLinkTarget = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetDataTable^  >(__super::Tables[L"EventLinkTarget"]));
        if (initTable == true) {
            if (this->tableEventLinkTarget != nullptr) {
                this->tableEventLinkTarget->InitVars();
            }
        }
        this->tablePropertyDefinition = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable^  >(__super::Tables[L"PropertyDefinition"]));
        if (initTable == true) {
            if (this->tablePropertyDefinition != nullptr) {
                this->tablePropertyDefinition->InitVars();
            }
        }
        this->tablePropertyLinkDefinition = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable^  >(__super::Tables[L"PropertyLinkDefinition"]));
        if (initTable == true) {
            if (this->tablePropertyLinkDefinition != nullptr) {
                this->tablePropertyLinkDefinition->InitVars();
            }
        }
        this->tablePropertyLinkTarget = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable^  >(__super::Tables[L"PropertyLinkTarget"]));
        if (initTable == true) {
            if (this->tablePropertyLinkTarget != nullptr) {
                this->tablePropertyLinkTarget->InitVars();
            }
        }
        this->tableProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDataTable^  >(__super::Tables[L"Property"]));
        if (initTable == true) {
            if (this->tableProperty != nullptr) {
                this->tableProperty->InitVars();
            }
        }
        this->tableNamedArea = (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaDataTable^  >(__super::Tables[L"NamedArea"]));
        if (initTable == true) {
            if (this->tableNamedArea != nullptr) {
                this->tableNamedArea->InitVars();
            }
        }
        this->tableArea = (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaDataTable^  >(__super::Tables[L"Area"]));
        if (initTable == true) {
            if (this->tableArea != nullptr) {
                this->tableArea->InitVars();
            }
        }
        this->tableDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::DimDataTable^  >(__super::Tables[L"Dim"]));
        if (initTable == true) {
            if (this->tableDim != nullptr) {
                this->tableDim->InitVars();
            }
        }
        this->tableUnifiedDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimDataTable^  >(__super::Tables[L"UnifiedDim"]));
        if (initTable == true) {
            if (this->tableUnifiedDim != nullptr) {
                this->tableUnifiedDim->InitVars();
            }
        }
        this->tableAbsoluteDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimDataTable^  >(__super::Tables[L"AbsoluteDim"]));
        if (initTable == true) {
            if (this->tableAbsoluteDim != nullptr) {
                this->tableAbsoluteDim->InitVars();
            }
        }
        this->tableImageDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimDataTable^  >(__super::Tables[L"ImageDim"]));
        if (initTable == true) {
            if (this->tableImageDim != nullptr) {
                this->tableImageDim->InitVars();
            }
        }
        this->tableImagePropertyDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable^  >(__super::Tables[L"ImagePropertyDim"]));
        if (initTable == true) {
            if (this->tableImagePropertyDim != nullptr) {
                this->tableImagePropertyDim->InitVars();
            }
        }
        this->tableWidgetDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimDataTable^  >(__super::Tables[L"WidgetDim"]));
        if (initTable == true) {
            if (this->tableWidgetDim != nullptr) {
                this->tableWidgetDim->InitVars();
            }
        }
        this->tableFontDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimDataTable^  >(__super::Tables[L"FontDim"]));
        if (initTable == true) {
            if (this->tableFontDim != nullptr) {
                this->tableFontDim->InitVars();
            }
        }
        this->tablePropertyDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimDataTable^  >(__super::Tables[L"PropertyDim"]));
        if (initTable == true) {
            if (this->tablePropertyDim != nullptr) {
                this->tablePropertyDim->InitVars();
            }
        }
        this->tableOperatorDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimDataTable^  >(__super::Tables[L"OperatorDim"]));
        if (initTable == true) {
            if (this->tableOperatorDim != nullptr) {
                this->tableOperatorDim->InitVars();
            }
        }
        this->tableAreaProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyDataTable^  >(__super::Tables[L"AreaProperty"]));
        if (initTable == true) {
            if (this->tableAreaProperty != nullptr) {
                this->tableAreaProperty->InitVars();
            }
        }
        this->tableNamedAreaSource = (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable^  >(__super::Tables[L"NamedAreaSource"]));
        if (initTable == true) {
            if (this->tableNamedAreaSource != nullptr) {
                this->tableNamedAreaSource->InitVars();
            }
        }
        this->tableChild = (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildDataTable^  >(__super::Tables[L"Child"]));
        if (initTable == true) {
            if (this->tableChild != nullptr) {
                this->tableChild->InitVars();
            }
        }
        this->tableEventAction = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionDataTable^  >(__super::Tables[L"EventAction"]));
        if (initTable == true) {
            if (this->tableEventAction != nullptr) {
                this->tableEventAction->InitVars();
            }
        }
        this->tableVertAlignment = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentDataTable^  >(__super::Tables[L"VertAlignment"]));
        if (initTable == true) {
            if (this->tableVertAlignment != nullptr) {
                this->tableVertAlignment->InitVars();
            }
        }
        this->tableHorzAlignment = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentDataTable^  >(__super::Tables[L"HorzAlignment"]));
        if (initTable == true) {
            if (this->tableHorzAlignment != nullptr) {
                this->tableHorzAlignment->InitVars();
            }
        }
        this->tableImagerySection = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionDataTable^  >(__super::Tables[L"ImagerySection"]));
        if (initTable == true) {
            if (this->tableImagerySection != nullptr) {
                this->tableImagerySection->InitVars();
            }
        }
        this->tableColour = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourDataTable^  >(__super::Tables[L"Colour"]));
        if (initTable == true) {
            if (this->tableColour != nullptr) {
                this->tableColour->InitVars();
            }
        }
        this->tableColours = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursDataTable^  >(__super::Tables[L"Colours"]));
        if (initTable == true) {
            if (this->tableColours != nullptr) {
                this->tableColours->InitVars();
            }
        }
        this->tableColourProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyDataTable^  >(__super::Tables[L"ColourProperty"]));
        if (initTable == true) {
            if (this->tableColourProperty != nullptr) {
                this->tableColourProperty->InitVars();
            }
        }
        this->tableColourRectProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable^  >(__super::Tables[L"ColourRectProperty"]));
        if (initTable == true) {
            if (this->tableColourRectProperty != nullptr) {
                this->tableColourRectProperty->InitVars();
            }
        }
        this->tableFrameComponent = (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentDataTable^  >(__super::Tables[L"FrameComponent"]));
        if (initTable == true) {
            if (this->tableFrameComponent != nullptr) {
                this->tableFrameComponent->InitVars();
            }
        }
        this->tableImage = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDataTable^  >(__super::Tables[L"Image"]));
        if (initTable == true) {
            if (this->tableImage != nullptr) {
                this->tableImage->InitVars();
            }
        }
        this->tableImageProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDataTable^  >(__super::Tables[L"ImageProperty"]));
        if (initTable == true) {
            if (this->tableImageProperty != nullptr) {
                this->tableImageProperty->InitVars();
            }
        }
        this->tableVertFormat = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatDataTable^  >(__super::Tables[L"VertFormat"]));
        if (initTable == true) {
            if (this->tableVertFormat != nullptr) {
                this->tableVertFormat->InitVars();
            }
        }
        this->tableVertFormatProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable^  >(__super::Tables[L"VertFormatProperty"]));
        if (initTable == true) {
            if (this->tableVertFormatProperty != nullptr) {
                this->tableVertFormatProperty->InitVars();
            }
        }
        this->tableHorzFormat = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatDataTable^  >(__super::Tables[L"HorzFormat"]));
        if (initTable == true) {
            if (this->tableHorzFormat != nullptr) {
                this->tableHorzFormat->InitVars();
            }
        }
        this->tableHorzFormatProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable^  >(__super::Tables[L"HorzFormatProperty"]));
        if (initTable == true) {
            if (this->tableHorzFormatProperty != nullptr) {
                this->tableHorzFormatProperty->InitVars();
            }
        }
        this->tableImageryComponent = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentDataTable^  >(__super::Tables[L"ImageryComponent"]));
        if (initTable == true) {
            if (this->tableImageryComponent != nullptr) {
                this->tableImageryComponent->InitVars();
            }
        }
        this->tableTextComponent = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentDataTable^  >(__super::Tables[L"TextComponent"]));
        if (initTable == true) {
            if (this->tableTextComponent != nullptr) {
                this->tableTextComponent->InitVars();
            }
        }
        this->tableText = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextDataTable^  >(__super::Tables[L"Text"]));
        if (initTable == true) {
            if (this->tableText != nullptr) {
                this->tableText->InitVars();
            }
        }
        this->tableTextProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyDataTable^  >(__super::Tables[L"TextProperty"]));
        if (initTable == true) {
            if (this->tableTextProperty != nullptr) {
                this->tableTextProperty->InitVars();
            }
        }
        this->tableFontProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyDataTable^  >(__super::Tables[L"FontProperty"]));
        if (initTable == true) {
            if (this->tableFontProperty != nullptr) {
                this->tableFontProperty->InitVars();
            }
        }
        this->tableStateImagery = (cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryDataTable^  >(__super::Tables[L"StateImagery"]));
        if (initTable == true) {
            if (this->tableStateImagery != nullptr) {
                this->tableStateImagery->InitVars();
            }
        }
        this->tableLayer = (cli::safe_cast<NinjaPlatformer::NewDataSet::LayerDataTable^  >(__super::Tables[L"Layer"]));
        if (initTable == true) {
            if (this->tableLayer != nullptr) {
                this->tableLayer->InitVars();
            }
        }
        this->tableSection = (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionDataTable^  >(__super::Tables[L"Section"]));
        if (initTable == true) {
            if (this->tableSection != nullptr) {
                this->tableSection->InitVars();
            }
        }
        this->tableAnimationDefinition = (cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable^  >(__super::Tables[L"AnimationDefinition"]));
        if (initTable == true) {
            if (this->tableAnimationDefinition != nullptr) {
                this->tableAnimationDefinition->InitVars();
            }
        }
        this->tableAffector = (cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorDataTable^  >(__super::Tables[L"Affector"]));
        if (initTable == true) {
            if (this->tableAffector != nullptr) {
                this->tableAffector->InitVars();
            }
        }
        this->tableKeyFrame = (cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameDataTable^  >(__super::Tables[L"KeyFrame"]));
        if (initTable == true) {
            if (this->tableKeyFrame != nullptr) {
                this->tableKeyFrame->InitVars();
            }
        }
        this->tableSubscription = (cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionDataTable^  >(__super::Tables[L"Subscription"]));
        if (initTable == true) {
            if (this->tableSubscription != nullptr) {
                this->tableSubscription->InitVars();
            }
        }
        this->relationFalagard_WidgetLook = this->Relations[L"Falagard_WidgetLook"];
        this->relationWidgetLook_EventLinkDefinition = this->Relations[L"WidgetLook_EventLinkDefinition"];
        this->relationEventLinkDefinition_EventLinkTarget = this->Relations[L"EventLinkDefinition_EventLinkTarget"];
        this->relationWidgetLook_PropertyDefinition = this->Relations[L"WidgetLook_PropertyDefinition"];
        this->relationWidgetLook_PropertyLinkDefinition = this->Relations[L"WidgetLook_PropertyLinkDefinition"];
        this->relationPropertyLinkDefinition_PropertyLinkTarget = this->Relations[L"PropertyLinkDefinition_PropertyLinkTarget"];
        this->relationChild_Property = this->Relations[L"Child_Property"];
        this->relationWidgetLook_Property = this->Relations[L"WidgetLook_Property"];
        this->relationWidgetLook_NamedArea = this->Relations[L"WidgetLook_NamedArea"];
        this->relationNamedArea_Area = this->Relations[L"NamedArea_Area"];
        this->relationChild_Area = this->Relations[L"Child_Area"];
        this->relationFrameComponent_Area = this->Relations[L"FrameComponent_Area"];
        this->relationImageryComponent_Area = this->Relations[L"ImageryComponent_Area"];
        this->relationTextComponent_Area = this->Relations[L"TextComponent_Area"];
        this->relationArea_Dim = this->Relations[L"Area_Dim"];
        this->relationOperatorDim_UnifiedDim = this->Relations[L"OperatorDim_UnifiedDim"];
        this->relationDim_UnifiedDim = this->Relations[L"Dim_UnifiedDim"];
        this->relationOperatorDim_AbsoluteDim = this->Relations[L"OperatorDim_AbsoluteDim"];
        this->relationDim_AbsoluteDim = this->Relations[L"Dim_AbsoluteDim"];
        this->relationOperatorDim_ImageDim = this->Relations[L"OperatorDim_ImageDim"];
        this->relationDim_ImageDim = this->Relations[L"Dim_ImageDim"];
        this->relationOperatorDim_ImagePropertyDim = this->Relations[L"OperatorDim_ImagePropertyDim"];
        this->relationDim_ImagePropertyDim = this->Relations[L"Dim_ImagePropertyDim"];
        this->relationOperatorDim_WidgetDim = this->Relations[L"OperatorDim_WidgetDim"];
        this->relationDim_WidgetDim = this->Relations[L"Dim_WidgetDim"];
        this->relationOperatorDim_FontDim = this->Relations[L"OperatorDim_FontDim"];
        this->relationDim_FontDim = this->Relations[L"Dim_FontDim"];
        this->relationOperatorDim_PropertyDim = this->Relations[L"OperatorDim_PropertyDim"];
        this->relationDim_PropertyDim = this->Relations[L"Dim_PropertyDim"];
        this->relationOperatorDim_OperatorDim = this->Relations[L"OperatorDim_OperatorDim"];
        this->relationDim_OperatorDim = this->Relations[L"Dim_OperatorDim"];
        this->relationArea_AreaProperty = this->Relations[L"Area_AreaProperty"];
        this->relationArea_NamedAreaSource = this->Relations[L"Area_NamedAreaSource"];
        this->relationWidgetLook_Child = this->Relations[L"WidgetLook_Child"];
        this->relationChild_EventAction = this->Relations[L"Child_EventAction"];
        this->relationChild_VertAlignment = this->Relations[L"Child_VertAlignment"];
        this->relationChild_HorzAlignment = this->Relations[L"Child_HorzAlignment"];
        this->relationWidgetLook_ImagerySection = this->Relations[L"WidgetLook_ImagerySection"];
        this->relationFrameComponent_Colour = this->Relations[L"FrameComponent_Colour"];
        this->relationImageryComponent_Colour = this->Relations[L"ImageryComponent_Colour"];
        this->relationTextComponent_Colour = this->Relations[L"TextComponent_Colour"];
        this->relationImagerySection_Colour = this->Relations[L"ImagerySection_Colour"];
        this->relationSection_Colour = this->Relations[L"Section_Colour"];
        this->relationFrameComponent_Colours = this->Relations[L"FrameComponent_Colours"];
        this->relationImageryComponent_Colours = this->Relations[L"ImageryComponent_Colours"];
        this->relationTextComponent_Colours = this->Relations[L"TextComponent_Colours"];
        this->relationImagerySection_Colours = this->Relations[L"ImagerySection_Colours"];
        this->relationSection_Colours = this->Relations[L"Section_Colours"];
        this->relationFrameComponent_ColourProperty = this->Relations[L"FrameComponent_ColourProperty"];
        this->relationImageryComponent_ColourProperty = this->Relations[L"ImageryComponent_ColourProperty"];
        this->relationTextComponent_ColourProperty = this->Relations[L"TextComponent_ColourProperty"];
        this->relationImagerySection_ColourProperty = this->Relations[L"ImagerySection_ColourProperty"];
        this->relationSection_ColourProperty = this->Relations[L"Section_ColourProperty"];
        this->relationFrameComponent_ColourRectProperty = this->Relations[L"FrameComponent_ColourRectProperty"];
        this->relationImageryComponent_ColourRectProperty = this->Relations[L"ImageryComponent_ColourRectProperty"];
        this->relationTextComponent_ColourRectProperty = this->Relations[L"TextComponent_ColourRectProperty"];
        this->relationImagerySection_ColourRectProperty = this->Relations[L"ImagerySection_ColourRectProperty"];
        this->relationSection_ColourRectProperty = this->Relations[L"Section_ColourRectProperty"];
        this->relationImagerySection_FrameComponent = this->Relations[L"ImagerySection_FrameComponent"];
        this->relationFrameComponent_Image = this->Relations[L"FrameComponent_Image"];
        this->relationImageryComponent_Image = this->Relations[L"ImageryComponent_Image"];
        this->relationFrameComponent_ImageProperty = this->Relations[L"FrameComponent_ImageProperty"];
        this->relationImageryComponent_ImageProperty = this->Relations[L"ImageryComponent_ImageProperty"];
        this->relationFrameComponent_VertFormat = this->Relations[L"FrameComponent_VertFormat"];
        this->relationImageryComponent_VertFormat = this->Relations[L"ImageryComponent_VertFormat"];
        this->relationTextComponent_VertFormat = this->Relations[L"TextComponent_VertFormat"];
        this->relationFrameComponent_VertFormatProperty = this->Relations[L"FrameComponent_VertFormatProperty"];
        this->relationImageryComponent_VertFormatProperty = this->Relations[L"ImageryComponent_VertFormatProperty"];
        this->relationTextComponent_VertFormatProperty = this->Relations[L"TextComponent_VertFormatProperty"];
        this->relationFrameComponent_HorzFormat = this->Relations[L"FrameComponent_HorzFormat"];
        this->relationImageryComponent_HorzFormat = this->Relations[L"ImageryComponent_HorzFormat"];
        this->relationTextComponent_HorzFormat = this->Relations[L"TextComponent_HorzFormat"];
        this->relationFrameComponent_HorzFormatProperty = this->Relations[L"FrameComponent_HorzFormatProperty"];
        this->relationImageryComponent_HorzFormatProperty = this->Relations[L"ImageryComponent_HorzFormatProperty"];
        this->relationTextComponent_HorzFormatProperty = this->Relations[L"TextComponent_HorzFormatProperty"];
        this->relationImagerySection_ImageryComponent = this->Relations[L"ImagerySection_ImageryComponent"];
        this->relationImagerySection_TextComponent = this->Relations[L"ImagerySection_TextComponent"];
        this->relationTextComponent_Text = this->Relations[L"TextComponent_Text"];
        this->relationTextComponent_TextProperty = this->Relations[L"TextComponent_TextProperty"];
        this->relationTextComponent_FontProperty = this->Relations[L"TextComponent_FontProperty"];
        this->relationWidgetLook_StateImagery = this->Relations[L"WidgetLook_StateImagery"];
        this->relationStateImagery_Layer = this->Relations[L"StateImagery_Layer"];
        this->relationLayer_Section = this->Relations[L"Layer_Section"];
        this->relationWidgetLook_AnimationDefinition = this->Relations[L"WidgetLook_AnimationDefinition"];
        this->relationAnimationDefinition_Affector = this->Relations[L"AnimationDefinition_Affector"];
        this->relationAffector_KeyFrame = this->Relations[L"Affector_KeyFrame"];
        this->relationAnimationDefinition_Subscription = this->Relations[L"AnimationDefinition_Subscription"];
    }
    
    inline ::System::Void NewDataSet::InitClass() {
        this->DataSetName = L"NewDataSet";
        this->Prefix = L"";
        this->Locale = (gcnew ::System::Globalization::CultureInfo(L""));
        this->EnforceConstraints = true;
        this->SchemaSerializationMode = ::System::Data::SchemaSerializationMode::IncludeSchema;
        this->tableFalagard = (gcnew NinjaPlatformer::NewDataSet::FalagardDataTable());
        __super::Tables->Add(this->tableFalagard);
        this->tableWidgetLook = (gcnew NinjaPlatformer::NewDataSet::WidgetLookDataTable());
        __super::Tables->Add(this->tableWidgetLook);
        this->tableEventLinkDefinition = (gcnew NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable());
        __super::Tables->Add(this->tableEventLinkDefinition);
        this->tableEventLinkTarget = (gcnew NinjaPlatformer::NewDataSet::EventLinkTargetDataTable());
        __super::Tables->Add(this->tableEventLinkTarget);
        this->tablePropertyDefinition = (gcnew NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable());
        __super::Tables->Add(this->tablePropertyDefinition);
        this->tablePropertyLinkDefinition = (gcnew NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable());
        __super::Tables->Add(this->tablePropertyLinkDefinition);
        this->tablePropertyLinkTarget = (gcnew NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable());
        __super::Tables->Add(this->tablePropertyLinkTarget);
        this->tableProperty = (gcnew NinjaPlatformer::NewDataSet::PropertyDataTable());
        __super::Tables->Add(this->tableProperty);
        this->tableNamedArea = (gcnew NinjaPlatformer::NewDataSet::NamedAreaDataTable());
        __super::Tables->Add(this->tableNamedArea);
        this->tableArea = (gcnew NinjaPlatformer::NewDataSet::AreaDataTable());
        __super::Tables->Add(this->tableArea);
        this->tableDim = (gcnew NinjaPlatformer::NewDataSet::DimDataTable());
        __super::Tables->Add(this->tableDim);
        this->tableUnifiedDim = (gcnew NinjaPlatformer::NewDataSet::UnifiedDimDataTable());
        __super::Tables->Add(this->tableUnifiedDim);
        this->tableAbsoluteDim = (gcnew NinjaPlatformer::NewDataSet::AbsoluteDimDataTable());
        __super::Tables->Add(this->tableAbsoluteDim);
        this->tableImageDim = (gcnew NinjaPlatformer::NewDataSet::ImageDimDataTable());
        __super::Tables->Add(this->tableImageDim);
        this->tableImagePropertyDim = (gcnew NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable());
        __super::Tables->Add(this->tableImagePropertyDim);
        this->tableWidgetDim = (gcnew NinjaPlatformer::NewDataSet::WidgetDimDataTable());
        __super::Tables->Add(this->tableWidgetDim);
        this->tableFontDim = (gcnew NinjaPlatformer::NewDataSet::FontDimDataTable());
        __super::Tables->Add(this->tableFontDim);
        this->tablePropertyDim = (gcnew NinjaPlatformer::NewDataSet::PropertyDimDataTable());
        __super::Tables->Add(this->tablePropertyDim);
        this->tableOperatorDim = (gcnew NinjaPlatformer::NewDataSet::OperatorDimDataTable());
        __super::Tables->Add(this->tableOperatorDim);
        this->tableAreaProperty = (gcnew NinjaPlatformer::NewDataSet::AreaPropertyDataTable());
        __super::Tables->Add(this->tableAreaProperty);
        this->tableNamedAreaSource = (gcnew NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable());
        __super::Tables->Add(this->tableNamedAreaSource);
        this->tableChild = (gcnew NinjaPlatformer::NewDataSet::ChildDataTable());
        __super::Tables->Add(this->tableChild);
        this->tableEventAction = (gcnew NinjaPlatformer::NewDataSet::EventActionDataTable());
        __super::Tables->Add(this->tableEventAction);
        this->tableVertAlignment = (gcnew NinjaPlatformer::NewDataSet::VertAlignmentDataTable());
        __super::Tables->Add(this->tableVertAlignment);
        this->tableHorzAlignment = (gcnew NinjaPlatformer::NewDataSet::HorzAlignmentDataTable());
        __super::Tables->Add(this->tableHorzAlignment);
        this->tableImagerySection = (gcnew NinjaPlatformer::NewDataSet::ImagerySectionDataTable());
        __super::Tables->Add(this->tableImagerySection);
        this->tableColour = (gcnew NinjaPlatformer::NewDataSet::ColourDataTable());
        __super::Tables->Add(this->tableColour);
        this->tableColours = (gcnew NinjaPlatformer::NewDataSet::ColoursDataTable());
        __super::Tables->Add(this->tableColours);
        this->tableColourProperty = (gcnew NinjaPlatformer::NewDataSet::ColourPropertyDataTable());
        __super::Tables->Add(this->tableColourProperty);
        this->tableColourRectProperty = (gcnew NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable());
        __super::Tables->Add(this->tableColourRectProperty);
        this->tableFrameComponent = (gcnew NinjaPlatformer::NewDataSet::FrameComponentDataTable());
        __super::Tables->Add(this->tableFrameComponent);
        this->tableImage = (gcnew NinjaPlatformer::NewDataSet::ImageDataTable());
        __super::Tables->Add(this->tableImage);
        this->tableImageProperty = (gcnew NinjaPlatformer::NewDataSet::ImagePropertyDataTable());
        __super::Tables->Add(this->tableImageProperty);
        this->tableVertFormat = (gcnew NinjaPlatformer::NewDataSet::VertFormatDataTable());
        __super::Tables->Add(this->tableVertFormat);
        this->tableVertFormatProperty = (gcnew NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable());
        __super::Tables->Add(this->tableVertFormatProperty);
        this->tableHorzFormat = (gcnew NinjaPlatformer::NewDataSet::HorzFormatDataTable());
        __super::Tables->Add(this->tableHorzFormat);
        this->tableHorzFormatProperty = (gcnew NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable());
        __super::Tables->Add(this->tableHorzFormatProperty);
        this->tableImageryComponent = (gcnew NinjaPlatformer::NewDataSet::ImageryComponentDataTable());
        __super::Tables->Add(this->tableImageryComponent);
        this->tableTextComponent = (gcnew NinjaPlatformer::NewDataSet::TextComponentDataTable());
        __super::Tables->Add(this->tableTextComponent);
        this->tableText = (gcnew NinjaPlatformer::NewDataSet::TextDataTable());
        __super::Tables->Add(this->tableText);
        this->tableTextProperty = (gcnew NinjaPlatformer::NewDataSet::TextPropertyDataTable());
        __super::Tables->Add(this->tableTextProperty);
        this->tableFontProperty = (gcnew NinjaPlatformer::NewDataSet::FontPropertyDataTable());
        __super::Tables->Add(this->tableFontProperty);
        this->tableStateImagery = (gcnew NinjaPlatformer::NewDataSet::StateImageryDataTable());
        __super::Tables->Add(this->tableStateImagery);
        this->tableLayer = (gcnew NinjaPlatformer::NewDataSet::LayerDataTable());
        __super::Tables->Add(this->tableLayer);
        this->tableSection = (gcnew NinjaPlatformer::NewDataSet::SectionDataTable());
        __super::Tables->Add(this->tableSection);
        this->tableAnimationDefinition = (gcnew NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable());
        __super::Tables->Add(this->tableAnimationDefinition);
        this->tableAffector = (gcnew NinjaPlatformer::NewDataSet::AffectorDataTable());
        __super::Tables->Add(this->tableAffector);
        this->tableKeyFrame = (gcnew NinjaPlatformer::NewDataSet::KeyFrameDataTable());
        __super::Tables->Add(this->tableKeyFrame);
        this->tableSubscription = (gcnew NinjaPlatformer::NewDataSet::SubscriptionDataTable());
        __super::Tables->Add(this->tableSubscription);
        ::System::Data::ForeignKeyConstraint^  fkc;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Falagard_WidgetLook", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFalagard->Falagard_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->Falagard_IdColumn}));
        this->tableWidgetLook->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"WidgetLook_EventLinkDefinition", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEventLinkDefinition->WidgetLook_IdColumn}));
        this->tableEventLinkDefinition->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"EventLinkDefinition_EventLinkTarget", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEventLinkDefinition->EventLinkDefinition_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEventLinkTarget->EventLinkDefinition_IdColumn}));
        this->tableEventLinkTarget->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"WidgetLook_PropertyDefinition", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyDefinition->WidgetLook_IdColumn}));
        this->tablePropertyDefinition->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"WidgetLook_PropertyLinkDefinition", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyLinkDefinition->WidgetLook_IdColumn}));
        this->tablePropertyLinkDefinition->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"PropertyLinkDefinition_PropertyLinkTarget", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyLinkDefinition->PropertyLinkDefinition_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyLinkTarget->PropertyLinkDefinition_IdColumn}));
        this->tablePropertyLinkTarget->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Child_Property", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableProperty->Child_IdColumn}));
        this->tableProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"WidgetLook_Property", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableProperty->WidgetLook_IdColumn}));
        this->tableProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"WidgetLook_NamedArea", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNamedArea->WidgetLook_IdColumn}));
        this->tableNamedArea->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"NamedArea_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNamedArea->NamedArea_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->NamedArea_IdColumn}));
        this->tableArea->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Child_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->Child_IdColumn}));
        this->tableArea->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->FrameComponent_IdColumn}));
        this->tableArea->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->ImageryComponent_IdColumn}));
        this->tableArea->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->TextComponent_IdColumn}));
        this->tableArea->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Area_Dim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->Area_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Area_IdColumn}));
        this->tableDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"OperatorDim_UnifiedDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableUnifiedDim->OperatorDim_IdColumn}));
        this->tableUnifiedDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Dim_UnifiedDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableUnifiedDim->Dim_IdColumn}));
        this->tableUnifiedDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"OperatorDim_AbsoluteDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAbsoluteDim->OperatorDim_IdColumn}));
        this->tableAbsoluteDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Dim_AbsoluteDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAbsoluteDim->Dim_IdColumn}));
        this->tableAbsoluteDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"OperatorDim_ImageDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageDim->OperatorDim_IdColumn}));
        this->tableImageDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Dim_ImageDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageDim->Dim_IdColumn}));
        this->tableImageDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"OperatorDim_ImagePropertyDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagePropertyDim->OperatorDim_IdColumn}));
        this->tableImagePropertyDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Dim_ImagePropertyDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagePropertyDim->Dim_IdColumn}));
        this->tableImagePropertyDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"OperatorDim_WidgetDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetDim->OperatorDim_IdColumn}));
        this->tableWidgetDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Dim_WidgetDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetDim->Dim_IdColumn}));
        this->tableWidgetDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"OperatorDim_FontDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFontDim->OperatorDim_IdColumn}));
        this->tableFontDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Dim_FontDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFontDim->Dim_IdColumn}));
        this->tableFontDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"OperatorDim_PropertyDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyDim->OperatorDim_IdColumn}));
        this->tablePropertyDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Dim_PropertyDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyDim->Dim_IdColumn}));
        this->tablePropertyDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"OperatorDim_OperatorDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_Id_0Column}));
        this->tableOperatorDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Dim_OperatorDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->Dim_IdColumn}));
        this->tableOperatorDim->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Area_AreaProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->Area_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAreaProperty->Area_IdColumn}));
        this->tableAreaProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Area_NamedAreaSource", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->Area_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNamedAreaSource->Area_IdColumn}));
        this->tableNamedAreaSource->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"WidgetLook_Child", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->WidgetLook_IdColumn}));
        this->tableChild->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Child_EventAction", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEventAction->Child_IdColumn}));
        this->tableEventAction->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Child_VertAlignment", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertAlignment->Child_IdColumn}));
        this->tableVertAlignment->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Child_HorzAlignment", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzAlignment->Child_IdColumn}));
        this->tableHorzAlignment->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"WidgetLook_ImagerySection", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->WidgetLook_IdColumn}));
        this->tableImagerySection->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->FrameComponent_IdColumn}));
        this->tableColour->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->ImageryComponent_IdColumn}));
        this->tableColour->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->TextComponent_IdColumn}));
        this->tableColour->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImagerySection_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->ImagerySection_IdColumn}));
        this->tableColour->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Section_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Section_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->Section_IdColumn}));
        this->tableColour->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->FrameComponent_IdColumn}));
        this->tableColours->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->ImageryComponent_IdColumn}));
        this->tableColours->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->TextComponent_IdColumn}));
        this->tableColours->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImagerySection_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->ImagerySection_IdColumn}));
        this->tableColours->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Section_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Section_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->Section_IdColumn}));
        this->tableColours->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->FrameComponent_IdColumn}));
        this->tableColourProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->ImageryComponent_IdColumn}));
        this->tableColourProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->TextComponent_IdColumn}));
        this->tableColourProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImagerySection_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->ImagerySection_IdColumn}));
        this->tableColourProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Section_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Section_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->Section_IdColumn}));
        this->tableColourProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_ColourRectProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->FrameComponent_IdColumn}));
        this->tableColourRectProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_ColourRectProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->ImageryComponent_IdColumn}));
        this->tableColourRectProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_ColourRectProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->TextComponent_IdColumn}));
        this->tableColourRectProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImagerySection_ColourRectProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->ImagerySection_IdColumn}));
        this->tableColourRectProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Section_ColourRectProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Section_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->Section_IdColumn}));
        this->tableColourRectProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImagerySection_FrameComponent", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->ImagerySection_IdColumn}));
        this->tableFrameComponent->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_Image", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImage->FrameComponent_IdColumn}));
        this->tableImage->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_Image", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImage->ImageryComponent_IdColumn}));
        this->tableImage->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_ImageProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageProperty->FrameComponent_IdColumn}));
        this->tableImageProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_ImageProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageProperty->ImageryComponent_IdColumn}));
        this->tableImageProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_VertFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormat->FrameComponent_IdColumn}));
        this->tableVertFormat->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_VertFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormat->ImageryComponent_IdColumn}));
        this->tableVertFormat->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_VertFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormat->TextComponent_IdColumn}));
        this->tableVertFormat->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_VertFormatProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormatProperty->FrameComponent_IdColumn}));
        this->tableVertFormatProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_VertFormatProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormatProperty->ImageryComponent_IdColumn}));
        this->tableVertFormatProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_VertFormatProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormatProperty->TextComponent_IdColumn}));
        this->tableVertFormatProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_HorzFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormat->FrameComponent_IdColumn}));
        this->tableHorzFormat->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_HorzFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormat->ImageryComponent_IdColumn}));
        this->tableHorzFormat->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_HorzFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormat->TextComponent_IdColumn}));
        this->tableHorzFormat->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FrameComponent_HorzFormatProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormatProperty->FrameComponent_IdColumn}));
        this->tableHorzFormatProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImageryComponent_HorzFormatProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormatProperty->ImageryComponent_IdColumn}));
        this->tableHorzFormatProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_HorzFormatProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormatProperty->TextComponent_IdColumn}));
        this->tableHorzFormatProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImagerySection_ImageryComponent", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImagerySection_IdColumn}));
        this->tableImageryComponent->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"ImagerySection_TextComponent", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->ImagerySection_IdColumn}));
        this->tableTextComponent->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_Text", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableText->TextComponent_IdColumn}));
        this->tableText->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_TextProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextProperty->TextComponent_IdColumn}));
        this->tableTextProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TextComponent_FontProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFontProperty->TextComponent_IdColumn}));
        this->tableFontProperty->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"WidgetLook_StateImagery", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableStateImagery->WidgetLook_IdColumn}));
        this->tableStateImagery->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"StateImagery_Layer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableStateImagery->StateImagery_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLayer->StateImagery_IdColumn}));
        this->tableLayer->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Layer_Section", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLayer->Layer_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Layer_IdColumn}));
        this->tableSection->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"WidgetLook_AnimationDefinition", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAnimationDefinition->WidgetLook_IdColumn}));
        this->tableAnimationDefinition->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AnimationDefinition_Affector", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAnimationDefinition->AnimationDefinition_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAffector->AnimationDefinition_IdColumn}));
        this->tableAffector->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Affector_KeyFrame", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAffector->Affector_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableKeyFrame->Affector_IdColumn}));
        this->tableKeyFrame->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AnimationDefinition_Subscription", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAnimationDefinition->AnimationDefinition_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSubscription->AnimationDefinition_IdColumn}));
        this->tableSubscription->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        this->relationFalagard_WidgetLook = (gcnew ::System::Data::DataRelation(L"Falagard_WidgetLook", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFalagard->Falagard_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->Falagard_IdColumn}, false));
        this->relationFalagard_WidgetLook->Nested = true;
        this->Relations->Add(this->relationFalagard_WidgetLook);
        this->relationWidgetLook_EventLinkDefinition = (gcnew ::System::Data::DataRelation(L"WidgetLook_EventLinkDefinition", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEventLinkDefinition->WidgetLook_IdColumn}, false));
        this->relationWidgetLook_EventLinkDefinition->Nested = true;
        this->Relations->Add(this->relationWidgetLook_EventLinkDefinition);
        this->relationEventLinkDefinition_EventLinkTarget = (gcnew ::System::Data::DataRelation(L"EventLinkDefinition_EventLinkTarget", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEventLinkDefinition->EventLinkDefinition_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEventLinkTarget->EventLinkDefinition_IdColumn}, 
            false));
        this->relationEventLinkDefinition_EventLinkTarget->Nested = true;
        this->Relations->Add(this->relationEventLinkDefinition_EventLinkTarget);
        this->relationWidgetLook_PropertyDefinition = (gcnew ::System::Data::DataRelation(L"WidgetLook_PropertyDefinition", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyDefinition->WidgetLook_IdColumn}, false));
        this->relationWidgetLook_PropertyDefinition->Nested = true;
        this->Relations->Add(this->relationWidgetLook_PropertyDefinition);
        this->relationWidgetLook_PropertyLinkDefinition = (gcnew ::System::Data::DataRelation(L"WidgetLook_PropertyLinkDefinition", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyLinkDefinition->WidgetLook_IdColumn}, 
            false));
        this->relationWidgetLook_PropertyLinkDefinition->Nested = true;
        this->Relations->Add(this->relationWidgetLook_PropertyLinkDefinition);
        this->relationPropertyLinkDefinition_PropertyLinkTarget = (gcnew ::System::Data::DataRelation(L"PropertyLinkDefinition_PropertyLinkTarget", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyLinkDefinition->PropertyLinkDefinition_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyLinkTarget->PropertyLinkDefinition_IdColumn}, 
            false));
        this->relationPropertyLinkDefinition_PropertyLinkTarget->Nested = true;
        this->Relations->Add(this->relationPropertyLinkDefinition_PropertyLinkTarget);
        this->relationChild_Property = (gcnew ::System::Data::DataRelation(L"Child_Property", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableProperty->Child_IdColumn}, false));
        this->relationChild_Property->Nested = true;
        this->Relations->Add(this->relationChild_Property);
        this->relationWidgetLook_Property = (gcnew ::System::Data::DataRelation(L"WidgetLook_Property", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableProperty->WidgetLook_IdColumn}, false));
        this->relationWidgetLook_Property->Nested = true;
        this->Relations->Add(this->relationWidgetLook_Property);
        this->relationWidgetLook_NamedArea = (gcnew ::System::Data::DataRelation(L"WidgetLook_NamedArea", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNamedArea->WidgetLook_IdColumn}, false));
        this->relationWidgetLook_NamedArea->Nested = true;
        this->Relations->Add(this->relationWidgetLook_NamedArea);
        this->relationNamedArea_Area = (gcnew ::System::Data::DataRelation(L"NamedArea_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNamedArea->NamedArea_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->NamedArea_IdColumn}, false));
        this->relationNamedArea_Area->Nested = true;
        this->Relations->Add(this->relationNamedArea_Area);
        this->relationChild_Area = (gcnew ::System::Data::DataRelation(L"Child_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->Child_IdColumn}, false));
        this->relationChild_Area->Nested = true;
        this->Relations->Add(this->relationChild_Area);
        this->relationFrameComponent_Area = (gcnew ::System::Data::DataRelation(L"FrameComponent_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->FrameComponent_IdColumn}, false));
        this->relationFrameComponent_Area->Nested = true;
        this->Relations->Add(this->relationFrameComponent_Area);
        this->relationImageryComponent_Area = (gcnew ::System::Data::DataRelation(L"ImageryComponent_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->ImageryComponent_IdColumn}, false));
        this->relationImageryComponent_Area->Nested = true;
        this->Relations->Add(this->relationImageryComponent_Area);
        this->relationTextComponent_Area = (gcnew ::System::Data::DataRelation(L"TextComponent_Area", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->TextComponent_IdColumn}, false));
        this->relationTextComponent_Area->Nested = true;
        this->Relations->Add(this->relationTextComponent_Area);
        this->relationArea_Dim = (gcnew ::System::Data::DataRelation(L"Area_Dim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->Area_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Area_IdColumn}, false));
        this->relationArea_Dim->Nested = true;
        this->Relations->Add(this->relationArea_Dim);
        this->relationOperatorDim_UnifiedDim = (gcnew ::System::Data::DataRelation(L"OperatorDim_UnifiedDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableUnifiedDim->OperatorDim_IdColumn}, false));
        this->relationOperatorDim_UnifiedDim->Nested = true;
        this->Relations->Add(this->relationOperatorDim_UnifiedDim);
        this->relationDim_UnifiedDim = (gcnew ::System::Data::DataRelation(L"Dim_UnifiedDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableUnifiedDim->Dim_IdColumn}, false));
        this->relationDim_UnifiedDim->Nested = true;
        this->Relations->Add(this->relationDim_UnifiedDim);
        this->relationOperatorDim_AbsoluteDim = (gcnew ::System::Data::DataRelation(L"OperatorDim_AbsoluteDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAbsoluteDim->OperatorDim_IdColumn}, false));
        this->relationOperatorDim_AbsoluteDim->Nested = true;
        this->Relations->Add(this->relationOperatorDim_AbsoluteDim);
        this->relationDim_AbsoluteDim = (gcnew ::System::Data::DataRelation(L"Dim_AbsoluteDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAbsoluteDim->Dim_IdColumn}, false));
        this->relationDim_AbsoluteDim->Nested = true;
        this->Relations->Add(this->relationDim_AbsoluteDim);
        this->relationOperatorDim_ImageDim = (gcnew ::System::Data::DataRelation(L"OperatorDim_ImageDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageDim->OperatorDim_IdColumn}, false));
        this->relationOperatorDim_ImageDim->Nested = true;
        this->Relations->Add(this->relationOperatorDim_ImageDim);
        this->relationDim_ImageDim = (gcnew ::System::Data::DataRelation(L"Dim_ImageDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageDim->Dim_IdColumn}, false));
        this->relationDim_ImageDim->Nested = true;
        this->Relations->Add(this->relationDim_ImageDim);
        this->relationOperatorDim_ImagePropertyDim = (gcnew ::System::Data::DataRelation(L"OperatorDim_ImagePropertyDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagePropertyDim->OperatorDim_IdColumn}, false));
        this->relationOperatorDim_ImagePropertyDim->Nested = true;
        this->Relations->Add(this->relationOperatorDim_ImagePropertyDim);
        this->relationDim_ImagePropertyDim = (gcnew ::System::Data::DataRelation(L"Dim_ImagePropertyDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagePropertyDim->Dim_IdColumn}, false));
        this->relationDim_ImagePropertyDim->Nested = true;
        this->Relations->Add(this->relationDim_ImagePropertyDim);
        this->relationOperatorDim_WidgetDim = (gcnew ::System::Data::DataRelation(L"OperatorDim_WidgetDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetDim->OperatorDim_IdColumn}, false));
        this->relationOperatorDim_WidgetDim->Nested = true;
        this->Relations->Add(this->relationOperatorDim_WidgetDim);
        this->relationDim_WidgetDim = (gcnew ::System::Data::DataRelation(L"Dim_WidgetDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetDim->Dim_IdColumn}, false));
        this->relationDim_WidgetDim->Nested = true;
        this->Relations->Add(this->relationDim_WidgetDim);
        this->relationOperatorDim_FontDim = (gcnew ::System::Data::DataRelation(L"OperatorDim_FontDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFontDim->OperatorDim_IdColumn}, false));
        this->relationOperatorDim_FontDim->Nested = true;
        this->Relations->Add(this->relationOperatorDim_FontDim);
        this->relationDim_FontDim = (gcnew ::System::Data::DataRelation(L"Dim_FontDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFontDim->Dim_IdColumn}, false));
        this->relationDim_FontDim->Nested = true;
        this->Relations->Add(this->relationDim_FontDim);
        this->relationOperatorDim_PropertyDim = (gcnew ::System::Data::DataRelation(L"OperatorDim_PropertyDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyDim->OperatorDim_IdColumn}, false));
        this->relationOperatorDim_PropertyDim->Nested = true;
        this->Relations->Add(this->relationOperatorDim_PropertyDim);
        this->relationDim_PropertyDim = (gcnew ::System::Data::DataRelation(L"Dim_PropertyDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablePropertyDim->Dim_IdColumn}, false));
        this->relationDim_PropertyDim->Nested = true;
        this->Relations->Add(this->relationDim_PropertyDim);
        this->relationOperatorDim_OperatorDim = (gcnew ::System::Data::DataRelation(L"OperatorDim_OperatorDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->OperatorDim_Id_0Column}, false));
        this->relationOperatorDim_OperatorDim->Nested = true;
        this->Relations->Add(this->relationOperatorDim_OperatorDim);
        this->relationDim_OperatorDim = (gcnew ::System::Data::DataRelation(L"Dim_OperatorDim", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDim->Dim_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOperatorDim->Dim_IdColumn}, false));
        this->relationDim_OperatorDim->Nested = true;
        this->Relations->Add(this->relationDim_OperatorDim);
        this->relationArea_AreaProperty = (gcnew ::System::Data::DataRelation(L"Area_AreaProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->Area_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAreaProperty->Area_IdColumn}, false));
        this->relationArea_AreaProperty->Nested = true;
        this->Relations->Add(this->relationArea_AreaProperty);
        this->relationArea_NamedAreaSource = (gcnew ::System::Data::DataRelation(L"Area_NamedAreaSource", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableArea->Area_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNamedAreaSource->Area_IdColumn}, false));
        this->relationArea_NamedAreaSource->Nested = true;
        this->Relations->Add(this->relationArea_NamedAreaSource);
        this->relationWidgetLook_Child = (gcnew ::System::Data::DataRelation(L"WidgetLook_Child", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->WidgetLook_IdColumn}, false));
        this->relationWidgetLook_Child->Nested = true;
        this->Relations->Add(this->relationWidgetLook_Child);
        this->relationChild_EventAction = (gcnew ::System::Data::DataRelation(L"Child_EventAction", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEventAction->Child_IdColumn}, false));
        this->relationChild_EventAction->Nested = true;
        this->Relations->Add(this->relationChild_EventAction);
        this->relationChild_VertAlignment = (gcnew ::System::Data::DataRelation(L"Child_VertAlignment", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertAlignment->Child_IdColumn}, false));
        this->relationChild_VertAlignment->Nested = true;
        this->Relations->Add(this->relationChild_VertAlignment);
        this->relationChild_HorzAlignment = (gcnew ::System::Data::DataRelation(L"Child_HorzAlignment", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableChild->Child_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzAlignment->Child_IdColumn}, false));
        this->relationChild_HorzAlignment->Nested = true;
        this->Relations->Add(this->relationChild_HorzAlignment);
        this->relationWidgetLook_ImagerySection = (gcnew ::System::Data::DataRelation(L"WidgetLook_ImagerySection", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->WidgetLook_IdColumn}, false));
        this->relationWidgetLook_ImagerySection->Nested = true;
        this->Relations->Add(this->relationWidgetLook_ImagerySection);
        this->relationFrameComponent_Colour = (gcnew ::System::Data::DataRelation(L"FrameComponent_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->FrameComponent_IdColumn}, false));
        this->relationFrameComponent_Colour->Nested = true;
        this->Relations->Add(this->relationFrameComponent_Colour);
        this->relationImageryComponent_Colour = (gcnew ::System::Data::DataRelation(L"ImageryComponent_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->ImageryComponent_IdColumn}, false));
        this->relationImageryComponent_Colour->Nested = true;
        this->Relations->Add(this->relationImageryComponent_Colour);
        this->relationTextComponent_Colour = (gcnew ::System::Data::DataRelation(L"TextComponent_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->TextComponent_IdColumn}, false));
        this->relationTextComponent_Colour->Nested = true;
        this->Relations->Add(this->relationTextComponent_Colour);
        this->relationImagerySection_Colour = (gcnew ::System::Data::DataRelation(L"ImagerySection_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->ImagerySection_IdColumn}, false));
        this->relationImagerySection_Colour->Nested = true;
        this->Relations->Add(this->relationImagerySection_Colour);
        this->relationSection_Colour = (gcnew ::System::Data::DataRelation(L"Section_Colour", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Section_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColour->Section_IdColumn}, false));
        this->relationSection_Colour->Nested = true;
        this->Relations->Add(this->relationSection_Colour);
        this->relationFrameComponent_Colours = (gcnew ::System::Data::DataRelation(L"FrameComponent_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->FrameComponent_IdColumn}, false));
        this->relationFrameComponent_Colours->Nested = true;
        this->Relations->Add(this->relationFrameComponent_Colours);
        this->relationImageryComponent_Colours = (gcnew ::System::Data::DataRelation(L"ImageryComponent_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->ImageryComponent_IdColumn}, false));
        this->relationImageryComponent_Colours->Nested = true;
        this->Relations->Add(this->relationImageryComponent_Colours);
        this->relationTextComponent_Colours = (gcnew ::System::Data::DataRelation(L"TextComponent_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->TextComponent_IdColumn}, false));
        this->relationTextComponent_Colours->Nested = true;
        this->Relations->Add(this->relationTextComponent_Colours);
        this->relationImagerySection_Colours = (gcnew ::System::Data::DataRelation(L"ImagerySection_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->ImagerySection_IdColumn}, false));
        this->relationImagerySection_Colours->Nested = true;
        this->Relations->Add(this->relationImagerySection_Colours);
        this->relationSection_Colours = (gcnew ::System::Data::DataRelation(L"Section_Colours", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Section_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColours->Section_IdColumn}, false));
        this->relationSection_Colours->Nested = true;
        this->Relations->Add(this->relationSection_Colours);
        this->relationFrameComponent_ColourProperty = (gcnew ::System::Data::DataRelation(L"FrameComponent_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->FrameComponent_IdColumn}, false));
        this->relationFrameComponent_ColourProperty->Nested = true;
        this->Relations->Add(this->relationFrameComponent_ColourProperty);
        this->relationImageryComponent_ColourProperty = (gcnew ::System::Data::DataRelation(L"ImageryComponent_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->ImageryComponent_IdColumn}, false));
        this->relationImageryComponent_ColourProperty->Nested = true;
        this->Relations->Add(this->relationImageryComponent_ColourProperty);
        this->relationTextComponent_ColourProperty = (gcnew ::System::Data::DataRelation(L"TextComponent_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->TextComponent_IdColumn}, false));
        this->relationTextComponent_ColourProperty->Nested = true;
        this->Relations->Add(this->relationTextComponent_ColourProperty);
        this->relationImagerySection_ColourProperty = (gcnew ::System::Data::DataRelation(L"ImagerySection_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->ImagerySection_IdColumn}, false));
        this->relationImagerySection_ColourProperty->Nested = true;
        this->Relations->Add(this->relationImagerySection_ColourProperty);
        this->relationSection_ColourProperty = (gcnew ::System::Data::DataRelation(L"Section_ColourProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Section_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourProperty->Section_IdColumn}, false));
        this->relationSection_ColourProperty->Nested = true;
        this->Relations->Add(this->relationSection_ColourProperty);
        this->relationFrameComponent_ColourRectProperty = (gcnew ::System::Data::DataRelation(L"FrameComponent_ColourRectProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->FrameComponent_IdColumn}, 
            false));
        this->relationFrameComponent_ColourRectProperty->Nested = true;
        this->Relations->Add(this->relationFrameComponent_ColourRectProperty);
        this->relationImageryComponent_ColourRectProperty = (gcnew ::System::Data::DataRelation(L"ImageryComponent_ColourRectProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->ImageryComponent_IdColumn}, 
            false));
        this->relationImageryComponent_ColourRectProperty->Nested = true;
        this->Relations->Add(this->relationImageryComponent_ColourRectProperty);
        this->relationTextComponent_ColourRectProperty = (gcnew ::System::Data::DataRelation(L"TextComponent_ColourRectProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->TextComponent_IdColumn}, 
            false));
        this->relationTextComponent_ColourRectProperty->Nested = true;
        this->Relations->Add(this->relationTextComponent_ColourRectProperty);
        this->relationImagerySection_ColourRectProperty = (gcnew ::System::Data::DataRelation(L"ImagerySection_ColourRectProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->ImagerySection_IdColumn}, 
            false));
        this->relationImagerySection_ColourRectProperty->Nested = true;
        this->Relations->Add(this->relationImagerySection_ColourRectProperty);
        this->relationSection_ColourRectProperty = (gcnew ::System::Data::DataRelation(L"Section_ColourRectProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Section_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableColourRectProperty->Section_IdColumn}, false));
        this->relationSection_ColourRectProperty->Nested = true;
        this->Relations->Add(this->relationSection_ColourRectProperty);
        this->relationImagerySection_FrameComponent = (gcnew ::System::Data::DataRelation(L"ImagerySection_FrameComponent", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->ImagerySection_IdColumn}, false));
        this->relationImagerySection_FrameComponent->Nested = true;
        this->Relations->Add(this->relationImagerySection_FrameComponent);
        this->relationFrameComponent_Image = (gcnew ::System::Data::DataRelation(L"FrameComponent_Image", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImage->FrameComponent_IdColumn}, false));
        this->relationFrameComponent_Image->Nested = true;
        this->Relations->Add(this->relationFrameComponent_Image);
        this->relationImageryComponent_Image = (gcnew ::System::Data::DataRelation(L"ImageryComponent_Image", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImage->ImageryComponent_IdColumn}, false));
        this->relationImageryComponent_Image->Nested = true;
        this->Relations->Add(this->relationImageryComponent_Image);
        this->relationFrameComponent_ImageProperty = (gcnew ::System::Data::DataRelation(L"FrameComponent_ImageProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageProperty->FrameComponent_IdColumn}, false));
        this->relationFrameComponent_ImageProperty->Nested = true;
        this->Relations->Add(this->relationFrameComponent_ImageProperty);
        this->relationImageryComponent_ImageProperty = (gcnew ::System::Data::DataRelation(L"ImageryComponent_ImageProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageProperty->ImageryComponent_IdColumn}, false));
        this->relationImageryComponent_ImageProperty->Nested = true;
        this->Relations->Add(this->relationImageryComponent_ImageProperty);
        this->relationFrameComponent_VertFormat = (gcnew ::System::Data::DataRelation(L"FrameComponent_VertFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormat->FrameComponent_IdColumn}, false));
        this->relationFrameComponent_VertFormat->Nested = true;
        this->Relations->Add(this->relationFrameComponent_VertFormat);
        this->relationImageryComponent_VertFormat = (gcnew ::System::Data::DataRelation(L"ImageryComponent_VertFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormat->ImageryComponent_IdColumn}, false));
        this->relationImageryComponent_VertFormat->Nested = true;
        this->Relations->Add(this->relationImageryComponent_VertFormat);
        this->relationTextComponent_VertFormat = (gcnew ::System::Data::DataRelation(L"TextComponent_VertFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormat->TextComponent_IdColumn}, false));
        this->relationTextComponent_VertFormat->Nested = true;
        this->Relations->Add(this->relationTextComponent_VertFormat);
        this->relationFrameComponent_VertFormatProperty = (gcnew ::System::Data::DataRelation(L"FrameComponent_VertFormatProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormatProperty->FrameComponent_IdColumn}, 
            false));
        this->relationFrameComponent_VertFormatProperty->Nested = true;
        this->Relations->Add(this->relationFrameComponent_VertFormatProperty);
        this->relationImageryComponent_VertFormatProperty = (gcnew ::System::Data::DataRelation(L"ImageryComponent_VertFormatProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormatProperty->ImageryComponent_IdColumn}, 
            false));
        this->relationImageryComponent_VertFormatProperty->Nested = true;
        this->Relations->Add(this->relationImageryComponent_VertFormatProperty);
        this->relationTextComponent_VertFormatProperty = (gcnew ::System::Data::DataRelation(L"TextComponent_VertFormatProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableVertFormatProperty->TextComponent_IdColumn}, 
            false));
        this->relationTextComponent_VertFormatProperty->Nested = true;
        this->Relations->Add(this->relationTextComponent_VertFormatProperty);
        this->relationFrameComponent_HorzFormat = (gcnew ::System::Data::DataRelation(L"FrameComponent_HorzFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormat->FrameComponent_IdColumn}, false));
        this->relationFrameComponent_HorzFormat->Nested = true;
        this->Relations->Add(this->relationFrameComponent_HorzFormat);
        this->relationImageryComponent_HorzFormat = (gcnew ::System::Data::DataRelation(L"ImageryComponent_HorzFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormat->ImageryComponent_IdColumn}, false));
        this->relationImageryComponent_HorzFormat->Nested = true;
        this->Relations->Add(this->relationImageryComponent_HorzFormat);
        this->relationTextComponent_HorzFormat = (gcnew ::System::Data::DataRelation(L"TextComponent_HorzFormat", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormat->TextComponent_IdColumn}, false));
        this->relationTextComponent_HorzFormat->Nested = true;
        this->Relations->Add(this->relationTextComponent_HorzFormat);
        this->relationFrameComponent_HorzFormatProperty = (gcnew ::System::Data::DataRelation(L"FrameComponent_HorzFormatProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFrameComponent->FrameComponent_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormatProperty->FrameComponent_IdColumn}, 
            false));
        this->relationFrameComponent_HorzFormatProperty->Nested = true;
        this->Relations->Add(this->relationFrameComponent_HorzFormatProperty);
        this->relationImageryComponent_HorzFormatProperty = (gcnew ::System::Data::DataRelation(L"ImageryComponent_HorzFormatProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImageryComponent_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormatProperty->ImageryComponent_IdColumn}, 
            false));
        this->relationImageryComponent_HorzFormatProperty->Nested = true;
        this->Relations->Add(this->relationImageryComponent_HorzFormatProperty);
        this->relationTextComponent_HorzFormatProperty = (gcnew ::System::Data::DataRelation(L"TextComponent_HorzFormatProperty", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHorzFormatProperty->TextComponent_IdColumn}, 
            false));
        this->relationTextComponent_HorzFormatProperty->Nested = true;
        this->Relations->Add(this->relationTextComponent_HorzFormatProperty);
        this->relationImagerySection_ImageryComponent = (gcnew ::System::Data::DataRelation(L"ImagerySection_ImageryComponent", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImageryComponent->ImagerySection_IdColumn}, false));
        this->relationImagerySection_ImageryComponent->Nested = true;
        this->Relations->Add(this->relationImagerySection_ImageryComponent);
        this->relationImagerySection_TextComponent = (gcnew ::System::Data::DataRelation(L"ImagerySection_TextComponent", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableImagerySection->ImagerySection_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->ImagerySection_IdColumn}, false));
        this->relationImagerySection_TextComponent->Nested = true;
        this->Relations->Add(this->relationImagerySection_TextComponent);
        this->relationTextComponent_Text = (gcnew ::System::Data::DataRelation(L"TextComponent_Text", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableText->TextComponent_IdColumn}, false));
        this->relationTextComponent_Text->Nested = true;
        this->Relations->Add(this->relationTextComponent_Text);
        this->relationTextComponent_TextProperty = (gcnew ::System::Data::DataRelation(L"TextComponent_TextProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextProperty->TextComponent_IdColumn}, false));
        this->relationTextComponent_TextProperty->Nested = true;
        this->Relations->Add(this->relationTextComponent_TextProperty);
        this->relationTextComponent_FontProperty = (gcnew ::System::Data::DataRelation(L"TextComponent_FontProperty", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTextComponent->TextComponent_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFontProperty->TextComponent_IdColumn}, false));
        this->relationTextComponent_FontProperty->Nested = true;
        this->Relations->Add(this->relationTextComponent_FontProperty);
        this->relationWidgetLook_StateImagery = (gcnew ::System::Data::DataRelation(L"WidgetLook_StateImagery", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableStateImagery->WidgetLook_IdColumn}, false));
        this->relationWidgetLook_StateImagery->Nested = true;
        this->Relations->Add(this->relationWidgetLook_StateImagery);
        this->relationStateImagery_Layer = (gcnew ::System::Data::DataRelation(L"StateImagery_Layer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableStateImagery->StateImagery_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLayer->StateImagery_IdColumn}, false));
        this->relationStateImagery_Layer->Nested = true;
        this->Relations->Add(this->relationStateImagery_Layer);
        this->relationLayer_Section = (gcnew ::System::Data::DataRelation(L"Layer_Section", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLayer->Layer_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSection->Layer_IdColumn}, false));
        this->relationLayer_Section->Nested = true;
        this->Relations->Add(this->relationLayer_Section);
        this->relationWidgetLook_AnimationDefinition = (gcnew ::System::Data::DataRelation(L"WidgetLook_AnimationDefinition", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableWidgetLook->WidgetLook_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAnimationDefinition->WidgetLook_IdColumn}, false));
        this->relationWidgetLook_AnimationDefinition->Nested = true;
        this->Relations->Add(this->relationWidgetLook_AnimationDefinition);
        this->relationAnimationDefinition_Affector = (gcnew ::System::Data::DataRelation(L"AnimationDefinition_Affector", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAnimationDefinition->AnimationDefinition_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAffector->AnimationDefinition_IdColumn}, false));
        this->relationAnimationDefinition_Affector->Nested = true;
        this->Relations->Add(this->relationAnimationDefinition_Affector);
        this->relationAffector_KeyFrame = (gcnew ::System::Data::DataRelation(L"Affector_KeyFrame", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAffector->Affector_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableKeyFrame->Affector_IdColumn}, false));
        this->relationAffector_KeyFrame->Nested = true;
        this->Relations->Add(this->relationAffector_KeyFrame);
        this->relationAnimationDefinition_Subscription = (gcnew ::System::Data::DataRelation(L"AnimationDefinition_Subscription", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAnimationDefinition->AnimationDefinition_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSubscription->AnimationDefinition_IdColumn}, 
            false));
        this->relationAnimationDefinition_Subscription->Nested = true;
        this->Relations->Add(this->relationAnimationDefinition_Subscription);
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeFalagard() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeWidgetLook() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeEventLinkDefinition() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeEventLinkTarget() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializePropertyDefinition() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializePropertyLinkDefinition() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializePropertyLinkTarget() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeProperty() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeNamedArea() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeArea() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeDim() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeUnifiedDim() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeAbsoluteDim() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeImageDim() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeImagePropertyDim() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeWidgetDim() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeFontDim() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializePropertyDim() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeOperatorDim() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeAreaProperty() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeNamedAreaSource() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeChild() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeEventAction() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeVertAlignment() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeHorzAlignment() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeImagerySection() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeColour() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeColours() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeColourProperty() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeColourRectProperty() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeFrameComponent() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeImage() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeImageProperty() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeVertFormat() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeVertFormatProperty() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeHorzFormat() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeHorzFormatProperty() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeImageryComponent() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeTextComponent() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeText() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeTextProperty() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeFontProperty() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeStateImagery() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeLayer() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeSection() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeAnimationDefinition() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeAffector() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeKeyFrame() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeSubscription() {
        return false;
    }
    
    inline ::System::Void NewDataSet::SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e) {
        if (e->Action == ::System::ComponentModel::CollectionChangeAction::Remove) {
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ::System::Xml::Schema::XmlSchemaAny^  any = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any->Namespace = ds->Namespace;
        sequence->Items->Add(any);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::FalagardDataTable::FalagardDataTable() {
        this->TableName = L"Falagard";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::FalagardDataTable::FalagardDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::FalagardDataTable::FalagardDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FalagardDataTable::versionColumn::get() {
        return this->columnversion;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FalagardDataTable::Falagard_IdColumn::get() {
        return this->columnFalagard_Id;
    }
    
    inline ::System::Int32 NewDataSet::FalagardDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::FalagardRow^  NewDataSet::FalagardDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::FalagardDataTable::AddFalagardRow(NinjaPlatformer::NewDataSet::FalagardRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::FalagardRow^  NewDataSet::FalagardDataTable::AddFalagardRow(System::UInt64 version) {
        NinjaPlatformer::NewDataSet::FalagardRow^  rowFalagardRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {version, nullptr};
        rowFalagardRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowFalagardRow);
        return rowFalagardRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::FalagardDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::FalagardDataTable::Clone() {
        NinjaPlatformer::NewDataSet::FalagardDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::FalagardDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::FalagardDataTable());
    }
    
    inline ::System::Void NewDataSet::FalagardDataTable::InitVars() {
        this->columnversion = __super::Columns[L"version"];
        this->columnFalagard_Id = __super::Columns[L"Falagard_Id"];
    }
    
    inline ::System::Void NewDataSet::FalagardDataTable::InitClass() {
        this->columnversion = (gcnew ::System::Data::DataColumn(L"version", ::System::UInt64::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnversion);
        this->columnFalagard_Id = (gcnew ::System::Data::DataColumn(L"Falagard_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFalagard_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnFalagard_Id}, 
                true)));
        this->columnversion->Namespace = L"";
        this->columnversion->DefaultValue = static_cast<System::UInt64>(0);
        this->columnFalagard_Id->AutoIncrement = true;
        this->columnFalagard_Id->AllowDBNull = false;
        this->columnFalagard_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::FalagardRow^  NewDataSet::FalagardDataTable::NewFalagardRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::FalagardDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::FalagardRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::FalagardDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::FalagardRow::typeid;
    }
    
    inline ::System::Void NewDataSet::FalagardDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->FalagardRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::FalagardRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FalagardDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->FalagardRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::FalagardRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FalagardDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->FalagardRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::FalagardRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FalagardDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->FalagardRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::FalagardRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FalagardDataTable::RemoveFalagardRow(NinjaPlatformer::NewDataSet::FalagardRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::FalagardDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"FalagardDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::WidgetLookDataTable::WidgetLookDataTable() {
        this->TableName = L"WidgetLook";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::WidgetLookDataTable::WidgetLookDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::WidgetLookDataTable::WidgetLookDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::WidgetLookDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::WidgetLookDataTable::inheritsColumn::get() {
        return this->columninherits;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::WidgetLookDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::WidgetLookDataTable::Falagard_IdColumn::get() {
        return this->columnFalagard_Id;
    }
    
    inline ::System::Int32 NewDataSet::WidgetLookDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::WidgetLookDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::WidgetLookDataTable::AddWidgetLookRow(NinjaPlatformer::NewDataSet::WidgetLookRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::WidgetLookDataTable::AddWidgetLookRow(System::String^  name, 
                System::String^  inherits, NinjaPlatformer::NewDataSet::FalagardRow^  parentFalagardRowByFalagard_WidgetLook) {
        NinjaPlatformer::NewDataSet::WidgetLookRow^  rowWidgetLookRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {name, inherits, nullptr, 
            nullptr};
        if (parentFalagardRowByFalagard_WidgetLook != nullptr) {
            columnValuesArray[3] = parentFalagardRowByFalagard_WidgetLook[1];
        }
        rowWidgetLookRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowWidgetLookRow);
        return rowWidgetLookRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::WidgetLookDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::WidgetLookDataTable::Clone() {
        NinjaPlatformer::NewDataSet::WidgetLookDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::WidgetLookDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::WidgetLookDataTable());
    }
    
    inline ::System::Void NewDataSet::WidgetLookDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columninherits = __super::Columns[L"inherits"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
        this->columnFalagard_Id = __super::Columns[L"Falagard_Id"];
    }
    
    inline ::System::Void NewDataSet::WidgetLookDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columninherits = (gcnew ::System::Data::DataColumn(L"inherits", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columninherits);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->columnFalagard_Id = (gcnew ::System::Data::DataColumn(L"Falagard_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFalagard_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnWidgetLook_Id}, 
                true)));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columninherits->Namespace = L"";
        this->columninherits->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnWidgetLook_Id->AutoIncrement = true;
        this->columnWidgetLook_Id->AllowDBNull = false;
        this->columnWidgetLook_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::WidgetLookDataTable::NewWidgetLookRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::WidgetLookDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::WidgetLookRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::WidgetLookDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::WidgetLookRow::typeid;
    }
    
    inline ::System::Void NewDataSet::WidgetLookDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->WidgetLookRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::WidgetLookRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::WidgetLookDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->WidgetLookRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::WidgetLookRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::WidgetLookDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->WidgetLookRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::WidgetLookRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::WidgetLookDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->WidgetLookRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::WidgetLookRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::WidgetLookDataTable::RemoveWidgetLookRow(NinjaPlatformer::NewDataSet::WidgetLookRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::WidgetLookDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"WidgetLookDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::EventLinkDefinitionDataTable::EventLinkDefinitionDataTable() {
        this->TableName = L"EventLinkDefinition";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::EventLinkDefinitionDataTable::EventLinkDefinitionDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::EventLinkDefinitionDataTable::EventLinkDefinitionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventLinkDefinitionDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventLinkDefinitionDataTable::widgetColumn::get() {
        return this->columnwidget;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventLinkDefinitionDataTable::_eventColumn::get() {
        return this->column_event;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventLinkDefinitionDataTable::EventLinkDefinition_IdColumn::get() {
        return this->columnEventLinkDefinition_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventLinkDefinitionDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Int32 NewDataSet::EventLinkDefinitionDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  NewDataSet::EventLinkDefinitionDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionDataTable::AddEventLinkDefinitionRow(NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  NewDataSet::EventLinkDefinitionDataTable::AddEventLinkDefinitionRow(
                System::String^  name, System::String^  widget, System::String^  _event, NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_EventLinkDefinition) {
        NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  rowEventLinkDefinitionRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {name, widget, _event, 
            nullptr, nullptr};
        if (parentWidgetLookRowByWidgetLook_EventLinkDefinition != nullptr) {
            columnValuesArray[4] = parentWidgetLookRowByWidgetLook_EventLinkDefinition[2];
        }
        rowEventLinkDefinitionRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowEventLinkDefinitionRow);
        return rowEventLinkDefinitionRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::EventLinkDefinitionDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EventLinkDefinitionDataTable::Clone() {
        NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EventLinkDefinitionDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable());
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnwidget = __super::Columns[L"widget"];
        this->column_event = __super::Columns[L"event"];
        this->columnEventLinkDefinition_Id = __super::Columns[L"EventLinkDefinition_Id"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnwidget = (gcnew ::System::Data::DataColumn(L"widget", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnwidget);
        this->column_event = (gcnew ::System::Data::DataColumn(L"event", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->column_event);
        this->columnEventLinkDefinition_Id = (gcnew ::System::Data::DataColumn(L"EventLinkDefinition_Id", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnEventLinkDefinition_Id);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnEventLinkDefinition_Id}, 
                true)));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columnwidget->Namespace = L"";
        this->columnwidget->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->column_event->Namespace = L"";
        this->column_event->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnEventLinkDefinition_Id->AutoIncrement = true;
        this->columnEventLinkDefinition_Id->AllowDBNull = false;
        this->columnEventLinkDefinition_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  NewDataSet::EventLinkDefinitionDataTable::NewEventLinkDefinitionRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::EventLinkDefinitionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::EventLinkDefinitionRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::EventLinkDefinitionDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::EventLinkDefinitionRow::typeid;
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->EventLinkDefinitionRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::EventLinkDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->EventLinkDefinitionRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::EventLinkDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->EventLinkDefinitionRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::EventLinkDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->EventLinkDefinitionRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::EventLinkDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionDataTable::RemoveEventLinkDefinitionRow(NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::EventLinkDefinitionDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"EventLinkDefinitionDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::EventLinkTargetDataTable::EventLinkTargetDataTable() {
        this->TableName = L"EventLinkTarget";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::EventLinkTargetDataTable::EventLinkTargetDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::EventLinkTargetDataTable::EventLinkTargetDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventLinkTargetDataTable::widgetColumn::get() {
        return this->columnwidget;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventLinkTargetDataTable::_eventColumn::get() {
        return this->column_event;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventLinkTargetDataTable::EventLinkDefinition_IdColumn::get() {
        return this->columnEventLinkDefinition_Id;
    }
    
    inline ::System::Int32 NewDataSet::EventLinkTargetDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkTargetRow^  NewDataSet::EventLinkTargetDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetDataTable::AddEventLinkTargetRow(NinjaPlatformer::NewDataSet::EventLinkTargetRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkTargetRow^  NewDataSet::EventLinkTargetDataTable::AddEventLinkTargetRow(
                System::String^  widget, System::String^  _event, NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  parentEventLinkDefinitionRowByEventLinkDefinition_EventLinkTarget) {
        NinjaPlatformer::NewDataSet::EventLinkTargetRow^  rowEventLinkTargetRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {widget, _event, nullptr};
        if (parentEventLinkDefinitionRowByEventLinkDefinition_EventLinkTarget != nullptr) {
            columnValuesArray[2] = parentEventLinkDefinitionRowByEventLinkDefinition_EventLinkTarget[3];
        }
        rowEventLinkTargetRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowEventLinkTargetRow);
        return rowEventLinkTargetRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::EventLinkTargetDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EventLinkTargetDataTable::Clone() {
        NinjaPlatformer::NewDataSet::EventLinkTargetDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EventLinkTargetDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::EventLinkTargetDataTable());
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetDataTable::InitVars() {
        this->columnwidget = __super::Columns[L"widget"];
        this->column_event = __super::Columns[L"event"];
        this->columnEventLinkDefinition_Id = __super::Columns[L"EventLinkDefinition_Id"];
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetDataTable::InitClass() {
        this->columnwidget = (gcnew ::System::Data::DataColumn(L"widget", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnwidget);
        this->column_event = (gcnew ::System::Data::DataColumn(L"event", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->column_event);
        this->columnEventLinkDefinition_Id = (gcnew ::System::Data::DataColumn(L"EventLinkDefinition_Id", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnEventLinkDefinition_Id);
        this->columnwidget->AllowDBNull = false;
        this->columnwidget->Namespace = L"";
        this->column_event->Namespace = L"";
        this->column_event->DefaultValue = (cli::safe_cast<System::String^  >(L""));
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkTargetRow^  NewDataSet::EventLinkTargetDataTable::NewEventLinkTargetRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::EventLinkTargetDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::EventLinkTargetRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::EventLinkTargetDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::EventLinkTargetRow::typeid;
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->EventLinkTargetRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::EventLinkTargetRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->EventLinkTargetRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::EventLinkTargetRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->EventLinkTargetRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::EventLinkTargetRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->EventLinkTargetRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::EventLinkTargetRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetDataTable::RemoveEventLinkTargetRow(NinjaPlatformer::NewDataSet::EventLinkTargetRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::EventLinkTargetDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"EventLinkTargetDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::PropertyDefinitionDataTable::PropertyDefinitionDataTable() {
        this->TableName = L"PropertyDefinition";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::PropertyDefinitionDataTable::PropertyDefinitionDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::PropertyDefinitionDataTable::PropertyDefinitionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDefinitionDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDefinitionDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDefinitionDataTable::initialValueColumn::get() {
        return this->columninitialValue;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDefinitionDataTable::layoutOnWriteColumn::get() {
        return this->columnlayoutOnWrite;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDefinitionDataTable::redrawOnWriteColumn::get() {
        return this->columnredrawOnWrite;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDefinitionDataTable::helpColumn::get() {
        return this->columnhelp;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDefinitionDataTable::fireEventColumn::get() {
        return this->columnfireEvent;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDefinitionDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Int32 NewDataSet::PropertyDefinitionDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  NewDataSet::PropertyDefinitionDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionDataTable::AddPropertyDefinitionRow(NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  NewDataSet::PropertyDefinitionDataTable::AddPropertyDefinitionRow(
                System::String^  type, 
                System::String^  name, 
                System::String^  initialValue, 
                System::Boolean layoutOnWrite, 
                System::Boolean redrawOnWrite, 
                System::String^  help, 
                System::String^  fireEvent, 
                NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_PropertyDefinition) {
        NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  rowPropertyDefinitionRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(8) {type, name, initialValue, 
            layoutOnWrite, redrawOnWrite, help, fireEvent, nullptr};
        if (parentWidgetLookRowByWidgetLook_PropertyDefinition != nullptr) {
            columnValuesArray[7] = parentWidgetLookRowByWidgetLook_PropertyDefinition[2];
        }
        rowPropertyDefinitionRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowPropertyDefinitionRow);
        return rowPropertyDefinitionRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::PropertyDefinitionDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyDefinitionDataTable::Clone() {
        NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyDefinitionDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable());
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionDataTable::InitVars() {
        this->columntype = __super::Columns[L"type"];
        this->columnname = __super::Columns[L"name"];
        this->columninitialValue = __super::Columns[L"initialValue"];
        this->columnlayoutOnWrite = __super::Columns[L"layoutOnWrite"];
        this->columnredrawOnWrite = __super::Columns[L"redrawOnWrite"];
        this->columnhelp = __super::Columns[L"help"];
        this->columnfireEvent = __super::Columns[L"fireEvent"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionDataTable::InitClass() {
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columninitialValue = (gcnew ::System::Data::DataColumn(L"initialValue", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columninitialValue);
        this->columnlayoutOnWrite = (gcnew ::System::Data::DataColumn(L"layoutOnWrite", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnlayoutOnWrite);
        this->columnredrawOnWrite = (gcnew ::System::Data::DataColumn(L"redrawOnWrite", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnredrawOnWrite);
        this->columnhelp = (gcnew ::System::Data::DataColumn(L"help", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnhelp);
        this->columnfireEvent = (gcnew ::System::Data::DataColumn(L"fireEvent", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnfireEvent);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->columntype->Namespace = L"";
        this->columntype->DefaultValue = (cli::safe_cast<System::String^  >(L"Generic"));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columninitialValue->Namespace = L"";
        this->columninitialValue->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnlayoutOnWrite->Namespace = L"";
        this->columnlayoutOnWrite->DefaultValue = static_cast<System::Boolean>(false);
        this->columnredrawOnWrite->Namespace = L"";
        this->columnredrawOnWrite->DefaultValue = static_cast<System::Boolean>(false);
        this->columnhelp->Namespace = L"";
        this->columnhelp->DefaultValue = (cli::safe_cast<System::String^  >(L"Falagard custom property definition - gets/sets a named user string."));
        this->columnfireEvent->Namespace = L"";
        this->columnfireEvent->DefaultValue = (cli::safe_cast<System::String^  >(L""));
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  NewDataSet::PropertyDefinitionDataTable::NewPropertyDefinitionRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::PropertyDefinitionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyDefinitionRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::PropertyDefinitionDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::PropertyDefinitionRow::typeid;
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->PropertyDefinitionRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::PropertyDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->PropertyDefinitionRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::PropertyDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->PropertyDefinitionRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::PropertyDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->PropertyDefinitionRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::PropertyDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionDataTable::RemovePropertyDefinitionRow(NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::PropertyDefinitionDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"PropertyDefinitionDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::PropertyLinkDefinitionDataTable::PropertyLinkDefinitionDataTable() {
        this->TableName = L"PropertyLinkDefinition";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::PropertyLinkDefinitionDataTable::PropertyLinkDefinitionDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::PropertyLinkDefinitionDataTable::PropertyLinkDefinitionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::widgetColumn::get() {
        return this->columnwidget;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::targetPropertyColumn::get() {
        return this->columntargetProperty;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::initialValueColumn::get() {
        return this->columninitialValue;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::layoutOnWriteColumn::get() {
        return this->columnlayoutOnWrite;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::redrawOnWriteColumn::get() {
        return this->columnredrawOnWrite;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::fireEventColumn::get() {
        return this->columnfireEvent;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::PropertyLinkDefinition_IdColumn::get() {
        return this->columnPropertyLinkDefinition_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkDefinitionDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Int32 NewDataSet::PropertyLinkDefinitionDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  NewDataSet::PropertyLinkDefinitionDataTable::default::get(
                ::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionDataTable::AddPropertyLinkDefinitionRow(NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  NewDataSet::PropertyLinkDefinitionDataTable::AddPropertyLinkDefinitionRow(
                System::String^  type, 
                System::String^  name, 
                System::String^  widget, 
                System::String^  targetProperty, 
                System::String^  initialValue, 
                System::Boolean layoutOnWrite, 
                System::Boolean redrawOnWrite, 
                System::String^  fireEvent, 
                NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_PropertyLinkDefinition) {
        NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  rowPropertyLinkDefinitionRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(10) {type, name, widget, 
            targetProperty, initialValue, layoutOnWrite, redrawOnWrite, fireEvent, nullptr, nullptr};
        if (parentWidgetLookRowByWidgetLook_PropertyLinkDefinition != nullptr) {
            columnValuesArray[9] = parentWidgetLookRowByWidgetLook_PropertyLinkDefinition[2];
        }
        rowPropertyLinkDefinitionRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowPropertyLinkDefinitionRow);
        return rowPropertyLinkDefinitionRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::PropertyLinkDefinitionDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyLinkDefinitionDataTable::Clone() {
        NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyLinkDefinitionDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable());
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionDataTable::InitVars() {
        this->columntype = __super::Columns[L"type"];
        this->columnname = __super::Columns[L"name"];
        this->columnwidget = __super::Columns[L"widget"];
        this->columntargetProperty = __super::Columns[L"targetProperty"];
        this->columninitialValue = __super::Columns[L"initialValue"];
        this->columnlayoutOnWrite = __super::Columns[L"layoutOnWrite"];
        this->columnredrawOnWrite = __super::Columns[L"redrawOnWrite"];
        this->columnfireEvent = __super::Columns[L"fireEvent"];
        this->columnPropertyLinkDefinition_Id = __super::Columns[L"PropertyLinkDefinition_Id"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionDataTable::InitClass() {
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnwidget = (gcnew ::System::Data::DataColumn(L"widget", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnwidget);
        this->columntargetProperty = (gcnew ::System::Data::DataColumn(L"targetProperty", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntargetProperty);
        this->columninitialValue = (gcnew ::System::Data::DataColumn(L"initialValue", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columninitialValue);
        this->columnlayoutOnWrite = (gcnew ::System::Data::DataColumn(L"layoutOnWrite", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnlayoutOnWrite);
        this->columnredrawOnWrite = (gcnew ::System::Data::DataColumn(L"redrawOnWrite", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnredrawOnWrite);
        this->columnfireEvent = (gcnew ::System::Data::DataColumn(L"fireEvent", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnfireEvent);
        this->columnPropertyLinkDefinition_Id = (gcnew ::System::Data::DataColumn(L"PropertyLinkDefinition_Id", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnPropertyLinkDefinition_Id);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnPropertyLinkDefinition_Id}, 
                true)));
        this->columntype->Namespace = L"";
        this->columntype->DefaultValue = (cli::safe_cast<System::String^  >(L"Generic"));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columnwidget->Namespace = L"";
        this->columnwidget->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columntargetProperty->Namespace = L"";
        this->columntargetProperty->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columninitialValue->Namespace = L"";
        this->columninitialValue->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnlayoutOnWrite->Namespace = L"";
        this->columnlayoutOnWrite->DefaultValue = static_cast<System::Boolean>(false);
        this->columnredrawOnWrite->Namespace = L"";
        this->columnredrawOnWrite->DefaultValue = static_cast<System::Boolean>(false);
        this->columnfireEvent->Namespace = L"";
        this->columnfireEvent->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnPropertyLinkDefinition_Id->AutoIncrement = true;
        this->columnPropertyLinkDefinition_Id->AllowDBNull = false;
        this->columnPropertyLinkDefinition_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  NewDataSet::PropertyLinkDefinitionDataTable::NewPropertyLinkDefinitionRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::PropertyLinkDefinitionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::PropertyLinkDefinitionDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow::typeid;
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->PropertyLinkDefinitionRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->PropertyLinkDefinitionRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->PropertyLinkDefinitionRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->PropertyLinkDefinitionRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionDataTable::RemovePropertyLinkDefinitionRow(NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::PropertyLinkDefinitionDataTable::GetTypedTableSchema(
                ::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"PropertyLinkDefinitionDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::PropertyLinkTargetDataTable::PropertyLinkTargetDataTable() {
        this->TableName = L"PropertyLinkTarget";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::PropertyLinkTargetDataTable::PropertyLinkTargetDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::PropertyLinkTargetDataTable::PropertyLinkTargetDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkTargetDataTable::widgetColumn::get() {
        return this->columnwidget;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkTargetDataTable::_propertyColumn::get() {
        return this->column_property;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyLinkTargetDataTable::PropertyLinkDefinition_IdColumn::get() {
        return this->columnPropertyLinkDefinition_Id;
    }
    
    inline ::System::Int32 NewDataSet::PropertyLinkTargetDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  NewDataSet::PropertyLinkTargetDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetDataTable::AddPropertyLinkTargetRow(NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  NewDataSet::PropertyLinkTargetDataTable::AddPropertyLinkTargetRow(
                System::String^  widget, System::String^  _property, NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  parentPropertyLinkDefinitionRowByPropertyLinkDefinition_PropertyLinkTarget) {
        NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  rowPropertyLinkTargetRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {widget, _property, 
            nullptr};
        if (parentPropertyLinkDefinitionRowByPropertyLinkDefinition_PropertyLinkTarget != nullptr) {
            columnValuesArray[2] = parentPropertyLinkDefinitionRowByPropertyLinkDefinition_PropertyLinkTarget[8];
        }
        rowPropertyLinkTargetRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowPropertyLinkTargetRow);
        return rowPropertyLinkTargetRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::PropertyLinkTargetDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyLinkTargetDataTable::Clone() {
        NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyLinkTargetDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable());
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetDataTable::InitVars() {
        this->columnwidget = __super::Columns[L"widget"];
        this->column_property = __super::Columns[L"property"];
        this->columnPropertyLinkDefinition_Id = __super::Columns[L"PropertyLinkDefinition_Id"];
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetDataTable::InitClass() {
        this->columnwidget = (gcnew ::System::Data::DataColumn(L"widget", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnwidget);
        this->column_property = (gcnew ::System::Data::DataColumn(L"property", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->column_property);
        this->columnPropertyLinkDefinition_Id = (gcnew ::System::Data::DataColumn(L"PropertyLinkDefinition_Id", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnPropertyLinkDefinition_Id);
        this->columnwidget->AllowDBNull = false;
        this->columnwidget->Namespace = L"";
        this->column_property->Namespace = L"";
        this->column_property->DefaultValue = (cli::safe_cast<System::String^  >(L""));
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  NewDataSet::PropertyLinkTargetDataTable::NewPropertyLinkTargetRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::PropertyLinkTargetDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyLinkTargetRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::PropertyLinkTargetDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::PropertyLinkTargetRow::typeid;
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->PropertyLinkTargetRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::PropertyLinkTargetRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->PropertyLinkTargetRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::PropertyLinkTargetRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->PropertyLinkTargetRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::PropertyLinkTargetRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->PropertyLinkTargetRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::PropertyLinkTargetRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetDataTable::RemovePropertyLinkTargetRow(NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::PropertyLinkTargetDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"PropertyLinkTargetDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::PropertyDataTable::PropertyDataTable() {
        this->TableName = L"Property";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::PropertyDataTable::PropertyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::PropertyDataTable::PropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDataTable::_valueColumn::get() {
        return this->column_value;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDataTable::Child_IdColumn::get() {
        return this->columnChild_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Int32 NewDataSet::PropertyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyRow^  NewDataSet::PropertyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::PropertyDataTable::AddPropertyRow(NinjaPlatformer::NewDataSet::PropertyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyRow^  NewDataSet::PropertyDataTable::AddPropertyRow(System::String^  name, 
                System::String^  _value, NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_Property, NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_Property) {
        NinjaPlatformer::NewDataSet::PropertyRow^  rowPropertyRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {name, _value, nullptr, 
            nullptr};
        if (parentChildRowByChild_Property != nullptr) {
            columnValuesArray[2] = parentChildRowByChild_Property[5];
        }
        if (parentWidgetLookRowByWidgetLook_Property != nullptr) {
            columnValuesArray[3] = parentWidgetLookRowByWidgetLook_Property[2];
        }
        rowPropertyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowPropertyRow);
        return rowPropertyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::PropertyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyDataTable::Clone() {
        NinjaPlatformer::NewDataSet::PropertyDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyDataTable());
    }
    
    inline ::System::Void NewDataSet::PropertyDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->column_value = __super::Columns[L"value"];
        this->columnChild_Id = __super::Columns[L"Child_Id"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
    }
    
    inline ::System::Void NewDataSet::PropertyDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->column_value = (gcnew ::System::Data::DataColumn(L"value", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->column_value);
        this->columnChild_Id = (gcnew ::System::Data::DataColumn(L"Child_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnChild_Id);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->column_value->AllowDBNull = false;
        this->column_value->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyRow^  NewDataSet::PropertyDataTable::NewPropertyRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::PropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::PropertyDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::PropertyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::PropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->PropertyRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::PropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->PropertyRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::PropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->PropertyRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::PropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->PropertyRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::PropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDataTable::RemovePropertyRow(NinjaPlatformer::NewDataSet::PropertyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::PropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"PropertyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::NamedAreaDataTable::NamedAreaDataTable() {
        this->TableName = L"NamedArea";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::NamedAreaDataTable::NamedAreaDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::NamedAreaDataTable::NamedAreaDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::NamedAreaDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::NamedAreaDataTable::NamedArea_IdColumn::get() {
        return this->columnNamedArea_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::NamedAreaDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Int32 NewDataSet::NamedAreaDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaRow^  NewDataSet::NamedAreaDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::NamedAreaDataTable::AddNamedAreaRow(NinjaPlatformer::NewDataSet::NamedAreaRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaRow^  NewDataSet::NamedAreaDataTable::AddNamedAreaRow(System::String^  name, 
                NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_NamedArea) {
        NinjaPlatformer::NewDataSet::NamedAreaRow^  rowNamedAreaRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {name, nullptr, nullptr};
        if (parentWidgetLookRowByWidgetLook_NamedArea != nullptr) {
            columnValuesArray[2] = parentWidgetLookRowByWidgetLook_NamedArea[2];
        }
        rowNamedAreaRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowNamedAreaRow);
        return rowNamedAreaRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::NamedAreaDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::NamedAreaDataTable::Clone() {
        NinjaPlatformer::NewDataSet::NamedAreaDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::NamedAreaDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::NamedAreaDataTable());
    }
    
    inline ::System::Void NewDataSet::NamedAreaDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnNamedArea_Id = __super::Columns[L"NamedArea_Id"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
    }
    
    inline ::System::Void NewDataSet::NamedAreaDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnNamedArea_Id = (gcnew ::System::Data::DataColumn(L"NamedArea_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnNamedArea_Id);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnNamedArea_Id}, 
                true)));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columnNamedArea_Id->AutoIncrement = true;
        this->columnNamedArea_Id->AllowDBNull = false;
        this->columnNamedArea_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaRow^  NewDataSet::NamedAreaDataTable::NewNamedAreaRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::NamedAreaDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::NamedAreaRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::NamedAreaDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::NamedAreaRow::typeid;
    }
    
    inline ::System::Void NewDataSet::NamedAreaDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->NamedAreaRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::NamedAreaRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::NamedAreaDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->NamedAreaRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::NamedAreaRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::NamedAreaDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->NamedAreaRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::NamedAreaRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::NamedAreaDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->NamedAreaRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::NamedAreaRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::NamedAreaDataTable::RemoveNamedAreaRow(NinjaPlatformer::NewDataSet::NamedAreaRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::NamedAreaDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"NamedAreaDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::AreaDataTable::AreaDataTable() {
        this->TableName = L"Area";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::AreaDataTable::AreaDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::AreaDataTable::AreaDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AreaDataTable::Area_IdColumn::get() {
        return this->columnArea_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AreaDataTable::NamedArea_IdColumn::get() {
        return this->columnNamedArea_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AreaDataTable::Child_IdColumn::get() {
        return this->columnChild_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AreaDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AreaDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AreaDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::AreaDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaRow^  NewDataSet::AreaDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::AreaDataTable::AddAreaRow(NinjaPlatformer::NewDataSet::AreaRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::AreaRow^  NewDataSet::AreaDataTable::AddAreaRow(NinjaPlatformer::NewDataSet::NamedAreaRow^  parentNamedAreaRowByNamedArea_Area, 
                NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_Area, NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_Area, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_Area, NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_Area) {
        NinjaPlatformer::NewDataSet::AreaRow^  rowAreaRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {nullptr, nullptr, nullptr, 
            nullptr, nullptr, nullptr};
        if (parentNamedAreaRowByNamedArea_Area != nullptr) {
            columnValuesArray[1] = parentNamedAreaRowByNamedArea_Area[1];
        }
        if (parentChildRowByChild_Area != nullptr) {
            columnValuesArray[2] = parentChildRowByChild_Area[5];
        }
        if (parentFrameComponentRowByFrameComponent_Area != nullptr) {
            columnValuesArray[3] = parentFrameComponentRowByFrameComponent_Area[0];
        }
        if (parentImageryComponentRowByImageryComponent_Area != nullptr) {
            columnValuesArray[4] = parentImageryComponentRowByImageryComponent_Area[0];
        }
        if (parentTextComponentRowByTextComponent_Area != nullptr) {
            columnValuesArray[5] = parentTextComponentRowByTextComponent_Area[0];
        }
        rowAreaRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowAreaRow);
        return rowAreaRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::AreaDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AreaDataTable::Clone() {
        NinjaPlatformer::NewDataSet::AreaDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AreaDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::AreaDataTable());
    }
    
    inline ::System::Void NewDataSet::AreaDataTable::InitVars() {
        this->columnArea_Id = __super::Columns[L"Area_Id"];
        this->columnNamedArea_Id = __super::Columns[L"NamedArea_Id"];
        this->columnChild_Id = __super::Columns[L"Child_Id"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::AreaDataTable::InitClass() {
        this->columnArea_Id = (gcnew ::System::Data::DataColumn(L"Area_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnArea_Id);
        this->columnNamedArea_Id = (gcnew ::System::Data::DataColumn(L"NamedArea_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnNamedArea_Id);
        this->columnChild_Id = (gcnew ::System::Data::DataColumn(L"Child_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnChild_Id);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnArea_Id}, 
                true)));
        this->columnArea_Id->AutoIncrement = true;
        this->columnArea_Id->AllowDBNull = false;
        this->columnArea_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaRow^  NewDataSet::AreaDataTable::NewAreaRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::AreaDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::AreaRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::AreaDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::AreaRow::typeid;
    }
    
    inline ::System::Void NewDataSet::AreaDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->AreaRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::AreaRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AreaDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->AreaRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::AreaRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AreaDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->AreaRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::AreaRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AreaDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->AreaRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::AreaRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AreaDataTable::RemoveAreaRow(NinjaPlatformer::NewDataSet::AreaRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::AreaDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"AreaDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::DimDataTable::DimDataTable() {
        this->TableName = L"Dim";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::DimDataTable::DimDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::DimDataTable::DimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::DimDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::DimDataTable::Dim_IdColumn::get() {
        return this->columnDim_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::DimDataTable::Area_IdColumn::get() {
        return this->columnArea_Id;
    }
    
    inline ::System::Int32 NewDataSet::DimDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::DimDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::DimDataTable::AddDimRow(NinjaPlatformer::NewDataSet::DimRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::DimDataTable::AddDimRow(System::String^  type, NinjaPlatformer::NewDataSet::AreaRow^  parentAreaRowByArea_Dim) {
        NinjaPlatformer::NewDataSet::DimRow^  rowDimRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {type, nullptr, nullptr};
        if (parentAreaRowByArea_Dim != nullptr) {
            columnValuesArray[2] = parentAreaRowByArea_Dim[0];
        }
        rowDimRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowDimRow);
        return rowDimRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::DimDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::DimDataTable::Clone() {
        NinjaPlatformer::NewDataSet::DimDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::DimDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::DimDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::DimDataTable());
    }
    
    inline ::System::Void NewDataSet::DimDataTable::InitVars() {
        this->columntype = __super::Columns[L"type"];
        this->columnDim_Id = __super::Columns[L"Dim_Id"];
        this->columnArea_Id = __super::Columns[L"Area_Id"];
    }
    
    inline ::System::Void NewDataSet::DimDataTable::InitClass() {
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnDim_Id = (gcnew ::System::Data::DataColumn(L"Dim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnDim_Id);
        this->columnArea_Id = (gcnew ::System::Data::DataColumn(L"Area_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnArea_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnDim_Id}, 
                true)));
        this->columntype->AllowDBNull = false;
        this->columntype->Namespace = L"";
        this->columnDim_Id->AutoIncrement = true;
        this->columnDim_Id->AllowDBNull = false;
        this->columnDim_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::DimDataTable::NewDimRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::DimDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::DimRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::DimDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::DimRow::typeid;
    }
    
    inline ::System::Void NewDataSet::DimDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->DimRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::DimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::DimDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->DimRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::DimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::DimDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->DimRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::DimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::DimDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->DimRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::DimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::DimDataTable::RemoveDimRow(NinjaPlatformer::NewDataSet::DimRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::DimDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"DimDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::UnifiedDimDataTable::UnifiedDimDataTable() {
        this->TableName = L"UnifiedDim";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::UnifiedDimDataTable::UnifiedDimDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::UnifiedDimDataTable::UnifiedDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::UnifiedDimDataTable::scaleColumn::get() {
        return this->columnscale;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::UnifiedDimDataTable::offsetColumn::get() {
        return this->columnoffset;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::UnifiedDimDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::UnifiedDimDataTable::OperatorDim_IdColumn::get() {
        return this->columnOperatorDim_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::UnifiedDimDataTable::Dim_IdColumn::get() {
        return this->columnDim_Id;
    }
    
    inline ::System::Int32 NewDataSet::UnifiedDimDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::UnifiedDimRow^  NewDataSet::UnifiedDimDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::UnifiedDimDataTable::AddUnifiedDimRow(NinjaPlatformer::NewDataSet::UnifiedDimRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::UnifiedDimRow^  NewDataSet::UnifiedDimDataTable::AddUnifiedDimRow(System::Decimal scale, 
                System::Int64 offset, System::String^  type, NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_UnifiedDim, 
                NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_UnifiedDim) {
        NinjaPlatformer::NewDataSet::UnifiedDimRow^  rowUnifiedDimRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {scale, offset, type, 
            nullptr, nullptr};
        if (parentOperatorDimRowByOperatorDim_UnifiedDim != nullptr) {
            columnValuesArray[3] = parentOperatorDimRowByOperatorDim_UnifiedDim[1];
        }
        if (parentDimRowByDim_UnifiedDim != nullptr) {
            columnValuesArray[4] = parentDimRowByDim_UnifiedDim[1];
        }
        rowUnifiedDimRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowUnifiedDimRow);
        return rowUnifiedDimRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::UnifiedDimDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::UnifiedDimDataTable::Clone() {
        NinjaPlatformer::NewDataSet::UnifiedDimDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::UnifiedDimDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::UnifiedDimDataTable());
    }
    
    inline ::System::Void NewDataSet::UnifiedDimDataTable::InitVars() {
        this->columnscale = __super::Columns[L"scale"];
        this->columnoffset = __super::Columns[L"offset"];
        this->columntype = __super::Columns[L"type"];
        this->columnOperatorDim_Id = __super::Columns[L"OperatorDim_Id"];
        this->columnDim_Id = __super::Columns[L"Dim_Id"];
    }
    
    inline ::System::Void NewDataSet::UnifiedDimDataTable::InitClass() {
        this->columnscale = (gcnew ::System::Data::DataColumn(L"scale", ::System::Decimal::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnscale);
        this->columnoffset = (gcnew ::System::Data::DataColumn(L"offset", ::System::Int64::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnoffset);
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnOperatorDim_Id = (gcnew ::System::Data::DataColumn(L"OperatorDim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnOperatorDim_Id);
        this->columnDim_Id = (gcnew ::System::Data::DataColumn(L"Dim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnDim_Id);
        this->columnscale->Namespace = L"";
        this->columnscale->DefaultValue = static_cast<System::Decimal>(0);
        this->columnoffset->Namespace = L"";
        this->columnoffset->DefaultValue = static_cast<System::Int64>(0);
        this->columntype->AllowDBNull = false;
        this->columntype->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::UnifiedDimRow^  NewDataSet::UnifiedDimDataTable::NewUnifiedDimRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::UnifiedDimDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::UnifiedDimRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::UnifiedDimDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::UnifiedDimRow::typeid;
    }
    
    inline ::System::Void NewDataSet::UnifiedDimDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->UnifiedDimRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::UnifiedDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::UnifiedDimDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->UnifiedDimRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::UnifiedDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::UnifiedDimDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->UnifiedDimRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::UnifiedDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::UnifiedDimDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->UnifiedDimRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::UnifiedDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::UnifiedDimDataTable::RemoveUnifiedDimRow(NinjaPlatformer::NewDataSet::UnifiedDimRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::UnifiedDimDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"UnifiedDimDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::AbsoluteDimDataTable::AbsoluteDimDataTable() {
        this->TableName = L"AbsoluteDim";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::AbsoluteDimDataTable::AbsoluteDimDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::AbsoluteDimDataTable::AbsoluteDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AbsoluteDimDataTable::_valueColumn::get() {
        return this->column_value;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AbsoluteDimDataTable::OperatorDim_IdColumn::get() {
        return this->columnOperatorDim_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AbsoluteDimDataTable::Dim_IdColumn::get() {
        return this->columnDim_Id;
    }
    
    inline ::System::Int32 NewDataSet::AbsoluteDimDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::AbsoluteDimRow^  NewDataSet::AbsoluteDimDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimDataTable::AddAbsoluteDimRow(NinjaPlatformer::NewDataSet::AbsoluteDimRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::AbsoluteDimRow^  NewDataSet::AbsoluteDimDataTable::AddAbsoluteDimRow(System::Decimal _value, 
                NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_AbsoluteDim, NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_AbsoluteDim) {
        NinjaPlatformer::NewDataSet::AbsoluteDimRow^  rowAbsoluteDimRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {_value, nullptr, nullptr};
        if (parentOperatorDimRowByOperatorDim_AbsoluteDim != nullptr) {
            columnValuesArray[1] = parentOperatorDimRowByOperatorDim_AbsoluteDim[1];
        }
        if (parentDimRowByDim_AbsoluteDim != nullptr) {
            columnValuesArray[2] = parentDimRowByDim_AbsoluteDim[1];
        }
        rowAbsoluteDimRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowAbsoluteDimRow);
        return rowAbsoluteDimRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::AbsoluteDimDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AbsoluteDimDataTable::Clone() {
        NinjaPlatformer::NewDataSet::AbsoluteDimDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AbsoluteDimDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::AbsoluteDimDataTable());
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimDataTable::InitVars() {
        this->column_value = __super::Columns[L"value"];
        this->columnOperatorDim_Id = __super::Columns[L"OperatorDim_Id"];
        this->columnDim_Id = __super::Columns[L"Dim_Id"];
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimDataTable::InitClass() {
        this->column_value = (gcnew ::System::Data::DataColumn(L"value", ::System::Decimal::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->column_value);
        this->columnOperatorDim_Id = (gcnew ::System::Data::DataColumn(L"OperatorDim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnOperatorDim_Id);
        this->columnDim_Id = (gcnew ::System::Data::DataColumn(L"Dim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnDim_Id);
        this->column_value->Namespace = L"";
        this->column_value->DefaultValue = static_cast<System::Decimal>(0);
    }
    
    inline NinjaPlatformer::NewDataSet::AbsoluteDimRow^  NewDataSet::AbsoluteDimDataTable::NewAbsoluteDimRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::AbsoluteDimDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::AbsoluteDimRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::AbsoluteDimDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::AbsoluteDimRow::typeid;
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->AbsoluteDimRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::AbsoluteDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->AbsoluteDimRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::AbsoluteDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->AbsoluteDimRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::AbsoluteDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->AbsoluteDimRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::AbsoluteDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimDataTable::RemoveAbsoluteDimRow(NinjaPlatformer::NewDataSet::AbsoluteDimRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::AbsoluteDimDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"AbsoluteDimDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ImageDimDataTable::ImageDimDataTable() {
        this->TableName = L"ImageDim";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ImageDimDataTable::ImageDimDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ImageDimDataTable::ImageDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageDimDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageDimDataTable::dimensionColumn::get() {
        return this->columndimension;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageDimDataTable::OperatorDim_IdColumn::get() {
        return this->columnOperatorDim_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageDimDataTable::Dim_IdColumn::get() {
        return this->columnDim_Id;
    }
    
    inline ::System::Int32 NewDataSet::ImageDimDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageDimRow^  NewDataSet::ImageDimDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ImageDimDataTable::AddImageDimRow(NinjaPlatformer::NewDataSet::ImageDimRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageDimRow^  NewDataSet::ImageDimDataTable::AddImageDimRow(System::String^  name, 
                System::String^  dimension, NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_ImageDim, 
                NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_ImageDim) {
        NinjaPlatformer::NewDataSet::ImageDimRow^  rowImageDimRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {name, dimension, nullptr, 
            nullptr};
        if (parentOperatorDimRowByOperatorDim_ImageDim != nullptr) {
            columnValuesArray[2] = parentOperatorDimRowByOperatorDim_ImageDim[1];
        }
        if (parentDimRowByDim_ImageDim != nullptr) {
            columnValuesArray[3] = parentDimRowByDim_ImageDim[1];
        }
        rowImageDimRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowImageDimRow);
        return rowImageDimRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ImageDimDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImageDimDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ImageDimDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImageDimDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ImageDimDataTable());
    }
    
    inline ::System::Void NewDataSet::ImageDimDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columndimension = __super::Columns[L"dimension"];
        this->columnOperatorDim_Id = __super::Columns[L"OperatorDim_Id"];
        this->columnDim_Id = __super::Columns[L"Dim_Id"];
    }
    
    inline ::System::Void NewDataSet::ImageDimDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columndimension = (gcnew ::System::Data::DataColumn(L"dimension", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columndimension);
        this->columnOperatorDim_Id = (gcnew ::System::Data::DataColumn(L"OperatorDim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnOperatorDim_Id);
        this->columnDim_Id = (gcnew ::System::Data::DataColumn(L"Dim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnDim_Id);
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columndimension->AllowDBNull = false;
        this->columndimension->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::ImageDimRow^  NewDataSet::ImageDimDataTable::NewImageDimRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ImageDimDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ImageDimRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ImageDimDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ImageDimRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ImageDimDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ImageDimRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ImageDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageDimDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ImageDimRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ImageDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageDimDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ImageDimRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ImageDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageDimDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ImageDimRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ImageDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageDimDataTable::RemoveImageDimRow(NinjaPlatformer::NewDataSet::ImageDimRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ImageDimDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ImageDimDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ImagePropertyDimDataTable::ImagePropertyDimDataTable() {
        this->TableName = L"ImagePropertyDim";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ImagePropertyDimDataTable::ImagePropertyDimDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ImagePropertyDimDataTable::ImagePropertyDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagePropertyDimDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagePropertyDimDataTable::dimensionColumn::get() {
        return this->columndimension;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagePropertyDimDataTable::OperatorDim_IdColumn::get() {
        return this->columnOperatorDim_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagePropertyDimDataTable::Dim_IdColumn::get() {
        return this->columnDim_Id;
    }
    
    inline ::System::Int32 NewDataSet::ImagePropertyDimDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  NewDataSet::ImagePropertyDimDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimDataTable::AddImagePropertyDimRow(NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  NewDataSet::ImagePropertyDimDataTable::AddImagePropertyDimRow(
                System::String^  name, System::String^  dimension, NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_ImagePropertyDim, 
                NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_ImagePropertyDim) {
        NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  rowImagePropertyDimRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {name, dimension, nullptr, 
            nullptr};
        if (parentOperatorDimRowByOperatorDim_ImagePropertyDim != nullptr) {
            columnValuesArray[2] = parentOperatorDimRowByOperatorDim_ImagePropertyDim[1];
        }
        if (parentDimRowByDim_ImagePropertyDim != nullptr) {
            columnValuesArray[3] = parentDimRowByDim_ImagePropertyDim[1];
        }
        rowImagePropertyDimRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowImagePropertyDimRow);
        return rowImagePropertyDimRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ImagePropertyDimDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImagePropertyDimDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImagePropertyDimDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable());
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columndimension = __super::Columns[L"dimension"];
        this->columnOperatorDim_Id = __super::Columns[L"OperatorDim_Id"];
        this->columnDim_Id = __super::Columns[L"Dim_Id"];
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columndimension = (gcnew ::System::Data::DataColumn(L"dimension", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columndimension);
        this->columnOperatorDim_Id = (gcnew ::System::Data::DataColumn(L"OperatorDim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnOperatorDim_Id);
        this->columnDim_Id = (gcnew ::System::Data::DataColumn(L"Dim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnDim_Id);
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columndimension->AllowDBNull = false;
        this->columndimension->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  NewDataSet::ImagePropertyDimDataTable::NewImagePropertyDimRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ImagePropertyDimDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ImagePropertyDimRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ImagePropertyDimDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ImagePropertyDimRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ImagePropertyDimRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ImagePropertyDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ImagePropertyDimRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ImagePropertyDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ImagePropertyDimRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ImagePropertyDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ImagePropertyDimRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ImagePropertyDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimDataTable::RemoveImagePropertyDimRow(NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ImagePropertyDimDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ImagePropertyDimDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::WidgetDimDataTable::WidgetDimDataTable() {
        this->TableName = L"WidgetDim";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::WidgetDimDataTable::WidgetDimDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::WidgetDimDataTable::WidgetDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::WidgetDimDataTable::widgetColumn::get() {
        return this->columnwidget;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::WidgetDimDataTable::dimensionColumn::get() {
        return this->columndimension;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::WidgetDimDataTable::OperatorDim_IdColumn::get() {
        return this->columnOperatorDim_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::WidgetDimDataTable::Dim_IdColumn::get() {
        return this->columnDim_Id;
    }
    
    inline ::System::Int32 NewDataSet::WidgetDimDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetDimRow^  NewDataSet::WidgetDimDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::WidgetDimDataTable::AddWidgetDimRow(NinjaPlatformer::NewDataSet::WidgetDimRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetDimRow^  NewDataSet::WidgetDimDataTable::AddWidgetDimRow(System::String^  widget, 
                System::String^  dimension, NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_WidgetDim, 
                NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_WidgetDim) {
        NinjaPlatformer::NewDataSet::WidgetDimRow^  rowWidgetDimRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {widget, dimension, 
            nullptr, nullptr};
        if (parentOperatorDimRowByOperatorDim_WidgetDim != nullptr) {
            columnValuesArray[2] = parentOperatorDimRowByOperatorDim_WidgetDim[1];
        }
        if (parentDimRowByDim_WidgetDim != nullptr) {
            columnValuesArray[3] = parentDimRowByDim_WidgetDim[1];
        }
        rowWidgetDimRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowWidgetDimRow);
        return rowWidgetDimRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::WidgetDimDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::WidgetDimDataTable::Clone() {
        NinjaPlatformer::NewDataSet::WidgetDimDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::WidgetDimDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::WidgetDimDataTable());
    }
    
    inline ::System::Void NewDataSet::WidgetDimDataTable::InitVars() {
        this->columnwidget = __super::Columns[L"widget"];
        this->columndimension = __super::Columns[L"dimension"];
        this->columnOperatorDim_Id = __super::Columns[L"OperatorDim_Id"];
        this->columnDim_Id = __super::Columns[L"Dim_Id"];
    }
    
    inline ::System::Void NewDataSet::WidgetDimDataTable::InitClass() {
        this->columnwidget = (gcnew ::System::Data::DataColumn(L"widget", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnwidget);
        this->columndimension = (gcnew ::System::Data::DataColumn(L"dimension", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columndimension);
        this->columnOperatorDim_Id = (gcnew ::System::Data::DataColumn(L"OperatorDim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnOperatorDim_Id);
        this->columnDim_Id = (gcnew ::System::Data::DataColumn(L"Dim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnDim_Id);
        this->columnwidget->Namespace = L"";
        this->columnwidget->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columndimension->AllowDBNull = false;
        this->columndimension->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetDimRow^  NewDataSet::WidgetDimDataTable::NewWidgetDimRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::WidgetDimDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::WidgetDimRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::WidgetDimDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::WidgetDimRow::typeid;
    }
    
    inline ::System::Void NewDataSet::WidgetDimDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->WidgetDimRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::WidgetDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::WidgetDimDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->WidgetDimRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::WidgetDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::WidgetDimDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->WidgetDimRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::WidgetDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::WidgetDimDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->WidgetDimRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::WidgetDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::WidgetDimDataTable::RemoveWidgetDimRow(NinjaPlatformer::NewDataSet::WidgetDimRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::WidgetDimDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"WidgetDimDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::FontDimDataTable::FontDimDataTable() {
        this->TableName = L"FontDim";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::FontDimDataTable::FontDimDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::FontDimDataTable::FontDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FontDimDataTable::widgetColumn::get() {
        return this->columnwidget;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FontDimDataTable::fontColumn::get() {
        return this->columnfont;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FontDimDataTable::stringColumn::get() {
        return this->columnstring;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FontDimDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FontDimDataTable::paddingColumn::get() {
        return this->columnpadding;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FontDimDataTable::OperatorDim_IdColumn::get() {
        return this->columnOperatorDim_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FontDimDataTable::Dim_IdColumn::get() {
        return this->columnDim_Id;
    }
    
    inline ::System::Int32 NewDataSet::FontDimDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::FontDimRow^  NewDataSet::FontDimDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::FontDimDataTable::AddFontDimRow(NinjaPlatformer::NewDataSet::FontDimRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::FontDimRow^  NewDataSet::FontDimDataTable::AddFontDimRow(
                System::String^  widget, 
                System::String^  font, 
                System::String^  string, 
                System::String^  type, 
                System::Decimal padding, 
                NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_FontDim, 
                NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_FontDim) {
        NinjaPlatformer::NewDataSet::FontDimRow^  rowFontDimRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(7) {widget, font, string, 
            type, padding, nullptr, nullptr};
        if (parentOperatorDimRowByOperatorDim_FontDim != nullptr) {
            columnValuesArray[5] = parentOperatorDimRowByOperatorDim_FontDim[1];
        }
        if (parentDimRowByDim_FontDim != nullptr) {
            columnValuesArray[6] = parentDimRowByDim_FontDim[1];
        }
        rowFontDimRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowFontDimRow);
        return rowFontDimRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::FontDimDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::FontDimDataTable::Clone() {
        NinjaPlatformer::NewDataSet::FontDimDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::FontDimDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::FontDimDataTable());
    }
    
    inline ::System::Void NewDataSet::FontDimDataTable::InitVars() {
        this->columnwidget = __super::Columns[L"widget"];
        this->columnfont = __super::Columns[L"font"];
        this->columnstring = __super::Columns[L"string"];
        this->columntype = __super::Columns[L"type"];
        this->columnpadding = __super::Columns[L"padding"];
        this->columnOperatorDim_Id = __super::Columns[L"OperatorDim_Id"];
        this->columnDim_Id = __super::Columns[L"Dim_Id"];
    }
    
    inline ::System::Void NewDataSet::FontDimDataTable::InitClass() {
        this->columnwidget = (gcnew ::System::Data::DataColumn(L"widget", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnwidget);
        this->columnfont = (gcnew ::System::Data::DataColumn(L"font", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnfont);
        this->columnstring = (gcnew ::System::Data::DataColumn(L"string", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnstring);
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnpadding = (gcnew ::System::Data::DataColumn(L"padding", ::System::Decimal::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnpadding);
        this->columnOperatorDim_Id = (gcnew ::System::Data::DataColumn(L"OperatorDim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnOperatorDim_Id);
        this->columnDim_Id = (gcnew ::System::Data::DataColumn(L"Dim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnDim_Id);
        this->columnwidget->Namespace = L"";
        this->columnwidget->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnfont->Namespace = L"";
        this->columnfont->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnstring->Namespace = L"";
        this->columnstring->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columntype->AllowDBNull = false;
        this->columntype->Namespace = L"";
        this->columnpadding->Namespace = L"";
        this->columnpadding->DefaultValue = static_cast<System::Decimal>(0);
    }
    
    inline NinjaPlatformer::NewDataSet::FontDimRow^  NewDataSet::FontDimDataTable::NewFontDimRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::FontDimDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::FontDimRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::FontDimDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::FontDimRow::typeid;
    }
    
    inline ::System::Void NewDataSet::FontDimDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->FontDimRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::FontDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FontDimDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->FontDimRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::FontDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FontDimDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->FontDimRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::FontDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FontDimDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->FontDimRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::FontDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FontDimDataTable::RemoveFontDimRow(NinjaPlatformer::NewDataSet::FontDimRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::FontDimDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"FontDimDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::PropertyDimDataTable::PropertyDimDataTable() {
        this->TableName = L"PropertyDim";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::PropertyDimDataTable::PropertyDimDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::PropertyDimDataTable::PropertyDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDimDataTable::widgetColumn::get() {
        return this->columnwidget;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDimDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDimDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDimDataTable::OperatorDim_IdColumn::get() {
        return this->columnOperatorDim_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::PropertyDimDataTable::Dim_IdColumn::get() {
        return this->columnDim_Id;
    }
    
    inline ::System::Int32 NewDataSet::PropertyDimDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDimRow^  NewDataSet::PropertyDimDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::PropertyDimDataTable::AddPropertyDimRow(NinjaPlatformer::NewDataSet::PropertyDimRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDimRow^  NewDataSet::PropertyDimDataTable::AddPropertyDimRow(System::String^  widget, 
                System::String^  name, System::String^  type, NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_PropertyDim, 
                NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_PropertyDim) {
        NinjaPlatformer::NewDataSet::PropertyDimRow^  rowPropertyDimRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {widget, name, type, 
            nullptr, nullptr};
        if (parentOperatorDimRowByOperatorDim_PropertyDim != nullptr) {
            columnValuesArray[3] = parentOperatorDimRowByOperatorDim_PropertyDim[1];
        }
        if (parentDimRowByDim_PropertyDim != nullptr) {
            columnValuesArray[4] = parentDimRowByDim_PropertyDim[1];
        }
        rowPropertyDimRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowPropertyDimRow);
        return rowPropertyDimRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::PropertyDimDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyDimDataTable::Clone() {
        NinjaPlatformer::NewDataSet::PropertyDimDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::PropertyDimDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyDimDataTable());
    }
    
    inline ::System::Void NewDataSet::PropertyDimDataTable::InitVars() {
        this->columnwidget = __super::Columns[L"widget"];
        this->columnname = __super::Columns[L"name"];
        this->columntype = __super::Columns[L"type"];
        this->columnOperatorDim_Id = __super::Columns[L"OperatorDim_Id"];
        this->columnDim_Id = __super::Columns[L"Dim_Id"];
    }
    
    inline ::System::Void NewDataSet::PropertyDimDataTable::InitClass() {
        this->columnwidget = (gcnew ::System::Data::DataColumn(L"widget", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnwidget);
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnOperatorDim_Id = (gcnew ::System::Data::DataColumn(L"OperatorDim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnOperatorDim_Id);
        this->columnDim_Id = (gcnew ::System::Data::DataColumn(L"Dim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnDim_Id);
        this->columnwidget->Namespace = L"";
        this->columnwidget->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columntype->Namespace = L"";
        this->columntype->DefaultValue = (cli::safe_cast<System::String^  >(L""));
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDimRow^  NewDataSet::PropertyDimDataTable::NewPropertyDimRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::PropertyDimDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::PropertyDimRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::PropertyDimDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::PropertyDimRow::typeid;
    }
    
    inline ::System::Void NewDataSet::PropertyDimDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->PropertyDimRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::PropertyDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDimDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->PropertyDimRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::PropertyDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDimDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->PropertyDimRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::PropertyDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDimDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->PropertyDimRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::PropertyDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::PropertyDimDataTable::RemovePropertyDimRow(NinjaPlatformer::NewDataSet::PropertyDimRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::PropertyDimDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"PropertyDimDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::OperatorDimDataTable::OperatorDimDataTable() {
        this->TableName = L"OperatorDim";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::OperatorDimDataTable::OperatorDimDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::OperatorDimDataTable::OperatorDimDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::OperatorDimDataTable::opColumn::get() {
        return this->columnop;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::OperatorDimDataTable::OperatorDim_IdColumn::get() {
        return this->columnOperatorDim_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::OperatorDimDataTable::OperatorDim_Id_0Column::get() {
        return this->columnOperatorDim_Id_0;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::OperatorDimDataTable::Dim_IdColumn::get() {
        return this->columnDim_Id;
    }
    
    inline ::System::Int32 NewDataSet::OperatorDimDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::OperatorDimDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::OperatorDimDataTable::AddOperatorDimRow(NinjaPlatformer::NewDataSet::OperatorDimRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::OperatorDimDataTable::AddOperatorDimRow(System::String^  op, 
                NinjaPlatformer::NewDataSet::OperatorDimRow^  parentOperatorDimRowByOperatorDim_OperatorDim, NinjaPlatformer::NewDataSet::DimRow^  parentDimRowByDim_OperatorDim) {
        NinjaPlatformer::NewDataSet::OperatorDimRow^  rowOperatorDimRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {op, nullptr, nullptr, 
            nullptr};
        if (parentOperatorDimRowByOperatorDim_OperatorDim != nullptr) {
            columnValuesArray[2] = parentOperatorDimRowByOperatorDim_OperatorDim[1];
        }
        if (parentDimRowByDim_OperatorDim != nullptr) {
            columnValuesArray[3] = parentDimRowByDim_OperatorDim[1];
        }
        rowOperatorDimRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowOperatorDimRow);
        return rowOperatorDimRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::OperatorDimDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::OperatorDimDataTable::Clone() {
        NinjaPlatformer::NewDataSet::OperatorDimDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::OperatorDimDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::OperatorDimDataTable());
    }
    
    inline ::System::Void NewDataSet::OperatorDimDataTable::InitVars() {
        this->columnop = __super::Columns[L"op"];
        this->columnOperatorDim_Id = __super::Columns[L"OperatorDim_Id"];
        this->columnOperatorDim_Id_0 = __super::Columns[L"OperatorDim_Id_0"];
        this->columnDim_Id = __super::Columns[L"Dim_Id"];
    }
    
    inline ::System::Void NewDataSet::OperatorDimDataTable::InitClass() {
        this->columnop = (gcnew ::System::Data::DataColumn(L"op", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnop);
        this->columnOperatorDim_Id = (gcnew ::System::Data::DataColumn(L"OperatorDim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnOperatorDim_Id);
        this->columnOperatorDim_Id_0 = (gcnew ::System::Data::DataColumn(L"OperatorDim_Id_0", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnOperatorDim_Id_0);
        this->columnDim_Id = (gcnew ::System::Data::DataColumn(L"Dim_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnDim_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnOperatorDim_Id}, 
                true)));
        this->columnop->AllowDBNull = false;
        this->columnop->Namespace = L"";
        this->columnOperatorDim_Id->AutoIncrement = true;
        this->columnOperatorDim_Id->AllowDBNull = false;
        this->columnOperatorDim_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::OperatorDimDataTable::NewOperatorDimRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::OperatorDimDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::OperatorDimRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::OperatorDimDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::OperatorDimRow::typeid;
    }
    
    inline ::System::Void NewDataSet::OperatorDimDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->OperatorDimRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::OperatorDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::OperatorDimDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->OperatorDimRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::OperatorDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::OperatorDimDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->OperatorDimRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::OperatorDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::OperatorDimDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->OperatorDimRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::OperatorDimRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::OperatorDimDataTable::RemoveOperatorDimRow(NinjaPlatformer::NewDataSet::OperatorDimRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::OperatorDimDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"OperatorDimDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::AreaPropertyDataTable::AreaPropertyDataTable() {
        this->TableName = L"AreaProperty";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::AreaPropertyDataTable::AreaPropertyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::AreaPropertyDataTable::AreaPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AreaPropertyDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AreaPropertyDataTable::Area_IdColumn::get() {
        return this->columnArea_Id;
    }
    
    inline ::System::Int32 NewDataSet::AreaPropertyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaPropertyRow^  NewDataSet::AreaPropertyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::AreaPropertyDataTable::AddAreaPropertyRow(NinjaPlatformer::NewDataSet::AreaPropertyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::AreaPropertyRow^  NewDataSet::AreaPropertyDataTable::AddAreaPropertyRow(System::String^  name, 
                NinjaPlatformer::NewDataSet::AreaRow^  parentAreaRowByArea_AreaProperty) {
        NinjaPlatformer::NewDataSet::AreaPropertyRow^  rowAreaPropertyRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {name, nullptr};
        if (parentAreaRowByArea_AreaProperty != nullptr) {
            columnValuesArray[1] = parentAreaRowByArea_AreaProperty[0];
        }
        rowAreaPropertyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowAreaPropertyRow);
        return rowAreaPropertyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::AreaPropertyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AreaPropertyDataTable::Clone() {
        NinjaPlatformer::NewDataSet::AreaPropertyDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AreaPropertyDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::AreaPropertyDataTable());
    }
    
    inline ::System::Void NewDataSet::AreaPropertyDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnArea_Id = __super::Columns[L"Area_Id"];
    }
    
    inline ::System::Void NewDataSet::AreaPropertyDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnArea_Id = (gcnew ::System::Data::DataColumn(L"Area_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnArea_Id);
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::AreaPropertyRow^  NewDataSet::AreaPropertyDataTable::NewAreaPropertyRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::AreaPropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::AreaPropertyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::AreaPropertyDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::AreaPropertyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::AreaPropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->AreaPropertyRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::AreaPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AreaPropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->AreaPropertyRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::AreaPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AreaPropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->AreaPropertyRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::AreaPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AreaPropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->AreaPropertyRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::AreaPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AreaPropertyDataTable::RemoveAreaPropertyRow(NinjaPlatformer::NewDataSet::AreaPropertyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::AreaPropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"AreaPropertyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::NamedAreaSourceDataTable::NamedAreaSourceDataTable() {
        this->TableName = L"NamedAreaSource";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::NamedAreaSourceDataTable::NamedAreaSourceDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::NamedAreaSourceDataTable::NamedAreaSourceDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::NamedAreaSourceDataTable::lookColumn::get() {
        return this->columnlook;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::NamedAreaSourceDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::NamedAreaSourceDataTable::Area_IdColumn::get() {
        return this->columnArea_Id;
    }
    
    inline ::System::Int32 NewDataSet::NamedAreaSourceDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  NewDataSet::NamedAreaSourceDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceDataTable::AddNamedAreaSourceRow(NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  NewDataSet::NamedAreaSourceDataTable::AddNamedAreaSourceRow(
                System::String^  look, System::String^  name, NinjaPlatformer::NewDataSet::AreaRow^  parentAreaRowByArea_NamedAreaSource) {
        NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  rowNamedAreaSourceRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {look, name, nullptr};
        if (parentAreaRowByArea_NamedAreaSource != nullptr) {
            columnValuesArray[2] = parentAreaRowByArea_NamedAreaSource[0];
        }
        rowNamedAreaSourceRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowNamedAreaSourceRow);
        return rowNamedAreaSourceRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::NamedAreaSourceDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::NamedAreaSourceDataTable::Clone() {
        NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::NamedAreaSourceDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable());
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceDataTable::InitVars() {
        this->columnlook = __super::Columns[L"look"];
        this->columnname = __super::Columns[L"name"];
        this->columnArea_Id = __super::Columns[L"Area_Id"];
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceDataTable::InitClass() {
        this->columnlook = (gcnew ::System::Data::DataColumn(L"look", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnlook);
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnArea_Id = (gcnew ::System::Data::DataColumn(L"Area_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnArea_Id);
        this->columnlook->Namespace = L"";
        this->columnlook->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  NewDataSet::NamedAreaSourceDataTable::NewNamedAreaSourceRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::NamedAreaSourceDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::NamedAreaSourceRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::NamedAreaSourceDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::NamedAreaSourceRow::typeid;
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->NamedAreaSourceRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::NamedAreaSourceRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->NamedAreaSourceRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::NamedAreaSourceRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->NamedAreaSourceRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::NamedAreaSourceRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->NamedAreaSourceRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::NamedAreaSourceRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceDataTable::RemoveNamedAreaSourceRow(NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::NamedAreaSourceDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"NamedAreaSourceDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ChildDataTable::ChildDataTable() {
        this->TableName = L"Child";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ChildDataTable::ChildDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ChildDataTable::ChildDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ChildDataTable::nameSuffixColumn::get() {
        return this->columnnameSuffix;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ChildDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ChildDataTable::rendererColumn::get() {
        return this->columnrenderer;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ChildDataTable::lookColumn::get() {
        return this->columnlook;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ChildDataTable::autoWindowColumn::get() {
        return this->columnautoWindow;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ChildDataTable::Child_IdColumn::get() {
        return this->columnChild_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ChildDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Int32 NewDataSet::ChildDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ChildRow^  NewDataSet::ChildDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ChildDataTable::AddChildRow(NinjaPlatformer::NewDataSet::ChildRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ChildRow^  NewDataSet::ChildDataTable::AddChildRow(
                System::String^  nameSuffix, 
                System::String^  type, 
                System::String^  renderer, 
                System::String^  look, 
                System::Boolean autoWindow, 
                NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_Child) {
        NinjaPlatformer::NewDataSet::ChildRow^  rowChildRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(7) {nameSuffix, type, renderer, 
            look, autoWindow, nullptr, nullptr};
        if (parentWidgetLookRowByWidgetLook_Child != nullptr) {
            columnValuesArray[6] = parentWidgetLookRowByWidgetLook_Child[2];
        }
        rowChildRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowChildRow);
        return rowChildRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ChildDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ChildDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ChildDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ChildDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ChildDataTable());
    }
    
    inline ::System::Void NewDataSet::ChildDataTable::InitVars() {
        this->columnnameSuffix = __super::Columns[L"nameSuffix"];
        this->columntype = __super::Columns[L"type"];
        this->columnrenderer = __super::Columns[L"renderer"];
        this->columnlook = __super::Columns[L"look"];
        this->columnautoWindow = __super::Columns[L"autoWindow"];
        this->columnChild_Id = __super::Columns[L"Child_Id"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
    }
    
    inline ::System::Void NewDataSet::ChildDataTable::InitClass() {
        this->columnnameSuffix = (gcnew ::System::Data::DataColumn(L"nameSuffix", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnnameSuffix);
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnrenderer = (gcnew ::System::Data::DataColumn(L"renderer", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnrenderer);
        this->columnlook = (gcnew ::System::Data::DataColumn(L"look", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnlook);
        this->columnautoWindow = (gcnew ::System::Data::DataColumn(L"autoWindow", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnautoWindow);
        this->columnChild_Id = (gcnew ::System::Data::DataColumn(L"Child_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnChild_Id);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnChild_Id}, 
                true)));
        this->columnnameSuffix->AllowDBNull = false;
        this->columnnameSuffix->Namespace = L"";
        this->columntype->AllowDBNull = false;
        this->columntype->Namespace = L"";
        this->columnrenderer->Namespace = L"";
        this->columnrenderer->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnlook->Namespace = L"";
        this->columnlook->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnautoWindow->Namespace = L"";
        this->columnautoWindow->DefaultValue = static_cast<System::Boolean>(true);
        this->columnChild_Id->AutoIncrement = true;
        this->columnChild_Id->AllowDBNull = false;
        this->columnChild_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::ChildRow^  NewDataSet::ChildDataTable::NewChildRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ChildDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ChildRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ChildDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ChildRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ChildDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ChildRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ChildRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ChildDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ChildRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ChildRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ChildDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ChildRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ChildRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ChildDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ChildRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ChildRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ChildDataTable::RemoveChildRow(NinjaPlatformer::NewDataSet::ChildRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ChildDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ChildDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::EventActionDataTable::EventActionDataTable() {
        this->TableName = L"EventAction";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::EventActionDataTable::EventActionDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::EventActionDataTable::EventActionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventActionDataTable::_eventColumn::get() {
        return this->column_event;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventActionDataTable::actionColumn::get() {
        return this->columnaction;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EventActionDataTable::Child_IdColumn::get() {
        return this->columnChild_Id;
    }
    
    inline ::System::Int32 NewDataSet::EventActionDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::EventActionRow^  NewDataSet::EventActionDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::EventActionDataTable::AddEventActionRow(NinjaPlatformer::NewDataSet::EventActionRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::EventActionRow^  NewDataSet::EventActionDataTable::AddEventActionRow(System::String^  _event, 
                System::String^  action, NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_EventAction) {
        NinjaPlatformer::NewDataSet::EventActionRow^  rowEventActionRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {_event, action, nullptr};
        if (parentChildRowByChild_EventAction != nullptr) {
            columnValuesArray[2] = parentChildRowByChild_EventAction[5];
        }
        rowEventActionRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowEventActionRow);
        return rowEventActionRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::EventActionDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EventActionDataTable::Clone() {
        NinjaPlatformer::NewDataSet::EventActionDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EventActionDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::EventActionDataTable());
    }
    
    inline ::System::Void NewDataSet::EventActionDataTable::InitVars() {
        this->column_event = __super::Columns[L"event"];
        this->columnaction = __super::Columns[L"action"];
        this->columnChild_Id = __super::Columns[L"Child_Id"];
    }
    
    inline ::System::Void NewDataSet::EventActionDataTable::InitClass() {
        this->column_event = (gcnew ::System::Data::DataColumn(L"event", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->column_event);
        this->columnaction = (gcnew ::System::Data::DataColumn(L"action", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnaction);
        this->columnChild_Id = (gcnew ::System::Data::DataColumn(L"Child_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnChild_Id);
        this->column_event->AllowDBNull = false;
        this->column_event->Namespace = L"";
        this->columnaction->AllowDBNull = false;
        this->columnaction->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::EventActionRow^  NewDataSet::EventActionDataTable::NewEventActionRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::EventActionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::EventActionRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::EventActionDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::EventActionRow::typeid;
    }
    
    inline ::System::Void NewDataSet::EventActionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->EventActionRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::EventActionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventActionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->EventActionRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::EventActionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventActionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->EventActionRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::EventActionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventActionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->EventActionRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::EventActionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EventActionDataTable::RemoveEventActionRow(NinjaPlatformer::NewDataSet::EventActionRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::EventActionDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"EventActionDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::VertAlignmentDataTable::VertAlignmentDataTable() {
        this->TableName = L"VertAlignment";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::VertAlignmentDataTable::VertAlignmentDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::VertAlignmentDataTable::VertAlignmentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertAlignmentDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertAlignmentDataTable::Child_IdColumn::get() {
        return this->columnChild_Id;
    }
    
    inline ::System::Int32 NewDataSet::VertAlignmentDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::VertAlignmentRow^  NewDataSet::VertAlignmentDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::VertAlignmentDataTable::AddVertAlignmentRow(NinjaPlatformer::NewDataSet::VertAlignmentRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::VertAlignmentRow^  NewDataSet::VertAlignmentDataTable::AddVertAlignmentRow(System::String^  type, 
                NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_VertAlignment) {
        NinjaPlatformer::NewDataSet::VertAlignmentRow^  rowVertAlignmentRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {type, nullptr};
        if (parentChildRowByChild_VertAlignment != nullptr) {
            columnValuesArray[1] = parentChildRowByChild_VertAlignment[5];
        }
        rowVertAlignmentRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowVertAlignmentRow);
        return rowVertAlignmentRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::VertAlignmentDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::VertAlignmentDataTable::Clone() {
        NinjaPlatformer::NewDataSet::VertAlignmentDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::VertAlignmentDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::VertAlignmentDataTable());
    }
    
    inline ::System::Void NewDataSet::VertAlignmentDataTable::InitVars() {
        this->columntype = __super::Columns[L"type"];
        this->columnChild_Id = __super::Columns[L"Child_Id"];
    }
    
    inline ::System::Void NewDataSet::VertAlignmentDataTable::InitClass() {
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnChild_Id = (gcnew ::System::Data::DataColumn(L"Child_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnChild_Id);
        this->columntype->AllowDBNull = false;
        this->columntype->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::VertAlignmentRow^  NewDataSet::VertAlignmentDataTable::NewVertAlignmentRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::VertAlignmentDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::VertAlignmentRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::VertAlignmentDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::VertAlignmentRow::typeid;
    }
    
    inline ::System::Void NewDataSet::VertAlignmentDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->VertAlignmentRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::VertAlignmentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertAlignmentDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->VertAlignmentRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::VertAlignmentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertAlignmentDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->VertAlignmentRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::VertAlignmentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertAlignmentDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->VertAlignmentRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::VertAlignmentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertAlignmentDataTable::RemoveVertAlignmentRow(NinjaPlatformer::NewDataSet::VertAlignmentRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::VertAlignmentDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"VertAlignmentDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::HorzAlignmentDataTable::HorzAlignmentDataTable() {
        this->TableName = L"HorzAlignment";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::HorzAlignmentDataTable::HorzAlignmentDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::HorzAlignmentDataTable::HorzAlignmentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzAlignmentDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzAlignmentDataTable::Child_IdColumn::get() {
        return this->columnChild_Id;
    }
    
    inline ::System::Int32 NewDataSet::HorzAlignmentDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::HorzAlignmentRow^  NewDataSet::HorzAlignmentDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::HorzAlignmentDataTable::AddHorzAlignmentRow(NinjaPlatformer::NewDataSet::HorzAlignmentRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::HorzAlignmentRow^  NewDataSet::HorzAlignmentDataTable::AddHorzAlignmentRow(System::String^  type, 
                NinjaPlatformer::NewDataSet::ChildRow^  parentChildRowByChild_HorzAlignment) {
        NinjaPlatformer::NewDataSet::HorzAlignmentRow^  rowHorzAlignmentRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {type, nullptr};
        if (parentChildRowByChild_HorzAlignment != nullptr) {
            columnValuesArray[1] = parentChildRowByChild_HorzAlignment[5];
        }
        rowHorzAlignmentRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowHorzAlignmentRow);
        return rowHorzAlignmentRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::HorzAlignmentDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::HorzAlignmentDataTable::Clone() {
        NinjaPlatformer::NewDataSet::HorzAlignmentDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::HorzAlignmentDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::HorzAlignmentDataTable());
    }
    
    inline ::System::Void NewDataSet::HorzAlignmentDataTable::InitVars() {
        this->columntype = __super::Columns[L"type"];
        this->columnChild_Id = __super::Columns[L"Child_Id"];
    }
    
    inline ::System::Void NewDataSet::HorzAlignmentDataTable::InitClass() {
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnChild_Id = (gcnew ::System::Data::DataColumn(L"Child_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnChild_Id);
        this->columntype->AllowDBNull = false;
        this->columntype->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::HorzAlignmentRow^  NewDataSet::HorzAlignmentDataTable::NewHorzAlignmentRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::HorzAlignmentDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::HorzAlignmentRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::HorzAlignmentDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::HorzAlignmentRow::typeid;
    }
    
    inline ::System::Void NewDataSet::HorzAlignmentDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->HorzAlignmentRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::HorzAlignmentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzAlignmentDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->HorzAlignmentRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::HorzAlignmentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzAlignmentDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->HorzAlignmentRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::HorzAlignmentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzAlignmentDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->HorzAlignmentRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::HorzAlignmentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzAlignmentDataTable::RemoveHorzAlignmentRow(NinjaPlatformer::NewDataSet::HorzAlignmentRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::HorzAlignmentDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"HorzAlignmentDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ImagerySectionDataTable::ImagerySectionDataTable() {
        this->TableName = L"ImagerySection";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ImagerySectionDataTable::ImagerySectionDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ImagerySectionDataTable::ImagerySectionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagerySectionDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagerySectionDataTable::ImagerySection_IdColumn::get() {
        return this->columnImagerySection_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagerySectionDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Int32 NewDataSet::ImagerySectionDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::ImagerySectionDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ImagerySectionDataTable::AddImagerySectionRow(NinjaPlatformer::NewDataSet::ImagerySectionRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::ImagerySectionDataTable::AddImagerySectionRow(System::String^  name, 
                NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_ImagerySection) {
        NinjaPlatformer::NewDataSet::ImagerySectionRow^  rowImagerySectionRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {name, nullptr, nullptr};
        if (parentWidgetLookRowByWidgetLook_ImagerySection != nullptr) {
            columnValuesArray[2] = parentWidgetLookRowByWidgetLook_ImagerySection[2];
        }
        rowImagerySectionRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowImagerySectionRow);
        return rowImagerySectionRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ImagerySectionDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImagerySectionDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ImagerySectionDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImagerySectionDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ImagerySectionDataTable());
    }
    
    inline ::System::Void NewDataSet::ImagerySectionDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnImagerySection_Id = __super::Columns[L"ImagerySection_Id"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
    }
    
    inline ::System::Void NewDataSet::ImagerySectionDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnImagerySection_Id = (gcnew ::System::Data::DataColumn(L"ImagerySection_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImagerySection_Id);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnImagerySection_Id}, 
                true)));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columnImagerySection_Id->AutoIncrement = true;
        this->columnImagerySection_Id->AllowDBNull = false;
        this->columnImagerySection_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::ImagerySectionDataTable::NewImagerySectionRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ImagerySectionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ImagerySectionRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ImagerySectionDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ImagerySectionRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ImagerySectionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ImagerySectionRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ImagerySectionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagerySectionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ImagerySectionRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ImagerySectionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagerySectionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ImagerySectionRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ImagerySectionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagerySectionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ImagerySectionRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ImagerySectionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagerySectionDataTable::RemoveImagerySectionRow(NinjaPlatformer::NewDataSet::ImagerySectionRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ImagerySectionDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ImagerySectionDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ColourDataTable::ColourDataTable() {
        this->TableName = L"Colour";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ColourDataTable::ColourDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ColourDataTable::ColourDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourDataTable::colourColumn::get() {
        return this->columncolour;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourDataTable::ImagerySection_IdColumn::get() {
        return this->columnImagerySection_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourDataTable::Section_IdColumn::get() {
        return this->columnSection_Id;
    }
    
    inline ::System::Int32 NewDataSet::ColourDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ColourRow^  NewDataSet::ColourDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ColourDataTable::AddColourRow(NinjaPlatformer::NewDataSet::ColourRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ColourRow^  NewDataSet::ColourDataTable::AddColourRow(
                System::String^  colour, 
                NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_Colour, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_Colour, 
                NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_Colour, 
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_Colour, 
                NinjaPlatformer::NewDataSet::SectionRow^  parentSectionRowBySection_Colour) {
        NinjaPlatformer::NewDataSet::ColourRow^  rowColourRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {colour, nullptr, nullptr, 
            nullptr, nullptr, nullptr};
        if (parentFrameComponentRowByFrameComponent_Colour != nullptr) {
            columnValuesArray[1] = parentFrameComponentRowByFrameComponent_Colour[0];
        }
        if (parentImageryComponentRowByImageryComponent_Colour != nullptr) {
            columnValuesArray[2] = parentImageryComponentRowByImageryComponent_Colour[0];
        }
        if (parentTextComponentRowByTextComponent_Colour != nullptr) {
            columnValuesArray[3] = parentTextComponentRowByTextComponent_Colour[0];
        }
        if (parentImagerySectionRowByImagerySection_Colour != nullptr) {
            columnValuesArray[4] = parentImagerySectionRowByImagerySection_Colour[1];
        }
        if (parentSectionRowBySection_Colour != nullptr) {
            columnValuesArray[5] = parentSectionRowBySection_Colour[5];
        }
        rowColourRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowColourRow);
        return rowColourRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ColourDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ColourDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ColourDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ColourDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ColourDataTable());
    }
    
    inline ::System::Void NewDataSet::ColourDataTable::InitVars() {
        this->columncolour = __super::Columns[L"colour"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
        this->columnImagerySection_Id = __super::Columns[L"ImagerySection_Id"];
        this->columnSection_Id = __super::Columns[L"Section_Id"];
    }
    
    inline ::System::Void NewDataSet::ColourDataTable::InitClass() {
        this->columncolour = (gcnew ::System::Data::DataColumn(L"colour", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncolour);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columnImagerySection_Id = (gcnew ::System::Data::DataColumn(L"ImagerySection_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImagerySection_Id);
        this->columnSection_Id = (gcnew ::System::Data::DataColumn(L"Section_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnSection_Id);
        this->columncolour->AllowDBNull = false;
        this->columncolour->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::ColourRow^  NewDataSet::ColourDataTable::NewColourRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ColourDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ColourRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ColourDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ColourRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ColourDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ColourRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ColourRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ColourRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ColourRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ColourRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ColourRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ColourRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ColourRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourDataTable::RemoveColourRow(NinjaPlatformer::NewDataSet::ColourRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ColourDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ColourDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ColoursDataTable::ColoursDataTable() {
        this->TableName = L"Colours";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ColoursDataTable::ColoursDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ColoursDataTable::ColoursDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColoursDataTable::topLeftColumn::get() {
        return this->columntopLeft;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColoursDataTable::topRightColumn::get() {
        return this->columntopRight;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColoursDataTable::bottomLeftColumn::get() {
        return this->columnbottomLeft;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColoursDataTable::bottomRightColumn::get() {
        return this->columnbottomRight;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColoursDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColoursDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColoursDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColoursDataTable::ImagerySection_IdColumn::get() {
        return this->columnImagerySection_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColoursDataTable::Section_IdColumn::get() {
        return this->columnSection_Id;
    }
    
    inline ::System::Int32 NewDataSet::ColoursDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ColoursRow^  NewDataSet::ColoursDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ColoursDataTable::AddColoursRow(NinjaPlatformer::NewDataSet::ColoursRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ColoursRow^  NewDataSet::ColoursDataTable::AddColoursRow(
                System::String^  topLeft, 
                System::String^  topRight, 
                System::String^  bottomLeft, 
                System::String^  bottomRight, 
                NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_Colours, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_Colours, 
                NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_Colours, 
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_Colours, 
                NinjaPlatformer::NewDataSet::SectionRow^  parentSectionRowBySection_Colours) {
        NinjaPlatformer::NewDataSet::ColoursRow^  rowColoursRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(9) {topLeft, topRight, 
            bottomLeft, bottomRight, nullptr, nullptr, nullptr, nullptr, nullptr};
        if (parentFrameComponentRowByFrameComponent_Colours != nullptr) {
            columnValuesArray[4] = parentFrameComponentRowByFrameComponent_Colours[0];
        }
        if (parentImageryComponentRowByImageryComponent_Colours != nullptr) {
            columnValuesArray[5] = parentImageryComponentRowByImageryComponent_Colours[0];
        }
        if (parentTextComponentRowByTextComponent_Colours != nullptr) {
            columnValuesArray[6] = parentTextComponentRowByTextComponent_Colours[0];
        }
        if (parentImagerySectionRowByImagerySection_Colours != nullptr) {
            columnValuesArray[7] = parentImagerySectionRowByImagerySection_Colours[1];
        }
        if (parentSectionRowBySection_Colours != nullptr) {
            columnValuesArray[8] = parentSectionRowBySection_Colours[5];
        }
        rowColoursRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowColoursRow);
        return rowColoursRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ColoursDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ColoursDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ColoursDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ColoursDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ColoursDataTable());
    }
    
    inline ::System::Void NewDataSet::ColoursDataTable::InitVars() {
        this->columntopLeft = __super::Columns[L"topLeft"];
        this->columntopRight = __super::Columns[L"topRight"];
        this->columnbottomLeft = __super::Columns[L"bottomLeft"];
        this->columnbottomRight = __super::Columns[L"bottomRight"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
        this->columnImagerySection_Id = __super::Columns[L"ImagerySection_Id"];
        this->columnSection_Id = __super::Columns[L"Section_Id"];
    }
    
    inline ::System::Void NewDataSet::ColoursDataTable::InitClass() {
        this->columntopLeft = (gcnew ::System::Data::DataColumn(L"topLeft", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntopLeft);
        this->columntopRight = (gcnew ::System::Data::DataColumn(L"topRight", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntopRight);
        this->columnbottomLeft = (gcnew ::System::Data::DataColumn(L"bottomLeft", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnbottomLeft);
        this->columnbottomRight = (gcnew ::System::Data::DataColumn(L"bottomRight", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnbottomRight);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columnImagerySection_Id = (gcnew ::System::Data::DataColumn(L"ImagerySection_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImagerySection_Id);
        this->columnSection_Id = (gcnew ::System::Data::DataColumn(L"Section_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnSection_Id);
        this->columntopLeft->AllowDBNull = false;
        this->columntopLeft->Namespace = L"";
        this->columntopRight->AllowDBNull = false;
        this->columntopRight->Namespace = L"";
        this->columnbottomLeft->AllowDBNull = false;
        this->columnbottomLeft->Namespace = L"";
        this->columnbottomRight->AllowDBNull = false;
        this->columnbottomRight->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::ColoursRow^  NewDataSet::ColoursDataTable::NewColoursRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ColoursDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ColoursRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ColoursDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ColoursRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ColoursDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ColoursRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ColoursRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColoursDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ColoursRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ColoursRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColoursDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ColoursRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ColoursRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColoursDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ColoursRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ColoursRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColoursDataTable::RemoveColoursRow(NinjaPlatformer::NewDataSet::ColoursRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ColoursDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ColoursDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ColourPropertyDataTable::ColourPropertyDataTable() {
        this->TableName = L"ColourProperty";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ColourPropertyDataTable::ColourPropertyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ColourPropertyDataTable::ColourPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourPropertyDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourPropertyDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourPropertyDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourPropertyDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourPropertyDataTable::ImagerySection_IdColumn::get() {
        return this->columnImagerySection_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourPropertyDataTable::Section_IdColumn::get() {
        return this->columnSection_Id;
    }
    
    inline ::System::Int32 NewDataSet::ColourPropertyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ColourPropertyRow^  NewDataSet::ColourPropertyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ColourPropertyDataTable::AddColourPropertyRow(NinjaPlatformer::NewDataSet::ColourPropertyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ColourPropertyRow^  NewDataSet::ColourPropertyDataTable::AddColourPropertyRow(
                System::String^  name, 
                NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_ColourProperty, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_ColourProperty, 
                NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_ColourProperty, 
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_ColourProperty, 
                NinjaPlatformer::NewDataSet::SectionRow^  parentSectionRowBySection_ColourProperty) {
        NinjaPlatformer::NewDataSet::ColourPropertyRow^  rowColourPropertyRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {name, nullptr, nullptr, 
            nullptr, nullptr, nullptr};
        if (parentFrameComponentRowByFrameComponent_ColourProperty != nullptr) {
            columnValuesArray[1] = parentFrameComponentRowByFrameComponent_ColourProperty[0];
        }
        if (parentImageryComponentRowByImageryComponent_ColourProperty != nullptr) {
            columnValuesArray[2] = parentImageryComponentRowByImageryComponent_ColourProperty[0];
        }
        if (parentTextComponentRowByTextComponent_ColourProperty != nullptr) {
            columnValuesArray[3] = parentTextComponentRowByTextComponent_ColourProperty[0];
        }
        if (parentImagerySectionRowByImagerySection_ColourProperty != nullptr) {
            columnValuesArray[4] = parentImagerySectionRowByImagerySection_ColourProperty[1];
        }
        if (parentSectionRowBySection_ColourProperty != nullptr) {
            columnValuesArray[5] = parentSectionRowBySection_ColourProperty[5];
        }
        rowColourPropertyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowColourPropertyRow);
        return rowColourPropertyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ColourPropertyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ColourPropertyDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ColourPropertyDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ColourPropertyDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ColourPropertyDataTable());
    }
    
    inline ::System::Void NewDataSet::ColourPropertyDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
        this->columnImagerySection_Id = __super::Columns[L"ImagerySection_Id"];
        this->columnSection_Id = __super::Columns[L"Section_Id"];
    }
    
    inline ::System::Void NewDataSet::ColourPropertyDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columnImagerySection_Id = (gcnew ::System::Data::DataColumn(L"ImagerySection_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImagerySection_Id);
        this->columnSection_Id = (gcnew ::System::Data::DataColumn(L"Section_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnSection_Id);
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::ColourPropertyRow^  NewDataSet::ColourPropertyDataTable::NewColourPropertyRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ColourPropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ColourPropertyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ColourPropertyDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ColourPropertyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ColourPropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ColourPropertyRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ColourPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourPropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ColourPropertyRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ColourPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourPropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ColourPropertyRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ColourPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourPropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ColourPropertyRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ColourPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourPropertyDataTable::RemoveColourPropertyRow(NinjaPlatformer::NewDataSet::ColourPropertyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ColourPropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ColourPropertyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ColourRectPropertyDataTable::ColourRectPropertyDataTable() {
        this->TableName = L"ColourRectProperty";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ColourRectPropertyDataTable::ColourRectPropertyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ColourRectPropertyDataTable::ColourRectPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourRectPropertyDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourRectPropertyDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourRectPropertyDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourRectPropertyDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourRectPropertyDataTable::ImagerySection_IdColumn::get() {
        return this->columnImagerySection_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ColourRectPropertyDataTable::Section_IdColumn::get() {
        return this->columnSection_Id;
    }
    
    inline ::System::Int32 NewDataSet::ColourRectPropertyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  NewDataSet::ColourRectPropertyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyDataTable::AddColourRectPropertyRow(NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  NewDataSet::ColourRectPropertyDataTable::AddColourRectPropertyRow(
                System::String^  name, 
                NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_ColourRectProperty, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_ColourRectProperty, 
                NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_ColourRectProperty, 
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_ColourRectProperty, 
                NinjaPlatformer::NewDataSet::SectionRow^  parentSectionRowBySection_ColourRectProperty) {
        NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  rowColourRectPropertyRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {name, nullptr, nullptr, 
            nullptr, nullptr, nullptr};
        if (parentFrameComponentRowByFrameComponent_ColourRectProperty != nullptr) {
            columnValuesArray[1] = parentFrameComponentRowByFrameComponent_ColourRectProperty[0];
        }
        if (parentImageryComponentRowByImageryComponent_ColourRectProperty != nullptr) {
            columnValuesArray[2] = parentImageryComponentRowByImageryComponent_ColourRectProperty[0];
        }
        if (parentTextComponentRowByTextComponent_ColourRectProperty != nullptr) {
            columnValuesArray[3] = parentTextComponentRowByTextComponent_ColourRectProperty[0];
        }
        if (parentImagerySectionRowByImagerySection_ColourRectProperty != nullptr) {
            columnValuesArray[4] = parentImagerySectionRowByImagerySection_ColourRectProperty[1];
        }
        if (parentSectionRowBySection_ColourRectProperty != nullptr) {
            columnValuesArray[5] = parentSectionRowBySection_ColourRectProperty[5];
        }
        rowColourRectPropertyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowColourRectPropertyRow);
        return rowColourRectPropertyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ColourRectPropertyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ColourRectPropertyDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ColourRectPropertyDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable());
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
        this->columnImagerySection_Id = __super::Columns[L"ImagerySection_Id"];
        this->columnSection_Id = __super::Columns[L"Section_Id"];
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columnImagerySection_Id = (gcnew ::System::Data::DataColumn(L"ImagerySection_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImagerySection_Id);
        this->columnSection_Id = (gcnew ::System::Data::DataColumn(L"Section_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnSection_Id);
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  NewDataSet::ColourRectPropertyDataTable::NewColourRectPropertyRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ColourRectPropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ColourRectPropertyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ColourRectPropertyDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ColourRectPropertyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ColourRectPropertyRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ColourRectPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ColourRectPropertyRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ColourRectPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ColourRectPropertyRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ColourRectPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ColourRectPropertyRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ColourRectPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyDataTable::RemoveColourRectPropertyRow(NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ColourRectPropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ColourRectPropertyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::FrameComponentDataTable::FrameComponentDataTable() {
        this->TableName = L"FrameComponent";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::FrameComponentDataTable::FrameComponentDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::FrameComponentDataTable::FrameComponentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FrameComponentDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FrameComponentDataTable::ImagerySection_IdColumn::get() {
        return this->columnImagerySection_Id;
    }
    
    inline ::System::Int32 NewDataSet::FrameComponentDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::FrameComponentDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::FrameComponentDataTable::AddFrameComponentRow(NinjaPlatformer::NewDataSet::FrameComponentRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::FrameComponentDataTable::AddFrameComponentRow(NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_FrameComponent) {
        NinjaPlatformer::NewDataSet::FrameComponentRow^  rowFrameComponentRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
        if (parentImagerySectionRowByImagerySection_FrameComponent != nullptr) {
            columnValuesArray[1] = parentImagerySectionRowByImagerySection_FrameComponent[1];
        }
        rowFrameComponentRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowFrameComponentRow);
        return rowFrameComponentRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::FrameComponentDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::FrameComponentDataTable::Clone() {
        NinjaPlatformer::NewDataSet::FrameComponentDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::FrameComponentDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::FrameComponentDataTable());
    }
    
    inline ::System::Void NewDataSet::FrameComponentDataTable::InitVars() {
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImagerySection_Id = __super::Columns[L"ImagerySection_Id"];
    }
    
    inline ::System::Void NewDataSet::FrameComponentDataTable::InitClass() {
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImagerySection_Id = (gcnew ::System::Data::DataColumn(L"ImagerySection_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImagerySection_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnFrameComponent_Id}, 
                true)));
        this->columnFrameComponent_Id->AutoIncrement = true;
        this->columnFrameComponent_Id->AllowDBNull = false;
        this->columnFrameComponent_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::FrameComponentDataTable::NewFrameComponentRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::FrameComponentDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::FrameComponentRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::FrameComponentDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::FrameComponentRow::typeid;
    }
    
    inline ::System::Void NewDataSet::FrameComponentDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->FrameComponentRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::FrameComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FrameComponentDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->FrameComponentRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::FrameComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FrameComponentDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->FrameComponentRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::FrameComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FrameComponentDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->FrameComponentRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::FrameComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FrameComponentDataTable::RemoveFrameComponentRow(NinjaPlatformer::NewDataSet::FrameComponentRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::FrameComponentDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"FrameComponentDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ImageDataTable::ImageDataTable() {
        this->TableName = L"Image";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ImageDataTable::ImageDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ImageDataTable::ImageDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageDataTable::componentColumn::get() {
        return this->columncomponent;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::ImageDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageRow^  NewDataSet::ImageDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ImageDataTable::AddImageRow(NinjaPlatformer::NewDataSet::ImageRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageRow^  NewDataSet::ImageDataTable::AddImageRow(System::String^  component, System::String^  name, 
                NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_Image, NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_Image) {
        NinjaPlatformer::NewDataSet::ImageRow^  rowImageRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {component, name, nullptr, 
            nullptr};
        if (parentFrameComponentRowByFrameComponent_Image != nullptr) {
            columnValuesArray[2] = parentFrameComponentRowByFrameComponent_Image[0];
        }
        if (parentImageryComponentRowByImageryComponent_Image != nullptr) {
            columnValuesArray[3] = parentImageryComponentRowByImageryComponent_Image[0];
        }
        rowImageRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowImageRow);
        return rowImageRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ImageDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImageDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ImageDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImageDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ImageDataTable());
    }
    
    inline ::System::Void NewDataSet::ImageDataTable::InitVars() {
        this->columncomponent = __super::Columns[L"component"];
        this->columnname = __super::Columns[L"name"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::ImageDataTable::InitClass() {
        this->columncomponent = (gcnew ::System::Data::DataColumn(L"component", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncomponent);
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columncomponent->AllowDBNull = false;
        this->columncomponent->Namespace = L"";
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::ImageRow^  NewDataSet::ImageDataTable::NewImageRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ImageDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ImageRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ImageDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ImageRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ImageDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ImageRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ImageRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ImageRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ImageRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ImageRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ImageRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ImageRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ImageRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageDataTable::RemoveImageRow(NinjaPlatformer::NewDataSet::ImageRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ImageDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ImageDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ImagePropertyDataTable::ImagePropertyDataTable() {
        this->TableName = L"ImageProperty";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ImagePropertyDataTable::ImagePropertyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ImagePropertyDataTable::ImagePropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagePropertyDataTable::componentColumn::get() {
        return this->columncomponent;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagePropertyDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagePropertyDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImagePropertyDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::ImagePropertyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyRow^  NewDataSet::ImagePropertyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDataTable::AddImagePropertyRow(NinjaPlatformer::NewDataSet::ImagePropertyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyRow^  NewDataSet::ImagePropertyDataTable::AddImagePropertyRow(System::String^  component, 
                System::String^  name, NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_ImageProperty, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_ImageProperty) {
        NinjaPlatformer::NewDataSet::ImagePropertyRow^  rowImagePropertyRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {component, name, nullptr, 
            nullptr};
        if (parentFrameComponentRowByFrameComponent_ImageProperty != nullptr) {
            columnValuesArray[2] = parentFrameComponentRowByFrameComponent_ImageProperty[0];
        }
        if (parentImageryComponentRowByImageryComponent_ImageProperty != nullptr) {
            columnValuesArray[3] = parentImageryComponentRowByImageryComponent_ImageProperty[0];
        }
        rowImagePropertyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowImagePropertyRow);
        return rowImagePropertyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ImagePropertyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImagePropertyDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ImagePropertyDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImagePropertyDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ImagePropertyDataTable());
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDataTable::InitVars() {
        this->columncomponent = __super::Columns[L"component"];
        this->columnname = __super::Columns[L"name"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDataTable::InitClass() {
        this->columncomponent = (gcnew ::System::Data::DataColumn(L"component", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncomponent);
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columncomponent->AllowDBNull = false;
        this->columncomponent->Namespace = L"";
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyRow^  NewDataSet::ImagePropertyDataTable::NewImagePropertyRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ImagePropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ImagePropertyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ImagePropertyDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ImagePropertyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ImagePropertyRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ImagePropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ImagePropertyRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ImagePropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ImagePropertyRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ImagePropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ImagePropertyRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ImagePropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDataTable::RemoveImagePropertyRow(NinjaPlatformer::NewDataSet::ImagePropertyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ImagePropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ImagePropertyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::VertFormatDataTable::VertFormatDataTable() {
        this->TableName = L"VertFormat";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::VertFormatDataTable::VertFormatDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::VertFormatDataTable::VertFormatDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatDataTable::componentColumn::get() {
        return this->columncomponent;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::VertFormatDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatRow^  NewDataSet::VertFormatDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::VertFormatDataTable::AddVertFormatRow(NinjaPlatformer::NewDataSet::VertFormatRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatRow^  NewDataSet::VertFormatDataTable::AddVertFormatRow(System::String^  component, 
                System::String^  type, NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_VertFormat, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_VertFormat, NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_VertFormat) {
        NinjaPlatformer::NewDataSet::VertFormatRow^  rowVertFormatRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {component, type, nullptr, 
            nullptr, nullptr};
        if (parentFrameComponentRowByFrameComponent_VertFormat != nullptr) {
            columnValuesArray[2] = parentFrameComponentRowByFrameComponent_VertFormat[0];
        }
        if (parentImageryComponentRowByImageryComponent_VertFormat != nullptr) {
            columnValuesArray[3] = parentImageryComponentRowByImageryComponent_VertFormat[0];
        }
        if (parentTextComponentRowByTextComponent_VertFormat != nullptr) {
            columnValuesArray[4] = parentTextComponentRowByTextComponent_VertFormat[0];
        }
        rowVertFormatRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowVertFormatRow);
        return rowVertFormatRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::VertFormatDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::VertFormatDataTable::Clone() {
        NinjaPlatformer::NewDataSet::VertFormatDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::VertFormatDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::VertFormatDataTable());
    }
    
    inline ::System::Void NewDataSet::VertFormatDataTable::InitVars() {
        this->columncomponent = __super::Columns[L"component"];
        this->columntype = __super::Columns[L"type"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::VertFormatDataTable::InitClass() {
        this->columncomponent = (gcnew ::System::Data::DataColumn(L"component", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncomponent);
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columncomponent->Namespace = L"";
        this->columncomponent->DefaultValue = (cli::safe_cast<System::String^  >(L"Background"));
        this->columntype->Namespace = L"";
        this->columntype->DefaultValue = (cli::safe_cast<System::String^  >(L"Stretched"));
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatRow^  NewDataSet::VertFormatDataTable::NewVertFormatRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::VertFormatDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::VertFormatRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::VertFormatDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::VertFormatRow::typeid;
    }
    
    inline ::System::Void NewDataSet::VertFormatDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->VertFormatRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::VertFormatRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertFormatDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->VertFormatRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::VertFormatRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertFormatDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->VertFormatRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::VertFormatRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertFormatDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->VertFormatRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::VertFormatRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertFormatDataTable::RemoveVertFormatRow(NinjaPlatformer::NewDataSet::VertFormatRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::VertFormatDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"VertFormatDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::VertFormatPropertyDataTable::VertFormatPropertyDataTable() {
        this->TableName = L"VertFormatProperty";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::VertFormatPropertyDataTable::VertFormatPropertyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::VertFormatPropertyDataTable::VertFormatPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatPropertyDataTable::componentColumn::get() {
        return this->columncomponent;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatPropertyDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatPropertyDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatPropertyDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::VertFormatPropertyDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::VertFormatPropertyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  NewDataSet::VertFormatPropertyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyDataTable::AddVertFormatPropertyRow(NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  NewDataSet::VertFormatPropertyDataTable::AddVertFormatPropertyRow(
                System::String^  component, System::String^  name, NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_VertFormatProperty, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_VertFormatProperty, NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_VertFormatProperty) {
        NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  rowVertFormatPropertyRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {component, name, nullptr, 
            nullptr, nullptr};
        if (parentFrameComponentRowByFrameComponent_VertFormatProperty != nullptr) {
            columnValuesArray[2] = parentFrameComponentRowByFrameComponent_VertFormatProperty[0];
        }
        if (parentImageryComponentRowByImageryComponent_VertFormatProperty != nullptr) {
            columnValuesArray[3] = parentImageryComponentRowByImageryComponent_VertFormatProperty[0];
        }
        if (parentTextComponentRowByTextComponent_VertFormatProperty != nullptr) {
            columnValuesArray[4] = parentTextComponentRowByTextComponent_VertFormatProperty[0];
        }
        rowVertFormatPropertyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowVertFormatPropertyRow);
        return rowVertFormatPropertyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::VertFormatPropertyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::VertFormatPropertyDataTable::Clone() {
        NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::VertFormatPropertyDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable());
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyDataTable::InitVars() {
        this->columncomponent = __super::Columns[L"component"];
        this->columnname = __super::Columns[L"name"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyDataTable::InitClass() {
        this->columncomponent = (gcnew ::System::Data::DataColumn(L"component", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncomponent);
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columncomponent->Namespace = L"";
        this->columncomponent->DefaultValue = (cli::safe_cast<System::String^  >(L"Background"));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  NewDataSet::VertFormatPropertyDataTable::NewVertFormatPropertyRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::VertFormatPropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::VertFormatPropertyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::VertFormatPropertyDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::VertFormatPropertyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->VertFormatPropertyRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::VertFormatPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->VertFormatPropertyRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::VertFormatPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->VertFormatPropertyRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::VertFormatPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->VertFormatPropertyRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::VertFormatPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyDataTable::RemoveVertFormatPropertyRow(NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::VertFormatPropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"VertFormatPropertyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::HorzFormatDataTable::HorzFormatDataTable() {
        this->TableName = L"HorzFormat";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::HorzFormatDataTable::HorzFormatDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::HorzFormatDataTable::HorzFormatDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatDataTable::componentColumn::get() {
        return this->columncomponent;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::HorzFormatDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatRow^  NewDataSet::HorzFormatDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::HorzFormatDataTable::AddHorzFormatRow(NinjaPlatformer::NewDataSet::HorzFormatRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatRow^  NewDataSet::HorzFormatDataTable::AddHorzFormatRow(System::String^  component, 
                System::String^  type, NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_HorzFormat, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_HorzFormat, NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_HorzFormat) {
        NinjaPlatformer::NewDataSet::HorzFormatRow^  rowHorzFormatRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {component, type, nullptr, 
            nullptr, nullptr};
        if (parentFrameComponentRowByFrameComponent_HorzFormat != nullptr) {
            columnValuesArray[2] = parentFrameComponentRowByFrameComponent_HorzFormat[0];
        }
        if (parentImageryComponentRowByImageryComponent_HorzFormat != nullptr) {
            columnValuesArray[3] = parentImageryComponentRowByImageryComponent_HorzFormat[0];
        }
        if (parentTextComponentRowByTextComponent_HorzFormat != nullptr) {
            columnValuesArray[4] = parentTextComponentRowByTextComponent_HorzFormat[0];
        }
        rowHorzFormatRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowHorzFormatRow);
        return rowHorzFormatRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::HorzFormatDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::HorzFormatDataTable::Clone() {
        NinjaPlatformer::NewDataSet::HorzFormatDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::HorzFormatDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::HorzFormatDataTable());
    }
    
    inline ::System::Void NewDataSet::HorzFormatDataTable::InitVars() {
        this->columncomponent = __super::Columns[L"component"];
        this->columntype = __super::Columns[L"type"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::HorzFormatDataTable::InitClass() {
        this->columncomponent = (gcnew ::System::Data::DataColumn(L"component", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncomponent);
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columncomponent->Namespace = L"";
        this->columncomponent->DefaultValue = (cli::safe_cast<System::String^  >(L"Background"));
        this->columntype->Namespace = L"";
        this->columntype->DefaultValue = (cli::safe_cast<System::String^  >(L"Stretched"));
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatRow^  NewDataSet::HorzFormatDataTable::NewHorzFormatRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::HorzFormatDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::HorzFormatRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::HorzFormatDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::HorzFormatRow::typeid;
    }
    
    inline ::System::Void NewDataSet::HorzFormatDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->HorzFormatRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::HorzFormatRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzFormatDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->HorzFormatRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::HorzFormatRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzFormatDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->HorzFormatRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::HorzFormatRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzFormatDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->HorzFormatRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::HorzFormatRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzFormatDataTable::RemoveHorzFormatRow(NinjaPlatformer::NewDataSet::HorzFormatRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::HorzFormatDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"HorzFormatDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::HorzFormatPropertyDataTable::HorzFormatPropertyDataTable() {
        this->TableName = L"HorzFormatProperty";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::HorzFormatPropertyDataTable::HorzFormatPropertyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::HorzFormatPropertyDataTable::HorzFormatPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatPropertyDataTable::componentColumn::get() {
        return this->columncomponent;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatPropertyDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatPropertyDataTable::FrameComponent_IdColumn::get() {
        return this->columnFrameComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatPropertyDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::HorzFormatPropertyDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::HorzFormatPropertyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  NewDataSet::HorzFormatPropertyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyDataTable::AddHorzFormatPropertyRow(NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  NewDataSet::HorzFormatPropertyDataTable::AddHorzFormatPropertyRow(
                System::String^  component, System::String^  name, NinjaPlatformer::NewDataSet::FrameComponentRow^  parentFrameComponentRowByFrameComponent_HorzFormatProperty, 
                NinjaPlatformer::NewDataSet::ImageryComponentRow^  parentImageryComponentRowByImageryComponent_HorzFormatProperty, NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_HorzFormatProperty) {
        NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  rowHorzFormatPropertyRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {component, name, nullptr, 
            nullptr, nullptr};
        if (parentFrameComponentRowByFrameComponent_HorzFormatProperty != nullptr) {
            columnValuesArray[2] = parentFrameComponentRowByFrameComponent_HorzFormatProperty[0];
        }
        if (parentImageryComponentRowByImageryComponent_HorzFormatProperty != nullptr) {
            columnValuesArray[3] = parentImageryComponentRowByImageryComponent_HorzFormatProperty[0];
        }
        if (parentTextComponentRowByTextComponent_HorzFormatProperty != nullptr) {
            columnValuesArray[4] = parentTextComponentRowByTextComponent_HorzFormatProperty[0];
        }
        rowHorzFormatPropertyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowHorzFormatPropertyRow);
        return rowHorzFormatPropertyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::HorzFormatPropertyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::HorzFormatPropertyDataTable::Clone() {
        NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::HorzFormatPropertyDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable());
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyDataTable::InitVars() {
        this->columncomponent = __super::Columns[L"component"];
        this->columnname = __super::Columns[L"name"];
        this->columnFrameComponent_Id = __super::Columns[L"FrameComponent_Id"];
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyDataTable::InitClass() {
        this->columncomponent = (gcnew ::System::Data::DataColumn(L"component", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncomponent);
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnFrameComponent_Id = (gcnew ::System::Data::DataColumn(L"FrameComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnFrameComponent_Id);
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columncomponent->Namespace = L"";
        this->columncomponent->DefaultValue = (cli::safe_cast<System::String^  >(L"Background"));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  NewDataSet::HorzFormatPropertyDataTable::NewHorzFormatPropertyRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::HorzFormatPropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::HorzFormatPropertyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::HorzFormatPropertyDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::HorzFormatPropertyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->HorzFormatPropertyRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::HorzFormatPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->HorzFormatPropertyRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::HorzFormatPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->HorzFormatPropertyRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::HorzFormatPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->HorzFormatPropertyRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::HorzFormatPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyDataTable::RemoveHorzFormatPropertyRow(NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::HorzFormatPropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"HorzFormatPropertyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ImageryComponentDataTable::ImageryComponentDataTable() {
        this->TableName = L"ImageryComponent";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ImageryComponentDataTable::ImageryComponentDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ImageryComponentDataTable::ImageryComponentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageryComponentDataTable::ImageryComponent_IdColumn::get() {
        return this->columnImageryComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ImageryComponentDataTable::ImagerySection_IdColumn::get() {
        return this->columnImagerySection_Id;
    }
    
    inline ::System::Int32 NewDataSet::ImageryComponentDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ImageryComponentDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ImageryComponentDataTable::AddImageryComponentRow(NinjaPlatformer::NewDataSet::ImageryComponentRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ImageryComponentDataTable::AddImageryComponentRow(
                NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_ImageryComponent) {
        NinjaPlatformer::NewDataSet::ImageryComponentRow^  rowImageryComponentRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
        if (parentImagerySectionRowByImagerySection_ImageryComponent != nullptr) {
            columnValuesArray[1] = parentImagerySectionRowByImagerySection_ImageryComponent[1];
        }
        rowImageryComponentRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowImageryComponentRow);
        return rowImageryComponentRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ImageryComponentDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImageryComponentDataTable::Clone() {
        NinjaPlatformer::NewDataSet::ImageryComponentDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ImageryComponentDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::ImageryComponentDataTable());
    }
    
    inline ::System::Void NewDataSet::ImageryComponentDataTable::InitVars() {
        this->columnImageryComponent_Id = __super::Columns[L"ImageryComponent_Id"];
        this->columnImagerySection_Id = __super::Columns[L"ImagerySection_Id"];
    }
    
    inline ::System::Void NewDataSet::ImageryComponentDataTable::InitClass() {
        this->columnImageryComponent_Id = (gcnew ::System::Data::DataColumn(L"ImageryComponent_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImageryComponent_Id);
        this->columnImagerySection_Id = (gcnew ::System::Data::DataColumn(L"ImagerySection_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImagerySection_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnImageryComponent_Id}, 
                true)));
        this->columnImageryComponent_Id->AutoIncrement = true;
        this->columnImageryComponent_Id->AllowDBNull = false;
        this->columnImageryComponent_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ImageryComponentDataTable::NewImageryComponentRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ImageryComponentDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::ImageryComponentRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ImageryComponentDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::ImageryComponentRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ImageryComponentDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ImageryComponentRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::ImageryComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageryComponentDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ImageryComponentRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::ImageryComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageryComponentDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ImageryComponentRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::ImageryComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageryComponentDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ImageryComponentRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::ImageryComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ImageryComponentDataTable::RemoveImageryComponentRow(NinjaPlatformer::NewDataSet::ImageryComponentRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ImageryComponentDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ImageryComponentDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::TextComponentDataTable::TextComponentDataTable() {
        this->TableName = L"TextComponent";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::TextComponentDataTable::TextComponentDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::TextComponentDataTable::TextComponentDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::TextComponentDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::TextComponentDataTable::ImagerySection_IdColumn::get() {
        return this->columnImagerySection_Id;
    }
    
    inline ::System::Int32 NewDataSet::TextComponentDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::TextComponentDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::TextComponentDataTable::AddTextComponentRow(NinjaPlatformer::NewDataSet::TextComponentRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::TextComponentDataTable::AddTextComponentRow(NinjaPlatformer::NewDataSet::ImagerySectionRow^  parentImagerySectionRowByImagerySection_TextComponent) {
        NinjaPlatformer::NewDataSet::TextComponentRow^  rowTextComponentRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
        if (parentImagerySectionRowByImagerySection_TextComponent != nullptr) {
            columnValuesArray[1] = parentImagerySectionRowByImagerySection_TextComponent[1];
        }
        rowTextComponentRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowTextComponentRow);
        return rowTextComponentRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::TextComponentDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::TextComponentDataTable::Clone() {
        NinjaPlatformer::NewDataSet::TextComponentDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::TextComponentDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::TextComponentDataTable());
    }
    
    inline ::System::Void NewDataSet::TextComponentDataTable::InitVars() {
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
        this->columnImagerySection_Id = __super::Columns[L"ImagerySection_Id"];
    }
    
    inline ::System::Void NewDataSet::TextComponentDataTable::InitClass() {
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columnImagerySection_Id = (gcnew ::System::Data::DataColumn(L"ImagerySection_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnImagerySection_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnTextComponent_Id}, 
                true)));
        this->columnTextComponent_Id->AutoIncrement = true;
        this->columnTextComponent_Id->AllowDBNull = false;
        this->columnTextComponent_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::TextComponentDataTable::NewTextComponentRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::TextComponentDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::TextComponentRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::TextComponentDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::TextComponentRow::typeid;
    }
    
    inline ::System::Void NewDataSet::TextComponentDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->TextComponentRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::TextComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextComponentDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->TextComponentRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::TextComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextComponentDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->TextComponentRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::TextComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextComponentDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->TextComponentRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::TextComponentRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextComponentDataTable::RemoveTextComponentRow(NinjaPlatformer::NewDataSet::TextComponentRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::TextComponentDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"TextComponentDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::TextDataTable::TextDataTable() {
        this->TableName = L"Text";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::TextDataTable::TextDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::TextDataTable::TextDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::TextDataTable::stringColumn::get() {
        return this->columnstring;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::TextDataTable::fontColumn::get() {
        return this->columnfont;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::TextDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::TextDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::TextRow^  NewDataSet::TextDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::TextDataTable::AddTextRow(NinjaPlatformer::NewDataSet::TextRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::TextRow^  NewDataSet::TextDataTable::AddTextRow(System::String^  string, System::String^  font, 
                NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_Text) {
        NinjaPlatformer::NewDataSet::TextRow^  rowTextRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {string, font, nullptr};
        if (parentTextComponentRowByTextComponent_Text != nullptr) {
            columnValuesArray[2] = parentTextComponentRowByTextComponent_Text[0];
        }
        rowTextRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowTextRow);
        return rowTextRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::TextDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::TextDataTable::Clone() {
        NinjaPlatformer::NewDataSet::TextDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::TextDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::TextDataTable());
    }
    
    inline ::System::Void NewDataSet::TextDataTable::InitVars() {
        this->columnstring = __super::Columns[L"string"];
        this->columnfont = __super::Columns[L"font"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::TextDataTable::InitClass() {
        this->columnstring = (gcnew ::System::Data::DataColumn(L"string", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnstring);
        this->columnfont = (gcnew ::System::Data::DataColumn(L"font", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnfont);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columnstring->Namespace = L"";
        this->columnstring->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnfont->Namespace = L"";
        this->columnfont->DefaultValue = (cli::safe_cast<System::String^  >(L""));
    }
    
    inline NinjaPlatformer::NewDataSet::TextRow^  NewDataSet::TextDataTable::NewTextRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::TextDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::TextRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::TextDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::TextRow::typeid;
    }
    
    inline ::System::Void NewDataSet::TextDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->TextRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::TextRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->TextRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::TextRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->TextRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::TextRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->TextRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::TextRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextDataTable::RemoveTextRow(NinjaPlatformer::NewDataSet::TextRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::TextDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"TextDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::TextPropertyDataTable::TextPropertyDataTable() {
        this->TableName = L"TextProperty";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::TextPropertyDataTable::TextPropertyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::TextPropertyDataTable::TextPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::TextPropertyDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::TextPropertyDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::TextPropertyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::TextPropertyRow^  NewDataSet::TextPropertyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::TextPropertyDataTable::AddTextPropertyRow(NinjaPlatformer::NewDataSet::TextPropertyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::TextPropertyRow^  NewDataSet::TextPropertyDataTable::AddTextPropertyRow(System::String^  name, 
                NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_TextProperty) {
        NinjaPlatformer::NewDataSet::TextPropertyRow^  rowTextPropertyRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {name, nullptr};
        if (parentTextComponentRowByTextComponent_TextProperty != nullptr) {
            columnValuesArray[1] = parentTextComponentRowByTextComponent_TextProperty[0];
        }
        rowTextPropertyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowTextPropertyRow);
        return rowTextPropertyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::TextPropertyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::TextPropertyDataTable::Clone() {
        NinjaPlatformer::NewDataSet::TextPropertyDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::TextPropertyDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::TextPropertyDataTable());
    }
    
    inline ::System::Void NewDataSet::TextPropertyDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::TextPropertyDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::TextPropertyRow^  NewDataSet::TextPropertyDataTable::NewTextPropertyRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::TextPropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::TextPropertyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::TextPropertyDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::TextPropertyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::TextPropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->TextPropertyRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::TextPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextPropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->TextPropertyRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::TextPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextPropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->TextPropertyRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::TextPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextPropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->TextPropertyRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::TextPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::TextPropertyDataTable::RemoveTextPropertyRow(NinjaPlatformer::NewDataSet::TextPropertyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::TextPropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"TextPropertyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::FontPropertyDataTable::FontPropertyDataTable() {
        this->TableName = L"FontProperty";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::FontPropertyDataTable::FontPropertyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::FontPropertyDataTable::FontPropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FontPropertyDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::FontPropertyDataTable::TextComponent_IdColumn::get() {
        return this->columnTextComponent_Id;
    }
    
    inline ::System::Int32 NewDataSet::FontPropertyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::FontPropertyRow^  NewDataSet::FontPropertyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::FontPropertyDataTable::AddFontPropertyRow(NinjaPlatformer::NewDataSet::FontPropertyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::FontPropertyRow^  NewDataSet::FontPropertyDataTable::AddFontPropertyRow(System::String^  name, 
                NinjaPlatformer::NewDataSet::TextComponentRow^  parentTextComponentRowByTextComponent_FontProperty) {
        NinjaPlatformer::NewDataSet::FontPropertyRow^  rowFontPropertyRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {name, nullptr};
        if (parentTextComponentRowByTextComponent_FontProperty != nullptr) {
            columnValuesArray[1] = parentTextComponentRowByTextComponent_FontProperty[0];
        }
        rowFontPropertyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowFontPropertyRow);
        return rowFontPropertyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::FontPropertyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::FontPropertyDataTable::Clone() {
        NinjaPlatformer::NewDataSet::FontPropertyDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::FontPropertyDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::FontPropertyDataTable());
    }
    
    inline ::System::Void NewDataSet::FontPropertyDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnTextComponent_Id = __super::Columns[L"TextComponent_Id"];
    }
    
    inline ::System::Void NewDataSet::FontPropertyDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnTextComponent_Id = (gcnew ::System::Data::DataColumn(L"TextComponent_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnTextComponent_Id);
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::FontPropertyRow^  NewDataSet::FontPropertyDataTable::NewFontPropertyRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::FontPropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::FontPropertyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::FontPropertyDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::FontPropertyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::FontPropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->FontPropertyRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::FontPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FontPropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->FontPropertyRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::FontPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FontPropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->FontPropertyRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::FontPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FontPropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->FontPropertyRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::FontPropertyRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::FontPropertyDataTable::RemoveFontPropertyRow(NinjaPlatformer::NewDataSet::FontPropertyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::FontPropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"FontPropertyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::StateImageryDataTable::StateImageryDataTable() {
        this->TableName = L"StateImagery";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::StateImageryDataTable::StateImageryDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::StateImageryDataTable::StateImageryDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::StateImageryDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::StateImageryDataTable::clippedColumn::get() {
        return this->columnclipped;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::StateImageryDataTable::StateImagery_IdColumn::get() {
        return this->columnStateImagery_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::StateImageryDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Int32 NewDataSet::StateImageryDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::StateImageryRow^  NewDataSet::StateImageryDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::StateImageryDataTable::AddStateImageryRow(NinjaPlatformer::NewDataSet::StateImageryRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::StateImageryRow^  NewDataSet::StateImageryDataTable::AddStateImageryRow(System::String^  name, 
                System::Boolean clipped, NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_StateImagery) {
        NinjaPlatformer::NewDataSet::StateImageryRow^  rowStateImageryRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {name, clipped, nullptr, 
            nullptr};
        if (parentWidgetLookRowByWidgetLook_StateImagery != nullptr) {
            columnValuesArray[3] = parentWidgetLookRowByWidgetLook_StateImagery[2];
        }
        rowStateImageryRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowStateImageryRow);
        return rowStateImageryRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::StateImageryDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::StateImageryDataTable::Clone() {
        NinjaPlatformer::NewDataSet::StateImageryDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::StateImageryDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::StateImageryDataTable());
    }
    
    inline ::System::Void NewDataSet::StateImageryDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnclipped = __super::Columns[L"clipped"];
        this->columnStateImagery_Id = __super::Columns[L"StateImagery_Id"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
    }
    
    inline ::System::Void NewDataSet::StateImageryDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnclipped = (gcnew ::System::Data::DataColumn(L"clipped", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnclipped);
        this->columnStateImagery_Id = (gcnew ::System::Data::DataColumn(L"StateImagery_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnStateImagery_Id);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnStateImagery_Id}, 
                true)));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columnclipped->Namespace = L"";
        this->columnclipped->DefaultValue = static_cast<System::Boolean>(true);
        this->columnStateImagery_Id->AutoIncrement = true;
        this->columnStateImagery_Id->AllowDBNull = false;
        this->columnStateImagery_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::StateImageryRow^  NewDataSet::StateImageryDataTable::NewStateImageryRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::StateImageryDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::StateImageryRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::StateImageryDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::StateImageryRow::typeid;
    }
    
    inline ::System::Void NewDataSet::StateImageryDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->StateImageryRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::StateImageryRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::StateImageryDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->StateImageryRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::StateImageryRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::StateImageryDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->StateImageryRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::StateImageryRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::StateImageryDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->StateImageryRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::StateImageryRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::StateImageryDataTable::RemoveStateImageryRow(NinjaPlatformer::NewDataSet::StateImageryRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::StateImageryDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"StateImageryDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::LayerDataTable::LayerDataTable() {
        this->TableName = L"Layer";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::LayerDataTable::LayerDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::LayerDataTable::LayerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::LayerDataTable::priorityColumn::get() {
        return this->columnpriority;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::LayerDataTable::Layer_IdColumn::get() {
        return this->columnLayer_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::LayerDataTable::StateImagery_IdColumn::get() {
        return this->columnStateImagery_Id;
    }
    
    inline ::System::Int32 NewDataSet::LayerDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::LayerRow^  NewDataSet::LayerDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::LayerRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::LayerDataTable::AddLayerRow(NinjaPlatformer::NewDataSet::LayerRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::LayerRow^  NewDataSet::LayerDataTable::AddLayerRow(System::Int64 priority, NinjaPlatformer::NewDataSet::StateImageryRow^  parentStateImageryRowByStateImagery_Layer) {
        NinjaPlatformer::NewDataSet::LayerRow^  rowLayerRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::LayerRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {priority, nullptr, 
            nullptr};
        if (parentStateImageryRowByStateImagery_Layer != nullptr) {
            columnValuesArray[2] = parentStateImageryRowByStateImagery_Layer[2];
        }
        rowLayerRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowLayerRow);
        return rowLayerRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::LayerDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::LayerDataTable::Clone() {
        NinjaPlatformer::NewDataSet::LayerDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::LayerDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::LayerDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::LayerDataTable());
    }
    
    inline ::System::Void NewDataSet::LayerDataTable::InitVars() {
        this->columnpriority = __super::Columns[L"priority"];
        this->columnLayer_Id = __super::Columns[L"Layer_Id"];
        this->columnStateImagery_Id = __super::Columns[L"StateImagery_Id"];
    }
    
    inline ::System::Void NewDataSet::LayerDataTable::InitClass() {
        this->columnpriority = (gcnew ::System::Data::DataColumn(L"priority", ::System::Int64::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnpriority);
        this->columnLayer_Id = (gcnew ::System::Data::DataColumn(L"Layer_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnLayer_Id);
        this->columnStateImagery_Id = (gcnew ::System::Data::DataColumn(L"StateImagery_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnStateImagery_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnLayer_Id}, 
                true)));
        this->columnpriority->Namespace = L"";
        this->columnpriority->DefaultValue = static_cast<System::Int64>(0);
        this->columnLayer_Id->AutoIncrement = true;
        this->columnLayer_Id->AllowDBNull = false;
        this->columnLayer_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::LayerRow^  NewDataSet::LayerDataTable::NewLayerRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::LayerRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::LayerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::LayerRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::LayerDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::LayerRow::typeid;
    }
    
    inline ::System::Void NewDataSet::LayerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->LayerRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::LayerRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::LayerRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::LayerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->LayerRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::LayerRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::LayerRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::LayerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->LayerRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::LayerRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::LayerRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::LayerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->LayerRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::LayerRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::LayerRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::LayerDataTable::RemoveLayerRow(NinjaPlatformer::NewDataSet::LayerRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::LayerDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"LayerDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::SectionDataTable::SectionDataTable() {
        this->TableName = L"Section";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::SectionDataTable::SectionDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::SectionDataTable::SectionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SectionDataTable::lookColumn::get() {
        return this->columnlook;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SectionDataTable::sectionColumn::get() {
        return this->columnsection;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SectionDataTable::controlPropertyColumn::get() {
        return this->columncontrolProperty;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SectionDataTable::controlValueColumn::get() {
        return this->columncontrolValue;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SectionDataTable::controlWidgetColumn::get() {
        return this->columncontrolWidget;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SectionDataTable::Section_IdColumn::get() {
        return this->columnSection_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SectionDataTable::Layer_IdColumn::get() {
        return this->columnLayer_Id;
    }
    
    inline ::System::Int32 NewDataSet::SectionDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::SectionRow^  NewDataSet::SectionDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::SectionDataTable::AddSectionRow(NinjaPlatformer::NewDataSet::SectionRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::SectionRow^  NewDataSet::SectionDataTable::AddSectionRow(
                System::String^  look, 
                System::String^  section, 
                System::String^  controlProperty, 
                System::String^  controlValue, 
                System::String^  controlWidget, 
                NinjaPlatformer::NewDataSet::LayerRow^  parentLayerRowByLayer_Section) {
        NinjaPlatformer::NewDataSet::SectionRow^  rowSectionRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(7) {look, section, controlProperty, 
            controlValue, controlWidget, nullptr, nullptr};
        if (parentLayerRowByLayer_Section != nullptr) {
            columnValuesArray[6] = parentLayerRowByLayer_Section[1];
        }
        rowSectionRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowSectionRow);
        return rowSectionRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::SectionDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::SectionDataTable::Clone() {
        NinjaPlatformer::NewDataSet::SectionDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::SectionDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::SectionDataTable());
    }
    
    inline ::System::Void NewDataSet::SectionDataTable::InitVars() {
        this->columnlook = __super::Columns[L"look"];
        this->columnsection = __super::Columns[L"section"];
        this->columncontrolProperty = __super::Columns[L"controlProperty"];
        this->columncontrolValue = __super::Columns[L"controlValue"];
        this->columncontrolWidget = __super::Columns[L"controlWidget"];
        this->columnSection_Id = __super::Columns[L"Section_Id"];
        this->columnLayer_Id = __super::Columns[L"Layer_Id"];
    }
    
    inline ::System::Void NewDataSet::SectionDataTable::InitClass() {
        this->columnlook = (gcnew ::System::Data::DataColumn(L"look", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnlook);
        this->columnsection = (gcnew ::System::Data::DataColumn(L"section", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnsection);
        this->columncontrolProperty = (gcnew ::System::Data::DataColumn(L"controlProperty", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncontrolProperty);
        this->columncontrolValue = (gcnew ::System::Data::DataColumn(L"controlValue", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncontrolValue);
        this->columncontrolWidget = (gcnew ::System::Data::DataColumn(L"controlWidget", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columncontrolWidget);
        this->columnSection_Id = (gcnew ::System::Data::DataColumn(L"Section_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnSection_Id);
        this->columnLayer_Id = (gcnew ::System::Data::DataColumn(L"Layer_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnLayer_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnSection_Id}, 
                true)));
        this->columnlook->Namespace = L"";
        this->columnlook->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnsection->AllowDBNull = false;
        this->columnsection->Namespace = L"";
        this->columncontrolProperty->Namespace = L"";
        this->columncontrolProperty->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columncontrolValue->Namespace = L"";
        this->columncontrolValue->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columncontrolWidget->Namespace = L"";
        this->columncontrolWidget->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnSection_Id->AutoIncrement = true;
        this->columnSection_Id->AllowDBNull = false;
        this->columnSection_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::SectionRow^  NewDataSet::SectionDataTable::NewSectionRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::SectionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::SectionRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::SectionDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::SectionRow::typeid;
    }
    
    inline ::System::Void NewDataSet::SectionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->SectionRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::SectionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::SectionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->SectionRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::SectionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::SectionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->SectionRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::SectionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::SectionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->SectionRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::SectionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::SectionDataTable::RemoveSectionRow(NinjaPlatformer::NewDataSet::SectionRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::SectionDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"SectionDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::AnimationDefinitionDataTable::AnimationDefinitionDataTable() {
        this->TableName = L"AnimationDefinition";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::AnimationDefinitionDataTable::AnimationDefinitionDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::AnimationDefinitionDataTable::AnimationDefinitionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AnimationDefinitionDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AnimationDefinitionDataTable::durationColumn::get() {
        return this->columnduration;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AnimationDefinitionDataTable::replayModeColumn::get() {
        return this->columnreplayMode;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AnimationDefinitionDataTable::autoStartColumn::get() {
        return this->columnautoStart;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AnimationDefinitionDataTable::AnimationDefinition_IdColumn::get() {
        return this->columnAnimationDefinition_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AnimationDefinitionDataTable::WidgetLook_IdColumn::get() {
        return this->columnWidgetLook_Id;
    }
    
    inline ::System::Int32 NewDataSet::AnimationDefinitionDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  NewDataSet::AnimationDefinitionDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionDataTable::AddAnimationDefinitionRow(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  NewDataSet::AnimationDefinitionDataTable::AddAnimationDefinitionRow(
                System::String^  name, System::Decimal duration, System::String^  replayMode, System::Boolean autoStart, NinjaPlatformer::NewDataSet::WidgetLookRow^  parentWidgetLookRowByWidgetLook_AnimationDefinition) {
        NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  rowAnimationDefinitionRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {name, duration, replayMode, 
            autoStart, nullptr, nullptr};
        if (parentWidgetLookRowByWidgetLook_AnimationDefinition != nullptr) {
            columnValuesArray[5] = parentWidgetLookRowByWidgetLook_AnimationDefinition[2];
        }
        rowAnimationDefinitionRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowAnimationDefinitionRow);
        return rowAnimationDefinitionRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::AnimationDefinitionDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AnimationDefinitionDataTable::Clone() {
        NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AnimationDefinitionDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable());
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionDataTable::InitVars() {
        this->columnname = __super::Columns[L"name"];
        this->columnduration = __super::Columns[L"duration"];
        this->columnreplayMode = __super::Columns[L"replayMode"];
        this->columnautoStart = __super::Columns[L"autoStart"];
        this->columnAnimationDefinition_Id = __super::Columns[L"AnimationDefinition_Id"];
        this->columnWidgetLook_Id = __super::Columns[L"WidgetLook_Id"];
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionDataTable::InitClass() {
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnname);
        this->columnduration = (gcnew ::System::Data::DataColumn(L"duration", ::System::Decimal::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnduration);
        this->columnreplayMode = (gcnew ::System::Data::DataColumn(L"replayMode", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnreplayMode);
        this->columnautoStart = (gcnew ::System::Data::DataColumn(L"autoStart", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnautoStart);
        this->columnAnimationDefinition_Id = (gcnew ::System::Data::DataColumn(L"AnimationDefinition_Id", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnAnimationDefinition_Id);
        this->columnWidgetLook_Id = (gcnew ::System::Data::DataColumn(L"WidgetLook_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnWidgetLook_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnAnimationDefinition_Id}, 
                true)));
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columnduration->AllowDBNull = false;
        this->columnduration->Namespace = L"";
        this->columnreplayMode->Namespace = L"";
        this->columnreplayMode->DefaultValue = (cli::safe_cast<System::String^  >(L"loop"));
        this->columnautoStart->Namespace = L"";
        this->columnautoStart->DefaultValue = static_cast<System::Boolean>(false);
        this->columnAnimationDefinition_Id->AutoIncrement = true;
        this->columnAnimationDefinition_Id->AllowDBNull = false;
        this->columnAnimationDefinition_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  NewDataSet::AnimationDefinitionDataTable::NewAnimationDefinitionRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::AnimationDefinitionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::AnimationDefinitionRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::AnimationDefinitionDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::AnimationDefinitionRow::typeid;
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->AnimationDefinitionRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::AnimationDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->AnimationDefinitionRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::AnimationDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->AnimationDefinitionRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::AnimationDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->AnimationDefinitionRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::AnimationDefinitionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionDataTable::RemoveAnimationDefinitionRow(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::AnimationDefinitionDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"AnimationDefinitionDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::AffectorDataTable::AffectorDataTable() {
        this->TableName = L"Affector";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::AffectorDataTable::AffectorDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::AffectorDataTable::AffectorDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AffectorDataTable::applicationMethodColumn::get() {
        return this->columnapplicationMethod;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AffectorDataTable::_propertyColumn::get() {
        return this->column_property;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AffectorDataTable::interpolatorColumn::get() {
        return this->columninterpolator;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AffectorDataTable::Affector_IdColumn::get() {
        return this->columnAffector_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::AffectorDataTable::AnimationDefinition_IdColumn::get() {
        return this->columnAnimationDefinition_Id;
    }
    
    inline ::System::Int32 NewDataSet::AffectorDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::AffectorRow^  NewDataSet::AffectorDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::AffectorDataTable::AddAffectorRow(NinjaPlatformer::NewDataSet::AffectorRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::AffectorRow^  NewDataSet::AffectorDataTable::AddAffectorRow(System::String^  applicationMethod, 
                System::String^  _property, System::String^  interpolator, NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  parentAnimationDefinitionRowByAnimationDefinition_Affector) {
        NinjaPlatformer::NewDataSet::AffectorRow^  rowAffectorRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {applicationMethod, 
            _property, interpolator, nullptr, nullptr};
        if (parentAnimationDefinitionRowByAnimationDefinition_Affector != nullptr) {
            columnValuesArray[4] = parentAnimationDefinitionRowByAnimationDefinition_Affector[4];
        }
        rowAffectorRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowAffectorRow);
        return rowAffectorRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::AffectorDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AffectorDataTable::Clone() {
        NinjaPlatformer::NewDataSet::AffectorDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::AffectorDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::AffectorDataTable());
    }
    
    inline ::System::Void NewDataSet::AffectorDataTable::InitVars() {
        this->columnapplicationMethod = __super::Columns[L"applicationMethod"];
        this->column_property = __super::Columns[L"property"];
        this->columninterpolator = __super::Columns[L"interpolator"];
        this->columnAffector_Id = __super::Columns[L"Affector_Id"];
        this->columnAnimationDefinition_Id = __super::Columns[L"AnimationDefinition_Id"];
    }
    
    inline ::System::Void NewDataSet::AffectorDataTable::InitClass() {
        this->columnapplicationMethod = (gcnew ::System::Data::DataColumn(L"applicationMethod", ::System::String::typeid, nullptr, 
            ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnapplicationMethod);
        this->column_property = (gcnew ::System::Data::DataColumn(L"property", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->column_property);
        this->columninterpolator = (gcnew ::System::Data::DataColumn(L"interpolator", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columninterpolator);
        this->columnAffector_Id = (gcnew ::System::Data::DataColumn(L"Affector_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnAffector_Id);
        this->columnAnimationDefinition_Id = (gcnew ::System::Data::DataColumn(L"AnimationDefinition_Id", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnAnimationDefinition_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnAffector_Id}, 
                true)));
        this->columnapplicationMethod->Namespace = L"";
        this->columnapplicationMethod->DefaultValue = (cli::safe_cast<System::String^  >(L"absolute"));
        this->column_property->AllowDBNull = false;
        this->column_property->Namespace = L"";
        this->columninterpolator->AllowDBNull = false;
        this->columninterpolator->Namespace = L"";
        this->columnAffector_Id->AutoIncrement = true;
        this->columnAffector_Id->AllowDBNull = false;
        this->columnAffector_Id->Unique = true;
    }
    
    inline NinjaPlatformer::NewDataSet::AffectorRow^  NewDataSet::AffectorDataTable::NewAffectorRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::AffectorDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::AffectorRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::AffectorDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::AffectorRow::typeid;
    }
    
    inline ::System::Void NewDataSet::AffectorDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->AffectorRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::AffectorRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AffectorDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->AffectorRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::AffectorRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AffectorDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->AffectorRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::AffectorRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AffectorDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->AffectorRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::AffectorRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::AffectorDataTable::RemoveAffectorRow(NinjaPlatformer::NewDataSet::AffectorRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::AffectorDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"AffectorDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::KeyFrameDataTable::KeyFrameDataTable() {
        this->TableName = L"KeyFrame";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::KeyFrameDataTable::KeyFrameDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::KeyFrameDataTable::KeyFrameDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::KeyFrameDataTable::positionColumn::get() {
        return this->columnposition;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::KeyFrameDataTable::_valueColumn::get() {
        return this->column_value;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::KeyFrameDataTable::progressionColumn::get() {
        return this->columnprogression;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::KeyFrameDataTable::sourcePropertyColumn::get() {
        return this->columnsourceProperty;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::KeyFrameDataTable::Affector_IdColumn::get() {
        return this->columnAffector_Id;
    }
    
    inline ::System::Int32 NewDataSet::KeyFrameDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::KeyFrameRow^  NewDataSet::KeyFrameDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::KeyFrameDataTable::AddKeyFrameRow(NinjaPlatformer::NewDataSet::KeyFrameRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::KeyFrameRow^  NewDataSet::KeyFrameDataTable::AddKeyFrameRow(System::Decimal position, 
                System::String^  _value, System::String^  progression, System::String^  sourceProperty, NinjaPlatformer::NewDataSet::AffectorRow^  parentAffectorRowByAffector_KeyFrame) {
        NinjaPlatformer::NewDataSet::KeyFrameRow^  rowKeyFrameRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {position, _value, progression, 
            sourceProperty, nullptr};
        if (parentAffectorRowByAffector_KeyFrame != nullptr) {
            columnValuesArray[4] = parentAffectorRowByAffector_KeyFrame[3];
        }
        rowKeyFrameRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowKeyFrameRow);
        return rowKeyFrameRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::KeyFrameDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::KeyFrameDataTable::Clone() {
        NinjaPlatformer::NewDataSet::KeyFrameDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::KeyFrameDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::KeyFrameDataTable());
    }
    
    inline ::System::Void NewDataSet::KeyFrameDataTable::InitVars() {
        this->columnposition = __super::Columns[L"position"];
        this->column_value = __super::Columns[L"value"];
        this->columnprogression = __super::Columns[L"progression"];
        this->columnsourceProperty = __super::Columns[L"sourceProperty"];
        this->columnAffector_Id = __super::Columns[L"Affector_Id"];
    }
    
    inline ::System::Void NewDataSet::KeyFrameDataTable::InitClass() {
        this->columnposition = (gcnew ::System::Data::DataColumn(L"position", ::System::Decimal::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnposition);
        this->column_value = (gcnew ::System::Data::DataColumn(L"value", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->column_value);
        this->columnprogression = (gcnew ::System::Data::DataColumn(L"progression", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnprogression);
        this->columnsourceProperty = (gcnew ::System::Data::DataColumn(L"sourceProperty", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnsourceProperty);
        this->columnAffector_Id = (gcnew ::System::Data::DataColumn(L"Affector_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnAffector_Id);
        this->columnposition->AllowDBNull = false;
        this->columnposition->Namespace = L"";
        this->column_value->Namespace = L"";
        this->column_value->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnprogression->Namespace = L"";
        this->columnprogression->DefaultValue = (cli::safe_cast<System::String^  >(L""));
        this->columnsourceProperty->Namespace = L"";
        this->columnsourceProperty->DefaultValue = (cli::safe_cast<System::String^  >(L""));
    }
    
    inline NinjaPlatformer::NewDataSet::KeyFrameRow^  NewDataSet::KeyFrameDataTable::NewKeyFrameRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::KeyFrameDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::KeyFrameRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::KeyFrameDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::KeyFrameRow::typeid;
    }
    
    inline ::System::Void NewDataSet::KeyFrameDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->KeyFrameRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::KeyFrameRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::KeyFrameDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->KeyFrameRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::KeyFrameRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::KeyFrameDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->KeyFrameRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::KeyFrameRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::KeyFrameDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->KeyFrameRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::KeyFrameRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::KeyFrameDataTable::RemoveKeyFrameRow(NinjaPlatformer::NewDataSet::KeyFrameRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::KeyFrameDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"KeyFrameDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::SubscriptionDataTable::SubscriptionDataTable() {
        this->TableName = L"Subscription";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::SubscriptionDataTable::SubscriptionDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::SubscriptionDataTable::SubscriptionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SubscriptionDataTable::_eventColumn::get() {
        return this->column_event;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SubscriptionDataTable::actionColumn::get() {
        return this->columnaction;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::SubscriptionDataTable::AnimationDefinition_IdColumn::get() {
        return this->columnAnimationDefinition_Id;
    }
    
    inline ::System::Int32 NewDataSet::SubscriptionDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline NinjaPlatformer::NewDataSet::SubscriptionRow^  NewDataSet::SubscriptionDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::SubscriptionDataTable::AddSubscriptionRow(NinjaPlatformer::NewDataSet::SubscriptionRow^  row) {
        this->Rows->Add(row);
    }
    
    inline NinjaPlatformer::NewDataSet::SubscriptionRow^  NewDataSet::SubscriptionDataTable::AddSubscriptionRow(System::String^  _event, 
                System::String^  action, NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  parentAnimationDefinitionRowByAnimationDefinition_Subscription) {
        NinjaPlatformer::NewDataSet::SubscriptionRow^  rowSubscriptionRow = (cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {_event, action, nullptr};
        if (parentAnimationDefinitionRowByAnimationDefinition_Subscription != nullptr) {
            columnValuesArray[2] = parentAnimationDefinitionRowByAnimationDefinition_Subscription[4];
        }
        rowSubscriptionRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowSubscriptionRow);
        return rowSubscriptionRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::SubscriptionDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::SubscriptionDataTable::Clone() {
        NinjaPlatformer::NewDataSet::SubscriptionDataTable^  cln = (cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::SubscriptionDataTable::CreateInstance() {
        return (gcnew NinjaPlatformer::NewDataSet::SubscriptionDataTable());
    }
    
    inline ::System::Void NewDataSet::SubscriptionDataTable::InitVars() {
        this->column_event = __super::Columns[L"event"];
        this->columnaction = __super::Columns[L"action"];
        this->columnAnimationDefinition_Id = __super::Columns[L"AnimationDefinition_Id"];
    }
    
    inline ::System::Void NewDataSet::SubscriptionDataTable::InitClass() {
        this->column_event = (gcnew ::System::Data::DataColumn(L"event", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->column_event);
        this->columnaction = (gcnew ::System::Data::DataColumn(L"action", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnaction);
        this->columnAnimationDefinition_Id = (gcnew ::System::Data::DataColumn(L"AnimationDefinition_Id", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnAnimationDefinition_Id);
        this->column_event->AllowDBNull = false;
        this->column_event->Namespace = L"";
        this->columnaction->AllowDBNull = false;
        this->columnaction->Namespace = L"";
    }
    
    inline NinjaPlatformer::NewDataSet::SubscriptionRow^  NewDataSet::SubscriptionDataTable::NewSubscriptionRow() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::SubscriptionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew NinjaPlatformer::NewDataSet::SubscriptionRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::SubscriptionDataTable::GetRowType() {
        return NinjaPlatformer::NewDataSet::SubscriptionRow::typeid;
    }
    
    inline ::System::Void NewDataSet::SubscriptionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->SubscriptionRowChanged(this, (gcnew NinjaPlatformer::NewDataSet::SubscriptionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::SubscriptionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->SubscriptionRowChanging(this, (gcnew NinjaPlatformer::NewDataSet::SubscriptionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::SubscriptionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->SubscriptionRowDeleted(this, (gcnew NinjaPlatformer::NewDataSet::SubscriptionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::SubscriptionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->SubscriptionRowDeleting(this, (gcnew NinjaPlatformer::NewDataSet::SubscriptionRowChangeEvent((cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::SubscriptionDataTable::RemoveSubscriptionRow(NinjaPlatformer::NewDataSet::SubscriptionRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::SubscriptionDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        NinjaPlatformer::NewDataSet^  ds = (gcnew NinjaPlatformer::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"SubscriptionDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::FalagardRow::FalagardRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableFalagard = (cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardDataTable^  >(this->Table));
    }
    
    inline System::UInt64 NewDataSet::FalagardRow::version::get() {
        try {
            return (cli::safe_cast<::System::UInt64 >(this[this->tableFalagard->versionColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'version\' in table \'Falagard\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::FalagardRow::version::set(System::UInt64 value) {
        this[this->tableFalagard->versionColumn] = value;
    }
    
    inline System::Int32 NewDataSet::FalagardRow::Falagard_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableFalagard->Falagard_IdColumn]));
    }
    inline System::Void NewDataSet::FalagardRow::Falagard_Id::set(System::Int32 value) {
        this[this->tableFalagard->Falagard_IdColumn] = value;
    }
    
    inline ::System::Boolean NewDataSet::FalagardRow::IsversionNull() {
        return this->IsNull(this->tableFalagard->versionColumn);
    }
    
    inline ::System::Void NewDataSet::FalagardRow::SetversionNull() {
        this[this->tableFalagard->versionColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::WidgetLookRow^  >^  NewDataSet::FalagardRow::GetWidgetLookRows() {
        if (this->Table->ChildRelations[L"Falagard_WidgetLook"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::WidgetLookRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::WidgetLookRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Falagard_WidgetLook"])));
        }
    }
    
    
    inline NewDataSet::WidgetLookRow::WidgetLookRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableWidgetLook = (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::WidgetLookRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableWidgetLook->nameColumn]));
    }
    inline System::Void NewDataSet::WidgetLookRow::name::set(System::String^  value) {
        this[this->tableWidgetLook->nameColumn] = value;
    }
    
    inline System::String^  NewDataSet::WidgetLookRow::inherits::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableWidgetLook->inheritsColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'inherits\' in table \'WidgetLook\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::WidgetLookRow::inherits::set(System::String^  value) {
        this[this->tableWidgetLook->inheritsColumn] = value;
    }
    
    inline System::Int32 NewDataSet::WidgetLookRow::WidgetLook_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableWidgetLook->WidgetLook_IdColumn]));
    }
    inline System::Void NewDataSet::WidgetLookRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tableWidgetLook->WidgetLook_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::WidgetLookRow::Falagard_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableWidgetLook->Falagard_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Falagard_Id\' in table \'WidgetLook\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::WidgetLookRow::Falagard_Id::set(System::Int32 value) {
        this[this->tableWidgetLook->Falagard_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FalagardRow^  NewDataSet::WidgetLookRow::FalagardRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FalagardRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Falagard_WidgetLook"])));
    }
    inline System::Void NewDataSet::WidgetLookRow::FalagardRow::set(NinjaPlatformer::NewDataSet::FalagardRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Falagard_WidgetLook"]);
    }
    
    inline ::System::Boolean NewDataSet::WidgetLookRow::IsinheritsNull() {
        return this->IsNull(this->tableWidgetLook->inheritsColumn);
    }
    
    inline ::System::Void NewDataSet::WidgetLookRow::SetinheritsNull() {
        this[this->tableWidgetLook->inheritsColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::WidgetLookRow::IsFalagard_IdNull() {
        return this->IsNull(this->tableWidgetLook->Falagard_IdColumn);
    }
    
    inline ::System::Void NewDataSet::WidgetLookRow::SetFalagard_IdNull() {
        this[this->tableWidgetLook->Falagard_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >^  NewDataSet::WidgetLookRow::GetEventLinkDefinitionRows() {
        if (this->Table->ChildRelations[L"WidgetLook_EventLinkDefinition"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"WidgetLook_EventLinkDefinition"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >^  NewDataSet::WidgetLookRow::GetPropertyDefinitionRows() {
        if (this->Table->ChildRelations[L"WidgetLook_PropertyDefinition"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"WidgetLook_PropertyDefinition"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >^  NewDataSet::WidgetLookRow::GetPropertyLinkDefinitionRows() {
        if (this->Table->ChildRelations[L"WidgetLook_PropertyLinkDefinition"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"WidgetLook_PropertyLinkDefinition"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::PropertyRow^  >^  NewDataSet::WidgetLookRow::GetPropertyRows() {
        if (this->Table->ChildRelations[L"WidgetLook_Property"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::PropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::PropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"WidgetLook_Property"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::NamedAreaRow^  >^  NewDataSet::WidgetLookRow::GetNamedAreaRows() {
        if (this->Table->ChildRelations[L"WidgetLook_NamedArea"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::NamedAreaRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::NamedAreaRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"WidgetLook_NamedArea"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ChildRow^  >^  NewDataSet::WidgetLookRow::GetChildRows() {
        if (this->Table->ChildRelations[L"WidgetLook_Child"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ChildRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ChildRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"WidgetLook_Child"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImagerySectionRow^  >^  NewDataSet::WidgetLookRow::GetImagerySectionRows() {
        if (this->Table->ChildRelations[L"WidgetLook_ImagerySection"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImagerySectionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"WidgetLook_ImagerySection"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::StateImageryRow^  >^  NewDataSet::WidgetLookRow::GetStateImageryRows() {
        if (this->Table->ChildRelations[L"WidgetLook_StateImagery"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::StateImageryRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::StateImageryRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"WidgetLook_StateImagery"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >^  NewDataSet::WidgetLookRow::GetAnimationDefinitionRows() {
        if (this->Table->ChildRelations[L"WidgetLook_AnimationDefinition"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"WidgetLook_AnimationDefinition"])));
        }
    }
    
    
    inline NewDataSet::EventLinkDefinitionRow::EventLinkDefinitionRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableEventLinkDefinition = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::EventLinkDefinitionRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableEventLinkDefinition->nameColumn]));
    }
    inline System::Void NewDataSet::EventLinkDefinitionRow::name::set(System::String^  value) {
        this[this->tableEventLinkDefinition->nameColumn] = value;
    }
    
    inline System::String^  NewDataSet::EventLinkDefinitionRow::widget::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableEventLinkDefinition->widgetColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'widget\' in table \'EventLinkDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::EventLinkDefinitionRow::widget::set(System::String^  value) {
        this[this->tableEventLinkDefinition->widgetColumn] = value;
    }
    
    inline System::String^  NewDataSet::EventLinkDefinitionRow::_event::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableEventLinkDefinition->_eventColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'event\' in table \'EventLinkDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::EventLinkDefinitionRow::_event::set(System::String^  value) {
        this[this->tableEventLinkDefinition->_eventColumn] = value;
    }
    
    inline System::Int32 NewDataSet::EventLinkDefinitionRow::EventLinkDefinition_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableEventLinkDefinition->EventLinkDefinition_IdColumn]));
    }
    inline System::Void NewDataSet::EventLinkDefinitionRow::EventLinkDefinition_Id::set(System::Int32 value) {
        this[this->tableEventLinkDefinition->EventLinkDefinition_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::EventLinkDefinitionRow::WidgetLook_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableEventLinkDefinition->WidgetLook_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'WidgetLook_Id\' in table \'EventLinkDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::EventLinkDefinitionRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tableEventLinkDefinition->WidgetLook_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::EventLinkDefinitionRow::WidgetLookRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->GetParentRow(this->Table->ParentRelations[L"WidgetLook_EventLinkDefinition"])));
    }
    inline System::Void NewDataSet::EventLinkDefinitionRow::WidgetLookRow::set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"WidgetLook_EventLinkDefinition"]);
    }
    
    inline ::System::Boolean NewDataSet::EventLinkDefinitionRow::IswidgetNull() {
        return this->IsNull(this->tableEventLinkDefinition->widgetColumn);
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionRow::SetwidgetNull() {
        this[this->tableEventLinkDefinition->widgetColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::EventLinkDefinitionRow::Is_eventNull() {
        return this->IsNull(this->tableEventLinkDefinition->_eventColumn);
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionRow::Set_eventNull() {
        this[this->tableEventLinkDefinition->_eventColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::EventLinkDefinitionRow::IsWidgetLook_IdNull() {
        return this->IsNull(this->tableEventLinkDefinition->WidgetLook_IdColumn);
    }
    
    inline ::System::Void NewDataSet::EventLinkDefinitionRow::SetWidgetLook_IdNull() {
        this[this->tableEventLinkDefinition->WidgetLook_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >^  NewDataSet::EventLinkDefinitionRow::GetEventLinkTargetRows() {
        if (this->Table->ChildRelations[L"EventLinkDefinition_EventLinkTarget"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::EventLinkTargetRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"EventLinkDefinition_EventLinkTarget"])));
        }
    }
    
    
    inline NewDataSet::EventLinkTargetRow::EventLinkTargetRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableEventLinkTarget = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkTargetDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::EventLinkTargetRow::widget::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableEventLinkTarget->widgetColumn]));
    }
    inline System::Void NewDataSet::EventLinkTargetRow::widget::set(System::String^  value) {
        this[this->tableEventLinkTarget->widgetColumn] = value;
    }
    
    inline System::String^  NewDataSet::EventLinkTargetRow::_event::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableEventLinkTarget->_eventColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'event\' in table \'EventLinkTarget\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::EventLinkTargetRow::_event::set(System::String^  value) {
        this[this->tableEventLinkTarget->_eventColumn] = value;
    }
    
    inline System::Int32 NewDataSet::EventLinkTargetRow::EventLinkDefinition_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableEventLinkTarget->EventLinkDefinition_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'EventLinkDefinition_Id\' in table \'EventLinkTarget\' is DBNul" 
L"l.", 
                e));
        }
    }
    inline System::Void NewDataSet::EventLinkTargetRow::EventLinkDefinition_Id::set(System::Int32 value) {
        this[this->tableEventLinkTarget->EventLinkDefinition_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  NewDataSet::EventLinkTargetRow::EventLinkDefinitionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"EventLinkDefinition_EventLinkTarget"])));
    }
    inline System::Void NewDataSet::EventLinkTargetRow::EventLinkDefinitionRow::set(NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"EventLinkDefinition_EventLinkTarget"]);
    }
    
    inline ::System::Boolean NewDataSet::EventLinkTargetRow::Is_eventNull() {
        return this->IsNull(this->tableEventLinkTarget->_eventColumn);
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetRow::Set_eventNull() {
        this[this->tableEventLinkTarget->_eventColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::EventLinkTargetRow::IsEventLinkDefinition_IdNull() {
        return this->IsNull(this->tableEventLinkTarget->EventLinkDefinition_IdColumn);
    }
    
    inline ::System::Void NewDataSet::EventLinkTargetRow::SetEventLinkDefinition_IdNull() {
        this[this->tableEventLinkTarget->EventLinkDefinition_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::PropertyDefinitionRow::PropertyDefinitionRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablePropertyDefinition = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDefinitionDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::PropertyDefinitionRow::type::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyDefinition->typeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'type\' in table \'PropertyDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDefinitionRow::type::set(System::String^  value) {
        this[this->tablePropertyDefinition->typeColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyDefinitionRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tablePropertyDefinition->nameColumn]));
    }
    inline System::Void NewDataSet::PropertyDefinitionRow::name::set(System::String^  value) {
        this[this->tablePropertyDefinition->nameColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyDefinitionRow::initialValue::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyDefinition->initialValueColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'initialValue\' in table \'PropertyDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDefinitionRow::initialValue::set(System::String^  value) {
        this[this->tablePropertyDefinition->initialValueColumn] = value;
    }
    
    inline System::Boolean NewDataSet::PropertyDefinitionRow::layoutOnWrite::get() {
        try {
            return (cli::safe_cast<::System::Boolean >(this[this->tablePropertyDefinition->layoutOnWriteColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'layoutOnWrite\' in table \'PropertyDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDefinitionRow::layoutOnWrite::set(System::Boolean value) {
        this[this->tablePropertyDefinition->layoutOnWriteColumn] = value;
    }
    
    inline System::Boolean NewDataSet::PropertyDefinitionRow::redrawOnWrite::get() {
        try {
            return (cli::safe_cast<::System::Boolean >(this[this->tablePropertyDefinition->redrawOnWriteColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'redrawOnWrite\' in table \'PropertyDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDefinitionRow::redrawOnWrite::set(System::Boolean value) {
        this[this->tablePropertyDefinition->redrawOnWriteColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyDefinitionRow::help::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyDefinition->helpColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'help\' in table \'PropertyDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDefinitionRow::help::set(System::String^  value) {
        this[this->tablePropertyDefinition->helpColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyDefinitionRow::fireEvent::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyDefinition->fireEventColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'fireEvent\' in table \'PropertyDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDefinitionRow::fireEvent::set(System::String^  value) {
        this[this->tablePropertyDefinition->fireEventColumn] = value;
    }
    
    inline System::Int32 NewDataSet::PropertyDefinitionRow::WidgetLook_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablePropertyDefinition->WidgetLook_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'WidgetLook_Id\' in table \'PropertyDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDefinitionRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tablePropertyDefinition->WidgetLook_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::PropertyDefinitionRow::WidgetLookRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->GetParentRow(this->Table->ParentRelations[L"WidgetLook_PropertyDefinition"])));
    }
    inline System::Void NewDataSet::PropertyDefinitionRow::WidgetLookRow::set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"WidgetLook_PropertyDefinition"]);
    }
    
    inline ::System::Boolean NewDataSet::PropertyDefinitionRow::IstypeNull() {
        return this->IsNull(this->tablePropertyDefinition->typeColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionRow::SettypeNull() {
        this[this->tablePropertyDefinition->typeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyDefinitionRow::IsinitialValueNull() {
        return this->IsNull(this->tablePropertyDefinition->initialValueColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionRow::SetinitialValueNull() {
        this[this->tablePropertyDefinition->initialValueColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyDefinitionRow::IslayoutOnWriteNull() {
        return this->IsNull(this->tablePropertyDefinition->layoutOnWriteColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionRow::SetlayoutOnWriteNull() {
        this[this->tablePropertyDefinition->layoutOnWriteColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyDefinitionRow::IsredrawOnWriteNull() {
        return this->IsNull(this->tablePropertyDefinition->redrawOnWriteColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionRow::SetredrawOnWriteNull() {
        this[this->tablePropertyDefinition->redrawOnWriteColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyDefinitionRow::IshelpNull() {
        return this->IsNull(this->tablePropertyDefinition->helpColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionRow::SethelpNull() {
        this[this->tablePropertyDefinition->helpColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyDefinitionRow::IsfireEventNull() {
        return this->IsNull(this->tablePropertyDefinition->fireEventColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionRow::SetfireEventNull() {
        this[this->tablePropertyDefinition->fireEventColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyDefinitionRow::IsWidgetLook_IdNull() {
        return this->IsNull(this->tablePropertyDefinition->WidgetLook_IdColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDefinitionRow::SetWidgetLook_IdNull() {
        this[this->tablePropertyDefinition->WidgetLook_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::PropertyLinkDefinitionRow::PropertyLinkDefinitionRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablePropertyLinkDefinition = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::PropertyLinkDefinitionRow::type::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyLinkDefinition->typeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'type\' in table \'PropertyLinkDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::type::set(System::String^  value) {
        this[this->tablePropertyLinkDefinition->typeColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyLinkDefinitionRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tablePropertyLinkDefinition->nameColumn]));
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::name::set(System::String^  value) {
        this[this->tablePropertyLinkDefinition->nameColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyLinkDefinitionRow::widget::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyLinkDefinition->widgetColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'widget\' in table \'PropertyLinkDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::widget::set(System::String^  value) {
        this[this->tablePropertyLinkDefinition->widgetColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyLinkDefinitionRow::targetProperty::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyLinkDefinition->targetPropertyColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'targetProperty\' in table \'PropertyLinkDefinition\' is DBNull" 
L".", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::targetProperty::set(System::String^  value) {
        this[this->tablePropertyLinkDefinition->targetPropertyColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyLinkDefinitionRow::initialValue::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyLinkDefinition->initialValueColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'initialValue\' in table \'PropertyLinkDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::initialValue::set(System::String^  value) {
        this[this->tablePropertyLinkDefinition->initialValueColumn] = value;
    }
    
    inline System::Boolean NewDataSet::PropertyLinkDefinitionRow::layoutOnWrite::get() {
        try {
            return (cli::safe_cast<::System::Boolean >(this[this->tablePropertyLinkDefinition->layoutOnWriteColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'layoutOnWrite\' in table \'PropertyLinkDefinition\' is DBNull." 
L"", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::layoutOnWrite::set(System::Boolean value) {
        this[this->tablePropertyLinkDefinition->layoutOnWriteColumn] = value;
    }
    
    inline System::Boolean NewDataSet::PropertyLinkDefinitionRow::redrawOnWrite::get() {
        try {
            return (cli::safe_cast<::System::Boolean >(this[this->tablePropertyLinkDefinition->redrawOnWriteColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'redrawOnWrite\' in table \'PropertyLinkDefinition\' is DBNull." 
L"", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::redrawOnWrite::set(System::Boolean value) {
        this[this->tablePropertyLinkDefinition->redrawOnWriteColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyLinkDefinitionRow::fireEvent::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyLinkDefinition->fireEventColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'fireEvent\' in table \'PropertyLinkDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::fireEvent::set(System::String^  value) {
        this[this->tablePropertyLinkDefinition->fireEventColumn] = value;
    }
    
    inline System::Int32 NewDataSet::PropertyLinkDefinitionRow::PropertyLinkDefinition_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablePropertyLinkDefinition->PropertyLinkDefinition_IdColumn]));
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::PropertyLinkDefinition_Id::set(System::Int32 value) {
        this[this->tablePropertyLinkDefinition->PropertyLinkDefinition_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::PropertyLinkDefinitionRow::WidgetLook_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablePropertyLinkDefinition->WidgetLook_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'WidgetLook_Id\' in table \'PropertyLinkDefinition\' is DBNull." 
L"", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tablePropertyLinkDefinition->WidgetLook_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::PropertyLinkDefinitionRow::WidgetLookRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->GetParentRow(this->Table->ParentRelations[L"WidgetLook_PropertyLinkDefinition"])));
    }
    inline System::Void NewDataSet::PropertyLinkDefinitionRow::WidgetLookRow::set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"WidgetLook_PropertyLinkDefinition"]);
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkDefinitionRow::IstypeNull() {
        return this->IsNull(this->tablePropertyLinkDefinition->typeColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionRow::SettypeNull() {
        this[this->tablePropertyLinkDefinition->typeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkDefinitionRow::IswidgetNull() {
        return this->IsNull(this->tablePropertyLinkDefinition->widgetColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionRow::SetwidgetNull() {
        this[this->tablePropertyLinkDefinition->widgetColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkDefinitionRow::IstargetPropertyNull() {
        return this->IsNull(this->tablePropertyLinkDefinition->targetPropertyColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionRow::SettargetPropertyNull() {
        this[this->tablePropertyLinkDefinition->targetPropertyColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkDefinitionRow::IsinitialValueNull() {
        return this->IsNull(this->tablePropertyLinkDefinition->initialValueColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionRow::SetinitialValueNull() {
        this[this->tablePropertyLinkDefinition->initialValueColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkDefinitionRow::IslayoutOnWriteNull() {
        return this->IsNull(this->tablePropertyLinkDefinition->layoutOnWriteColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionRow::SetlayoutOnWriteNull() {
        this[this->tablePropertyLinkDefinition->layoutOnWriteColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkDefinitionRow::IsredrawOnWriteNull() {
        return this->IsNull(this->tablePropertyLinkDefinition->redrawOnWriteColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionRow::SetredrawOnWriteNull() {
        this[this->tablePropertyLinkDefinition->redrawOnWriteColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkDefinitionRow::IsfireEventNull() {
        return this->IsNull(this->tablePropertyLinkDefinition->fireEventColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionRow::SetfireEventNull() {
        this[this->tablePropertyLinkDefinition->fireEventColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkDefinitionRow::IsWidgetLook_IdNull() {
        return this->IsNull(this->tablePropertyLinkDefinition->WidgetLook_IdColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkDefinitionRow::SetWidgetLook_IdNull() {
        this[this->tablePropertyLinkDefinition->WidgetLook_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >^  NewDataSet::PropertyLinkDefinitionRow::GetPropertyLinkTargetRows() {
        if (this->Table->ChildRelations[L"PropertyLinkDefinition_PropertyLinkTarget"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"PropertyLinkDefinition_PropertyLinkTarget"])));
        }
    }
    
    
    inline NewDataSet::PropertyLinkTargetRow::PropertyLinkTargetRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablePropertyLinkTarget = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkTargetDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::PropertyLinkTargetRow::widget::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tablePropertyLinkTarget->widgetColumn]));
    }
    inline System::Void NewDataSet::PropertyLinkTargetRow::widget::set(System::String^  value) {
        this[this->tablePropertyLinkTarget->widgetColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyLinkTargetRow::_property::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyLinkTarget->_propertyColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'property\' in table \'PropertyLinkTarget\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkTargetRow::_property::set(System::String^  value) {
        this[this->tablePropertyLinkTarget->_propertyColumn] = value;
    }
    
    inline System::Int32 NewDataSet::PropertyLinkTargetRow::PropertyLinkDefinition_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablePropertyLinkTarget->PropertyLinkDefinition_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'PropertyLinkDefinition_Id\' in table \'PropertyLinkTarget\' is" 
L" DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyLinkTargetRow::PropertyLinkDefinition_Id::set(System::Int32 value) {
        this[this->tablePropertyLinkTarget->PropertyLinkDefinition_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  NewDataSet::PropertyLinkTargetRow::PropertyLinkDefinitionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"PropertyLinkDefinition_PropertyLinkTarget"])));
    }
    inline System::Void NewDataSet::PropertyLinkTargetRow::PropertyLinkDefinitionRow::set(NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"PropertyLinkDefinition_PropertyLinkTarget"]);
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkTargetRow::Is_propertyNull() {
        return this->IsNull(this->tablePropertyLinkTarget->_propertyColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetRow::Set_propertyNull() {
        this[this->tablePropertyLinkTarget->_propertyColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyLinkTargetRow::IsPropertyLinkDefinition_IdNull() {
        return this->IsNull(this->tablePropertyLinkTarget->PropertyLinkDefinition_IdColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyLinkTargetRow::SetPropertyLinkDefinition_IdNull() {
        this[this->tablePropertyLinkTarget->PropertyLinkDefinition_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::PropertyRow::PropertyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::PropertyRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableProperty->nameColumn]));
    }
    inline System::Void NewDataSet::PropertyRow::name::set(System::String^  value) {
        this[this->tableProperty->nameColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyRow::_value::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableProperty->_valueColumn]));
    }
    inline System::Void NewDataSet::PropertyRow::_value::set(System::String^  value) {
        this[this->tableProperty->_valueColumn] = value;
    }
    
    inline System::Int32 NewDataSet::PropertyRow::Child_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableProperty->Child_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Child_Id\' in table \'Property\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyRow::Child_Id::set(System::Int32 value) {
        this[this->tableProperty->Child_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::PropertyRow::WidgetLook_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableProperty->WidgetLook_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'WidgetLook_Id\' in table \'Property\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tableProperty->WidgetLook_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::ChildRow^  NewDataSet::PropertyRow::ChildRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Child_Property"])));
    }
    inline System::Void NewDataSet::PropertyRow::ChildRow::set(NinjaPlatformer::NewDataSet::ChildRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Child_Property"]);
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::PropertyRow::WidgetLookRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->GetParentRow(this->Table->ParentRelations[L"WidgetLook_Property"])));
    }
    inline System::Void NewDataSet::PropertyRow::WidgetLookRow::set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"WidgetLook_Property"]);
    }
    
    inline ::System::Boolean NewDataSet::PropertyRow::IsChild_IdNull() {
        return this->IsNull(this->tableProperty->Child_IdColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyRow::SetChild_IdNull() {
        this[this->tableProperty->Child_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyRow::IsWidgetLook_IdNull() {
        return this->IsNull(this->tableProperty->WidgetLook_IdColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyRow::SetWidgetLook_IdNull() {
        this[this->tableProperty->WidgetLook_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::NamedAreaRow::NamedAreaRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableNamedArea = (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::NamedAreaRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableNamedArea->nameColumn]));
    }
    inline System::Void NewDataSet::NamedAreaRow::name::set(System::String^  value) {
        this[this->tableNamedArea->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::NamedAreaRow::NamedArea_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableNamedArea->NamedArea_IdColumn]));
    }
    inline System::Void NewDataSet::NamedAreaRow::NamedArea_Id::set(System::Int32 value) {
        this[this->tableNamedArea->NamedArea_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::NamedAreaRow::WidgetLook_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableNamedArea->WidgetLook_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'WidgetLook_Id\' in table \'NamedArea\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::NamedAreaRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tableNamedArea->WidgetLook_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::NamedAreaRow::WidgetLookRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->GetParentRow(this->Table->ParentRelations[L"WidgetLook_NamedArea"])));
    }
    inline System::Void NewDataSet::NamedAreaRow::WidgetLookRow::set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"WidgetLook_NamedArea"]);
    }
    
    inline ::System::Boolean NewDataSet::NamedAreaRow::IsWidgetLook_IdNull() {
        return this->IsNull(this->tableNamedArea->WidgetLook_IdColumn);
    }
    
    inline ::System::Void NewDataSet::NamedAreaRow::SetWidgetLook_IdNull() {
        this[this->tableNamedArea->WidgetLook_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  NewDataSet::NamedAreaRow::GetAreaRows() {
        if (this->Table->ChildRelations[L"NamedArea_Area"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"NamedArea_Area"])));
        }
    }
    
    
    inline NewDataSet::AreaRow::AreaRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableArea = (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::AreaRow::Area_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableArea->Area_IdColumn]));
    }
    inline System::Void NewDataSet::AreaRow::Area_Id::set(System::Int32 value) {
        this[this->tableArea->Area_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AreaRow::NamedArea_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableArea->NamedArea_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'NamedArea_Id\' in table \'Area\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AreaRow::NamedArea_Id::set(System::Int32 value) {
        this[this->tableArea->NamedArea_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AreaRow::Child_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableArea->Child_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Child_Id\' in table \'Area\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AreaRow::Child_Id::set(System::Int32 value) {
        this[this->tableArea->Child_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AreaRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableArea->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'Area\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AreaRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableArea->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AreaRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableArea->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'Area\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AreaRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableArea->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AreaRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableArea->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'Area\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AreaRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableArea->TextComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaRow^  NewDataSet::AreaRow::NamedAreaRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaRow^  >(this->GetParentRow(this->Table->ParentRelations[L"NamedArea_Area"])));
    }
    inline System::Void NewDataSet::AreaRow::NamedAreaRow::set(NinjaPlatformer::NewDataSet::NamedAreaRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"NamedArea_Area"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ChildRow^  NewDataSet::AreaRow::ChildRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Child_Area"])));
    }
    inline System::Void NewDataSet::AreaRow::ChildRow::set(NinjaPlatformer::NewDataSet::ChildRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Child_Area"]);
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::AreaRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_Area"])));
    }
    inline System::Void NewDataSet::AreaRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_Area"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::AreaRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_Area"])));
    }
    inline System::Void NewDataSet::AreaRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_Area"]);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::AreaRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_Area"])));
    }
    inline System::Void NewDataSet::AreaRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_Area"]);
    }
    
    inline ::System::Boolean NewDataSet::AreaRow::IsNamedArea_IdNull() {
        return this->IsNull(this->tableArea->NamedArea_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AreaRow::SetNamedArea_IdNull() {
        this[this->tableArea->NamedArea_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::AreaRow::IsChild_IdNull() {
        return this->IsNull(this->tableArea->Child_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AreaRow::SetChild_IdNull() {
        this[this->tableArea->Child_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::AreaRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableArea->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AreaRow::SetFrameComponent_IdNull() {
        this[this->tableArea->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::AreaRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableArea->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AreaRow::SetImageryComponent_IdNull() {
        this[this->tableArea->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::AreaRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableArea->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AreaRow::SetTextComponent_IdNull() {
        this[this->tableArea->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::DimRow^  >^  NewDataSet::AreaRow::GetDimRows() {
        if (this->Table->ChildRelations[L"Area_Dim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::DimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::DimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Area_Dim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AreaPropertyRow^  >^  NewDataSet::AreaRow::GetAreaPropertyRows() {
        if (this->Table->ChildRelations[L"Area_AreaProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AreaPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AreaPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Area_AreaProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >^  NewDataSet::AreaRow::GetNamedAreaSourceRows() {
        if (this->Table->ChildRelations[L"Area_NamedAreaSource"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Area_NamedAreaSource"])));
        }
    }
    
    
    inline NewDataSet::DimRow::DimRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::DimDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::DimRow::type::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableDim->typeColumn]));
    }
    inline System::Void NewDataSet::DimRow::type::set(System::String^  value) {
        this[this->tableDim->typeColumn] = value;
    }
    
    inline System::Int32 NewDataSet::DimRow::Dim_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableDim->Dim_IdColumn]));
    }
    inline System::Void NewDataSet::DimRow::Dim_Id::set(System::Int32 value) {
        this[this->tableDim->Dim_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::DimRow::Area_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableDim->Area_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Area_Id\' in table \'Dim\' is DBNull.", e));
        }
    }
    inline System::Void NewDataSet::DimRow::Area_Id::set(System::Int32 value) {
        this[this->tableDim->Area_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaRow^  NewDataSet::DimRow::AreaRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Area_Dim"])));
    }
    inline System::Void NewDataSet::DimRow::AreaRow::set(NinjaPlatformer::NewDataSet::AreaRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Area_Dim"]);
    }
    
    inline ::System::Boolean NewDataSet::DimRow::IsArea_IdNull() {
        return this->IsNull(this->tableDim->Area_IdColumn);
    }
    
    inline ::System::Void NewDataSet::DimRow::SetArea_IdNull() {
        this[this->tableDim->Area_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::UnifiedDimRow^  >^  NewDataSet::DimRow::GetUnifiedDimRows() {
        if (this->Table->ChildRelations[L"Dim_UnifiedDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::UnifiedDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::UnifiedDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Dim_UnifiedDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >^  NewDataSet::DimRow::GetAbsoluteDimRows() {
        if (this->Table->ChildRelations[L"Dim_AbsoluteDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Dim_AbsoluteDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImageDimRow^  >^  NewDataSet::DimRow::GetImageDimRows() {
        if (this->Table->ChildRelations[L"Dim_ImageDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImageDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImageDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Dim_ImageDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >^  NewDataSet::DimRow::GetImagePropertyDimRows() {
        if (this->Table->ChildRelations[L"Dim_ImagePropertyDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Dim_ImagePropertyDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::WidgetDimRow^  >^  NewDataSet::DimRow::GetWidgetDimRows() {
        if (this->Table->ChildRelations[L"Dim_WidgetDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::WidgetDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::WidgetDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Dim_WidgetDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::FontDimRow^  >^  NewDataSet::DimRow::GetFontDimRows() {
        if (this->Table->ChildRelations[L"Dim_FontDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::FontDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::FontDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Dim_FontDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::PropertyDimRow^  >^  NewDataSet::DimRow::GetPropertyDimRows() {
        if (this->Table->ChildRelations[L"Dim_PropertyDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::PropertyDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::PropertyDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Dim_PropertyDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::OperatorDimRow^  >^  NewDataSet::DimRow::GetOperatorDimRows() {
        if (this->Table->ChildRelations[L"Dim_OperatorDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::OperatorDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::OperatorDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Dim_OperatorDim"])));
        }
    }
    
    
    inline NewDataSet::UnifiedDimRow::UnifiedDimRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableUnifiedDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::UnifiedDimDataTable^  >(this->Table));
    }
    
    inline System::Decimal NewDataSet::UnifiedDimRow::scale::get() {
        try {
            return (cli::safe_cast<::System::Decimal >(this[this->tableUnifiedDim->scaleColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'scale\' in table \'UnifiedDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::UnifiedDimRow::scale::set(System::Decimal value) {
        this[this->tableUnifiedDim->scaleColumn] = value;
    }
    
    inline System::Int64 NewDataSet::UnifiedDimRow::offset::get() {
        try {
            return (cli::safe_cast<::System::Int64 >(this[this->tableUnifiedDim->offsetColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'offset\' in table \'UnifiedDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::UnifiedDimRow::offset::set(System::Int64 value) {
        this[this->tableUnifiedDim->offsetColumn] = value;
    }
    
    inline System::String^  NewDataSet::UnifiedDimRow::type::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableUnifiedDim->typeColumn]));
    }
    inline System::Void NewDataSet::UnifiedDimRow::type::set(System::String^  value) {
        this[this->tableUnifiedDim->typeColumn] = value;
    }
    
    inline System::Int32 NewDataSet::UnifiedDimRow::OperatorDim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableUnifiedDim->OperatorDim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'OperatorDim_Id\' in table \'UnifiedDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::UnifiedDimRow::OperatorDim_Id::set(System::Int32 value) {
        this[this->tableUnifiedDim->OperatorDim_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::UnifiedDimRow::Dim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableUnifiedDim->Dim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Dim_Id\' in table \'UnifiedDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::UnifiedDimRow::Dim_Id::set(System::Int32 value) {
        this[this->tableUnifiedDim->Dim_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::UnifiedDimRow::OperatorDimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"OperatorDim_UnifiedDim"])));
    }
    inline System::Void NewDataSet::UnifiedDimRow::OperatorDimRow::set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"OperatorDim_UnifiedDim"]);
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::UnifiedDimRow::DimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Dim_UnifiedDim"])));
    }
    inline System::Void NewDataSet::UnifiedDimRow::DimRow::set(NinjaPlatformer::NewDataSet::DimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Dim_UnifiedDim"]);
    }
    
    inline ::System::Boolean NewDataSet::UnifiedDimRow::IsscaleNull() {
        return this->IsNull(this->tableUnifiedDim->scaleColumn);
    }
    
    inline ::System::Void NewDataSet::UnifiedDimRow::SetscaleNull() {
        this[this->tableUnifiedDim->scaleColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::UnifiedDimRow::IsoffsetNull() {
        return this->IsNull(this->tableUnifiedDim->offsetColumn);
    }
    
    inline ::System::Void NewDataSet::UnifiedDimRow::SetoffsetNull() {
        this[this->tableUnifiedDim->offsetColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::UnifiedDimRow::IsOperatorDim_IdNull() {
        return this->IsNull(this->tableUnifiedDim->OperatorDim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::UnifiedDimRow::SetOperatorDim_IdNull() {
        this[this->tableUnifiedDim->OperatorDim_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::UnifiedDimRow::IsDim_IdNull() {
        return this->IsNull(this->tableUnifiedDim->Dim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::UnifiedDimRow::SetDim_IdNull() {
        this[this->tableUnifiedDim->Dim_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::AbsoluteDimRow::AbsoluteDimRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableAbsoluteDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::AbsoluteDimDataTable^  >(this->Table));
    }
    
    inline System::Decimal NewDataSet::AbsoluteDimRow::_value::get() {
        try {
            return (cli::safe_cast<::System::Decimal >(this[this->tableAbsoluteDim->_valueColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'value\' in table \'AbsoluteDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AbsoluteDimRow::_value::set(System::Decimal value) {
        this[this->tableAbsoluteDim->_valueColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AbsoluteDimRow::OperatorDim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableAbsoluteDim->OperatorDim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'OperatorDim_Id\' in table \'AbsoluteDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AbsoluteDimRow::OperatorDim_Id::set(System::Int32 value) {
        this[this->tableAbsoluteDim->OperatorDim_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AbsoluteDimRow::Dim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableAbsoluteDim->Dim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Dim_Id\' in table \'AbsoluteDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AbsoluteDimRow::Dim_Id::set(System::Int32 value) {
        this[this->tableAbsoluteDim->Dim_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::AbsoluteDimRow::OperatorDimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"OperatorDim_AbsoluteDim"])));
    }
    inline System::Void NewDataSet::AbsoluteDimRow::OperatorDimRow::set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"OperatorDim_AbsoluteDim"]);
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::AbsoluteDimRow::DimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Dim_AbsoluteDim"])));
    }
    inline System::Void NewDataSet::AbsoluteDimRow::DimRow::set(NinjaPlatformer::NewDataSet::DimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Dim_AbsoluteDim"]);
    }
    
    inline ::System::Boolean NewDataSet::AbsoluteDimRow::Is_valueNull() {
        return this->IsNull(this->tableAbsoluteDim->_valueColumn);
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimRow::Set_valueNull() {
        this[this->tableAbsoluteDim->_valueColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::AbsoluteDimRow::IsOperatorDim_IdNull() {
        return this->IsNull(this->tableAbsoluteDim->OperatorDim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimRow::SetOperatorDim_IdNull() {
        this[this->tableAbsoluteDim->OperatorDim_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::AbsoluteDimRow::IsDim_IdNull() {
        return this->IsNull(this->tableAbsoluteDim->Dim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AbsoluteDimRow::SetDim_IdNull() {
        this[this->tableAbsoluteDim->Dim_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ImageDimRow::ImageDimRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableImageDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDimDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ImageDimRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableImageDim->nameColumn]));
    }
    inline System::Void NewDataSet::ImageDimRow::name::set(System::String^  value) {
        this[this->tableImageDim->nameColumn] = value;
    }
    
    inline System::String^  NewDataSet::ImageDimRow::dimension::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableImageDim->dimensionColumn]));
    }
    inline System::Void NewDataSet::ImageDimRow::dimension::set(System::String^  value) {
        this[this->tableImageDim->dimensionColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImageDimRow::OperatorDim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImageDim->OperatorDim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'OperatorDim_Id\' in table \'ImageDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImageDimRow::OperatorDim_Id::set(System::Int32 value) {
        this[this->tableImageDim->OperatorDim_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImageDimRow::Dim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImageDim->Dim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Dim_Id\' in table \'ImageDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImageDimRow::Dim_Id::set(System::Int32 value) {
        this[this->tableImageDim->Dim_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::ImageDimRow::OperatorDimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"OperatorDim_ImageDim"])));
    }
    inline System::Void NewDataSet::ImageDimRow::OperatorDimRow::set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"OperatorDim_ImageDim"]);
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::ImageDimRow::DimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Dim_ImageDim"])));
    }
    inline System::Void NewDataSet::ImageDimRow::DimRow::set(NinjaPlatformer::NewDataSet::DimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Dim_ImageDim"]);
    }
    
    inline ::System::Boolean NewDataSet::ImageDimRow::IsOperatorDim_IdNull() {
        return this->IsNull(this->tableImageDim->OperatorDim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImageDimRow::SetOperatorDim_IdNull() {
        this[this->tableImageDim->OperatorDim_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ImageDimRow::IsDim_IdNull() {
        return this->IsNull(this->tableImageDim->Dim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImageDimRow::SetDim_IdNull() {
        this[this->tableImageDim->Dim_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ImagePropertyDimRow::ImagePropertyDimRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableImagePropertyDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDimDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ImagePropertyDimRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableImagePropertyDim->nameColumn]));
    }
    inline System::Void NewDataSet::ImagePropertyDimRow::name::set(System::String^  value) {
        this[this->tableImagePropertyDim->nameColumn] = value;
    }
    
    inline System::String^  NewDataSet::ImagePropertyDimRow::dimension::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableImagePropertyDim->dimensionColumn]));
    }
    inline System::Void NewDataSet::ImagePropertyDimRow::dimension::set(System::String^  value) {
        this[this->tableImagePropertyDim->dimensionColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImagePropertyDimRow::OperatorDim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImagePropertyDim->OperatorDim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'OperatorDim_Id\' in table \'ImagePropertyDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImagePropertyDimRow::OperatorDim_Id::set(System::Int32 value) {
        this[this->tableImagePropertyDim->OperatorDim_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImagePropertyDimRow::Dim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImagePropertyDim->Dim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Dim_Id\' in table \'ImagePropertyDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImagePropertyDimRow::Dim_Id::set(System::Int32 value) {
        this[this->tableImagePropertyDim->Dim_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::ImagePropertyDimRow::OperatorDimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"OperatorDim_ImagePropertyDim"])));
    }
    inline System::Void NewDataSet::ImagePropertyDimRow::OperatorDimRow::set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"OperatorDim_ImagePropertyDim"]);
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::ImagePropertyDimRow::DimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Dim_ImagePropertyDim"])));
    }
    inline System::Void NewDataSet::ImagePropertyDimRow::DimRow::set(NinjaPlatformer::NewDataSet::DimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Dim_ImagePropertyDim"]);
    }
    
    inline ::System::Boolean NewDataSet::ImagePropertyDimRow::IsOperatorDim_IdNull() {
        return this->IsNull(this->tableImagePropertyDim->OperatorDim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimRow::SetOperatorDim_IdNull() {
        this[this->tableImagePropertyDim->OperatorDim_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ImagePropertyDimRow::IsDim_IdNull() {
        return this->IsNull(this->tableImagePropertyDim->Dim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImagePropertyDimRow::SetDim_IdNull() {
        this[this->tableImagePropertyDim->Dim_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::WidgetDimRow::WidgetDimRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableWidgetDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetDimDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::WidgetDimRow::widget::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableWidgetDim->widgetColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'widget\' in table \'WidgetDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::WidgetDimRow::widget::set(System::String^  value) {
        this[this->tableWidgetDim->widgetColumn] = value;
    }
    
    inline System::String^  NewDataSet::WidgetDimRow::dimension::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableWidgetDim->dimensionColumn]));
    }
    inline System::Void NewDataSet::WidgetDimRow::dimension::set(System::String^  value) {
        this[this->tableWidgetDim->dimensionColumn] = value;
    }
    
    inline System::Int32 NewDataSet::WidgetDimRow::OperatorDim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableWidgetDim->OperatorDim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'OperatorDim_Id\' in table \'WidgetDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::WidgetDimRow::OperatorDim_Id::set(System::Int32 value) {
        this[this->tableWidgetDim->OperatorDim_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::WidgetDimRow::Dim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableWidgetDim->Dim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Dim_Id\' in table \'WidgetDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::WidgetDimRow::Dim_Id::set(System::Int32 value) {
        this[this->tableWidgetDim->Dim_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::WidgetDimRow::OperatorDimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"OperatorDim_WidgetDim"])));
    }
    inline System::Void NewDataSet::WidgetDimRow::OperatorDimRow::set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"OperatorDim_WidgetDim"]);
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::WidgetDimRow::DimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Dim_WidgetDim"])));
    }
    inline System::Void NewDataSet::WidgetDimRow::DimRow::set(NinjaPlatformer::NewDataSet::DimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Dim_WidgetDim"]);
    }
    
    inline ::System::Boolean NewDataSet::WidgetDimRow::IswidgetNull() {
        return this->IsNull(this->tableWidgetDim->widgetColumn);
    }
    
    inline ::System::Void NewDataSet::WidgetDimRow::SetwidgetNull() {
        this[this->tableWidgetDim->widgetColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::WidgetDimRow::IsOperatorDim_IdNull() {
        return this->IsNull(this->tableWidgetDim->OperatorDim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::WidgetDimRow::SetOperatorDim_IdNull() {
        this[this->tableWidgetDim->OperatorDim_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::WidgetDimRow::IsDim_IdNull() {
        return this->IsNull(this->tableWidgetDim->Dim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::WidgetDimRow::SetDim_IdNull() {
        this[this->tableWidgetDim->Dim_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::FontDimRow::FontDimRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableFontDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::FontDimDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::FontDimRow::widget::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableFontDim->widgetColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'widget\' in table \'FontDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::FontDimRow::widget::set(System::String^  value) {
        this[this->tableFontDim->widgetColumn] = value;
    }
    
    inline System::String^  NewDataSet::FontDimRow::font::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableFontDim->fontColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'font\' in table \'FontDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::FontDimRow::font::set(System::String^  value) {
        this[this->tableFontDim->fontColumn] = value;
    }
    
    inline System::String^  NewDataSet::FontDimRow::string::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableFontDim->stringColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'string\' in table \'FontDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::FontDimRow::string::set(System::String^  value) {
        this[this->tableFontDim->stringColumn] = value;
    }
    
    inline System::String^  NewDataSet::FontDimRow::type::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableFontDim->typeColumn]));
    }
    inline System::Void NewDataSet::FontDimRow::type::set(System::String^  value) {
        this[this->tableFontDim->typeColumn] = value;
    }
    
    inline System::Decimal NewDataSet::FontDimRow::padding::get() {
        try {
            return (cli::safe_cast<::System::Decimal >(this[this->tableFontDim->paddingColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'padding\' in table \'FontDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::FontDimRow::padding::set(System::Decimal value) {
        this[this->tableFontDim->paddingColumn] = value;
    }
    
    inline System::Int32 NewDataSet::FontDimRow::OperatorDim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableFontDim->OperatorDim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'OperatorDim_Id\' in table \'FontDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::FontDimRow::OperatorDim_Id::set(System::Int32 value) {
        this[this->tableFontDim->OperatorDim_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::FontDimRow::Dim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableFontDim->Dim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Dim_Id\' in table \'FontDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::FontDimRow::Dim_Id::set(System::Int32 value) {
        this[this->tableFontDim->Dim_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::FontDimRow::OperatorDimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"OperatorDim_FontDim"])));
    }
    inline System::Void NewDataSet::FontDimRow::OperatorDimRow::set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"OperatorDim_FontDim"]);
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::FontDimRow::DimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Dim_FontDim"])));
    }
    inline System::Void NewDataSet::FontDimRow::DimRow::set(NinjaPlatformer::NewDataSet::DimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Dim_FontDim"]);
    }
    
    inline ::System::Boolean NewDataSet::FontDimRow::IswidgetNull() {
        return this->IsNull(this->tableFontDim->widgetColumn);
    }
    
    inline ::System::Void NewDataSet::FontDimRow::SetwidgetNull() {
        this[this->tableFontDim->widgetColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::FontDimRow::IsfontNull() {
        return this->IsNull(this->tableFontDim->fontColumn);
    }
    
    inline ::System::Void NewDataSet::FontDimRow::SetfontNull() {
        this[this->tableFontDim->fontColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::FontDimRow::IsstringNull() {
        return this->IsNull(this->tableFontDim->stringColumn);
    }
    
    inline ::System::Void NewDataSet::FontDimRow::SetstringNull() {
        this[this->tableFontDim->stringColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::FontDimRow::IspaddingNull() {
        return this->IsNull(this->tableFontDim->paddingColumn);
    }
    
    inline ::System::Void NewDataSet::FontDimRow::SetpaddingNull() {
        this[this->tableFontDim->paddingColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::FontDimRow::IsOperatorDim_IdNull() {
        return this->IsNull(this->tableFontDim->OperatorDim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::FontDimRow::SetOperatorDim_IdNull() {
        this[this->tableFontDim->OperatorDim_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::FontDimRow::IsDim_IdNull() {
        return this->IsNull(this->tableFontDim->Dim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::FontDimRow::SetDim_IdNull() {
        this[this->tableFontDim->Dim_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::PropertyDimRow::PropertyDimRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablePropertyDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::PropertyDimDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::PropertyDimRow::widget::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyDim->widgetColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'widget\' in table \'PropertyDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDimRow::widget::set(System::String^  value) {
        this[this->tablePropertyDim->widgetColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyDimRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tablePropertyDim->nameColumn]));
    }
    inline System::Void NewDataSet::PropertyDimRow::name::set(System::String^  value) {
        this[this->tablePropertyDim->nameColumn] = value;
    }
    
    inline System::String^  NewDataSet::PropertyDimRow::type::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablePropertyDim->typeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'type\' in table \'PropertyDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDimRow::type::set(System::String^  value) {
        this[this->tablePropertyDim->typeColumn] = value;
    }
    
    inline System::Int32 NewDataSet::PropertyDimRow::OperatorDim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablePropertyDim->OperatorDim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'OperatorDim_Id\' in table \'PropertyDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDimRow::OperatorDim_Id::set(System::Int32 value) {
        this[this->tablePropertyDim->OperatorDim_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::PropertyDimRow::Dim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablePropertyDim->Dim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Dim_Id\' in table \'PropertyDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::PropertyDimRow::Dim_Id::set(System::Int32 value) {
        this[this->tablePropertyDim->Dim_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::PropertyDimRow::OperatorDimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"OperatorDim_PropertyDim"])));
    }
    inline System::Void NewDataSet::PropertyDimRow::OperatorDimRow::set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"OperatorDim_PropertyDim"]);
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::PropertyDimRow::DimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Dim_PropertyDim"])));
    }
    inline System::Void NewDataSet::PropertyDimRow::DimRow::set(NinjaPlatformer::NewDataSet::DimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Dim_PropertyDim"]);
    }
    
    inline ::System::Boolean NewDataSet::PropertyDimRow::IswidgetNull() {
        return this->IsNull(this->tablePropertyDim->widgetColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDimRow::SetwidgetNull() {
        this[this->tablePropertyDim->widgetColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyDimRow::IstypeNull() {
        return this->IsNull(this->tablePropertyDim->typeColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDimRow::SettypeNull() {
        this[this->tablePropertyDim->typeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyDimRow::IsOperatorDim_IdNull() {
        return this->IsNull(this->tablePropertyDim->OperatorDim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDimRow::SetOperatorDim_IdNull() {
        this[this->tablePropertyDim->OperatorDim_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::PropertyDimRow::IsDim_IdNull() {
        return this->IsNull(this->tablePropertyDim->Dim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::PropertyDimRow::SetDim_IdNull() {
        this[this->tablePropertyDim->Dim_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::OperatorDimRow::OperatorDimRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableOperatorDim = (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::OperatorDimRow::op::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableOperatorDim->opColumn]));
    }
    inline System::Void NewDataSet::OperatorDimRow::op::set(System::String^  value) {
        this[this->tableOperatorDim->opColumn] = value;
    }
    
    inline System::Int32 NewDataSet::OperatorDimRow::OperatorDim_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableOperatorDim->OperatorDim_IdColumn]));
    }
    inline System::Void NewDataSet::OperatorDimRow::OperatorDim_Id::set(System::Int32 value) {
        this[this->tableOperatorDim->OperatorDim_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::OperatorDimRow::OperatorDim_Id_0::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableOperatorDim->OperatorDim_Id_0Column]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'OperatorDim_Id_0\' in table \'OperatorDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::OperatorDimRow::OperatorDim_Id_0::set(System::Int32 value) {
        this[this->tableOperatorDim->OperatorDim_Id_0Column] = value;
    }
    
    inline System::Int32 NewDataSet::OperatorDimRow::Dim_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableOperatorDim->Dim_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Dim_Id\' in table \'OperatorDim\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::OperatorDimRow::Dim_Id::set(System::Int32 value) {
        this[this->tableOperatorDim->Dim_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::OperatorDimRow::OperatorDimRowParent::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::OperatorDimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"OperatorDim_OperatorDim"])));
    }
    inline System::Void NewDataSet::OperatorDimRow::OperatorDimRowParent::set(NinjaPlatformer::NewDataSet::OperatorDimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"OperatorDim_OperatorDim"]);
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::OperatorDimRow::DimRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::DimRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Dim_OperatorDim"])));
    }
    inline System::Void NewDataSet::OperatorDimRow::DimRow::set(NinjaPlatformer::NewDataSet::DimRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Dim_OperatorDim"]);
    }
    
    inline ::System::Boolean NewDataSet::OperatorDimRow::IsOperatorDim_Id_0Null() {
        return this->IsNull(this->tableOperatorDim->OperatorDim_Id_0Column);
    }
    
    inline ::System::Void NewDataSet::OperatorDimRow::SetOperatorDim_Id_0Null() {
        this[this->tableOperatorDim->OperatorDim_Id_0Column] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::OperatorDimRow::IsDim_IdNull() {
        return this->IsNull(this->tableOperatorDim->Dim_IdColumn);
    }
    
    inline ::System::Void NewDataSet::OperatorDimRow::SetDim_IdNull() {
        this[this->tableOperatorDim->Dim_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::UnifiedDimRow^  >^  NewDataSet::OperatorDimRow::GetUnifiedDimRows() {
        if (this->Table->ChildRelations[L"OperatorDim_UnifiedDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::UnifiedDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::UnifiedDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"OperatorDim_UnifiedDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >^  NewDataSet::OperatorDimRow::GetAbsoluteDimRows() {
        if (this->Table->ChildRelations[L"OperatorDim_AbsoluteDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AbsoluteDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"OperatorDim_AbsoluteDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImageDimRow^  >^  NewDataSet::OperatorDimRow::GetImageDimRows() {
        if (this->Table->ChildRelations[L"OperatorDim_ImageDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImageDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImageDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"OperatorDim_ImageDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >^  NewDataSet::OperatorDimRow::GetImagePropertyDimRows() {
        if (this->Table->ChildRelations[L"OperatorDim_ImagePropertyDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"OperatorDim_ImagePropertyDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::WidgetDimRow^  >^  NewDataSet::OperatorDimRow::GetWidgetDimRows() {
        if (this->Table->ChildRelations[L"OperatorDim_WidgetDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::WidgetDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::WidgetDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"OperatorDim_WidgetDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::FontDimRow^  >^  NewDataSet::OperatorDimRow::GetFontDimRows() {
        if (this->Table->ChildRelations[L"OperatorDim_FontDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::FontDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::FontDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"OperatorDim_FontDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::PropertyDimRow^  >^  NewDataSet::OperatorDimRow::GetPropertyDimRows() {
        if (this->Table->ChildRelations[L"OperatorDim_PropertyDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::PropertyDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::PropertyDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"OperatorDim_PropertyDim"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::OperatorDimRow^  >^  NewDataSet::OperatorDimRow::GetOperatorDimRows() {
        if (this->Table->ChildRelations[L"OperatorDim_OperatorDim"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::OperatorDimRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::OperatorDimRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"OperatorDim_OperatorDim"])));
        }
    }
    
    
    inline NewDataSet::AreaPropertyRow::AreaPropertyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableAreaProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaPropertyDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::AreaPropertyRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableAreaProperty->nameColumn]));
    }
    inline System::Void NewDataSet::AreaPropertyRow::name::set(System::String^  value) {
        this[this->tableAreaProperty->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AreaPropertyRow::Area_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableAreaProperty->Area_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Area_Id\' in table \'AreaProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AreaPropertyRow::Area_Id::set(System::Int32 value) {
        this[this->tableAreaProperty->Area_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaRow^  NewDataSet::AreaPropertyRow::AreaRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Area_AreaProperty"])));
    }
    inline System::Void NewDataSet::AreaPropertyRow::AreaRow::set(NinjaPlatformer::NewDataSet::AreaRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Area_AreaProperty"]);
    }
    
    inline ::System::Boolean NewDataSet::AreaPropertyRow::IsArea_IdNull() {
        return this->IsNull(this->tableAreaProperty->Area_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AreaPropertyRow::SetArea_IdNull() {
        this[this->tableAreaProperty->Area_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::NamedAreaSourceRow::NamedAreaSourceRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableNamedAreaSource = (cli::safe_cast<NinjaPlatformer::NewDataSet::NamedAreaSourceDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::NamedAreaSourceRow::look::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableNamedAreaSource->lookColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'look\' in table \'NamedAreaSource\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::NamedAreaSourceRow::look::set(System::String^  value) {
        this[this->tableNamedAreaSource->lookColumn] = value;
    }
    
    inline System::String^  NewDataSet::NamedAreaSourceRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableNamedAreaSource->nameColumn]));
    }
    inline System::Void NewDataSet::NamedAreaSourceRow::name::set(System::String^  value) {
        this[this->tableNamedAreaSource->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::NamedAreaSourceRow::Area_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableNamedAreaSource->Area_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Area_Id\' in table \'NamedAreaSource\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::NamedAreaSourceRow::Area_Id::set(System::Int32 value) {
        this[this->tableNamedAreaSource->Area_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaRow^  NewDataSet::NamedAreaSourceRow::AreaRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AreaRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Area_NamedAreaSource"])));
    }
    inline System::Void NewDataSet::NamedAreaSourceRow::AreaRow::set(NinjaPlatformer::NewDataSet::AreaRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Area_NamedAreaSource"]);
    }
    
    inline ::System::Boolean NewDataSet::NamedAreaSourceRow::IslookNull() {
        return this->IsNull(this->tableNamedAreaSource->lookColumn);
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceRow::SetlookNull() {
        this[this->tableNamedAreaSource->lookColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::NamedAreaSourceRow::IsArea_IdNull() {
        return this->IsNull(this->tableNamedAreaSource->Area_IdColumn);
    }
    
    inline ::System::Void NewDataSet::NamedAreaSourceRow::SetArea_IdNull() {
        this[this->tableNamedAreaSource->Area_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ChildRow::ChildRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableChild = (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ChildRow::nameSuffix::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableChild->nameSuffixColumn]));
    }
    inline System::Void NewDataSet::ChildRow::nameSuffix::set(System::String^  value) {
        this[this->tableChild->nameSuffixColumn] = value;
    }
    
    inline System::String^  NewDataSet::ChildRow::type::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableChild->typeColumn]));
    }
    inline System::Void NewDataSet::ChildRow::type::set(System::String^  value) {
        this[this->tableChild->typeColumn] = value;
    }
    
    inline System::String^  NewDataSet::ChildRow::renderer::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableChild->rendererColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'renderer\' in table \'Child\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ChildRow::renderer::set(System::String^  value) {
        this[this->tableChild->rendererColumn] = value;
    }
    
    inline System::String^  NewDataSet::ChildRow::look::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableChild->lookColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'look\' in table \'Child\' is DBNull.", e));
        }
    }
    inline System::Void NewDataSet::ChildRow::look::set(System::String^  value) {
        this[this->tableChild->lookColumn] = value;
    }
    
    inline System::Boolean NewDataSet::ChildRow::autoWindow::get() {
        try {
            return (cli::safe_cast<::System::Boolean >(this[this->tableChild->autoWindowColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'autoWindow\' in table \'Child\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ChildRow::autoWindow::set(System::Boolean value) {
        this[this->tableChild->autoWindowColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ChildRow::Child_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableChild->Child_IdColumn]));
    }
    inline System::Void NewDataSet::ChildRow::Child_Id::set(System::Int32 value) {
        this[this->tableChild->Child_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ChildRow::WidgetLook_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableChild->WidgetLook_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'WidgetLook_Id\' in table \'Child\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ChildRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tableChild->WidgetLook_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::ChildRow::WidgetLookRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->GetParentRow(this->Table->ParentRelations[L"WidgetLook_Child"])));
    }
    inline System::Void NewDataSet::ChildRow::WidgetLookRow::set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"WidgetLook_Child"]);
    }
    
    inline ::System::Boolean NewDataSet::ChildRow::IsrendererNull() {
        return this->IsNull(this->tableChild->rendererColumn);
    }
    
    inline ::System::Void NewDataSet::ChildRow::SetrendererNull() {
        this[this->tableChild->rendererColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ChildRow::IslookNull() {
        return this->IsNull(this->tableChild->lookColumn);
    }
    
    inline ::System::Void NewDataSet::ChildRow::SetlookNull() {
        this[this->tableChild->lookColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ChildRow::IsautoWindowNull() {
        return this->IsNull(this->tableChild->autoWindowColumn);
    }
    
    inline ::System::Void NewDataSet::ChildRow::SetautoWindowNull() {
        this[this->tableChild->autoWindowColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ChildRow::IsWidgetLook_IdNull() {
        return this->IsNull(this->tableChild->WidgetLook_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ChildRow::SetWidgetLook_IdNull() {
        this[this->tableChild->WidgetLook_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::EventActionRow^  >^  NewDataSet::ChildRow::GetEventActionRows() {
        if (this->Table->ChildRelations[L"Child_EventAction"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::EventActionRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::EventActionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Child_EventAction"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  NewDataSet::ChildRow::GetAreaRows() {
        if (this->Table->ChildRelations[L"Child_Area"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Child_Area"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::VertAlignmentRow^  >^  NewDataSet::ChildRow::GetVertAlignmentRows() {
        if (this->Table->ChildRelations[L"Child_VertAlignment"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::VertAlignmentRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::VertAlignmentRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Child_VertAlignment"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >^  NewDataSet::ChildRow::GetHorzAlignmentRows() {
        if (this->Table->ChildRelations[L"Child_HorzAlignment"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::HorzAlignmentRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Child_HorzAlignment"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::PropertyRow^  >^  NewDataSet::ChildRow::GetPropertyRows() {
        if (this->Table->ChildRelations[L"Child_Property"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::PropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::PropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Child_Property"])));
        }
    }
    
    
    inline NewDataSet::EventActionRow::EventActionRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableEventAction = (cli::safe_cast<NinjaPlatformer::NewDataSet::EventActionDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::EventActionRow::_event::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableEventAction->_eventColumn]));
    }
    inline System::Void NewDataSet::EventActionRow::_event::set(System::String^  value) {
        this[this->tableEventAction->_eventColumn] = value;
    }
    
    inline System::String^  NewDataSet::EventActionRow::action::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableEventAction->actionColumn]));
    }
    inline System::Void NewDataSet::EventActionRow::action::set(System::String^  value) {
        this[this->tableEventAction->actionColumn] = value;
    }
    
    inline System::Int32 NewDataSet::EventActionRow::Child_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableEventAction->Child_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Child_Id\' in table \'EventAction\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::EventActionRow::Child_Id::set(System::Int32 value) {
        this[this->tableEventAction->Child_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::ChildRow^  NewDataSet::EventActionRow::ChildRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Child_EventAction"])));
    }
    inline System::Void NewDataSet::EventActionRow::ChildRow::set(NinjaPlatformer::NewDataSet::ChildRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Child_EventAction"]);
    }
    
    inline ::System::Boolean NewDataSet::EventActionRow::IsChild_IdNull() {
        return this->IsNull(this->tableEventAction->Child_IdColumn);
    }
    
    inline ::System::Void NewDataSet::EventActionRow::SetChild_IdNull() {
        this[this->tableEventAction->Child_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::VertAlignmentRow::VertAlignmentRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableVertAlignment = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertAlignmentDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::VertAlignmentRow::type::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableVertAlignment->typeColumn]));
    }
    inline System::Void NewDataSet::VertAlignmentRow::type::set(System::String^  value) {
        this[this->tableVertAlignment->typeColumn] = value;
    }
    
    inline System::Int32 NewDataSet::VertAlignmentRow::Child_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableVertAlignment->Child_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Child_Id\' in table \'VertAlignment\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::VertAlignmentRow::Child_Id::set(System::Int32 value) {
        this[this->tableVertAlignment->Child_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::ChildRow^  NewDataSet::VertAlignmentRow::ChildRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Child_VertAlignment"])));
    }
    inline System::Void NewDataSet::VertAlignmentRow::ChildRow::set(NinjaPlatformer::NewDataSet::ChildRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Child_VertAlignment"]);
    }
    
    inline ::System::Boolean NewDataSet::VertAlignmentRow::IsChild_IdNull() {
        return this->IsNull(this->tableVertAlignment->Child_IdColumn);
    }
    
    inline ::System::Void NewDataSet::VertAlignmentRow::SetChild_IdNull() {
        this[this->tableVertAlignment->Child_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::HorzAlignmentRow::HorzAlignmentRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableHorzAlignment = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzAlignmentDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::HorzAlignmentRow::type::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableHorzAlignment->typeColumn]));
    }
    inline System::Void NewDataSet::HorzAlignmentRow::type::set(System::String^  value) {
        this[this->tableHorzAlignment->typeColumn] = value;
    }
    
    inline System::Int32 NewDataSet::HorzAlignmentRow::Child_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableHorzAlignment->Child_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Child_Id\' in table \'HorzAlignment\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzAlignmentRow::Child_Id::set(System::Int32 value) {
        this[this->tableHorzAlignment->Child_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::ChildRow^  NewDataSet::HorzAlignmentRow::ChildRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ChildRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Child_HorzAlignment"])));
    }
    inline System::Void NewDataSet::HorzAlignmentRow::ChildRow::set(NinjaPlatformer::NewDataSet::ChildRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Child_HorzAlignment"]);
    }
    
    inline ::System::Boolean NewDataSet::HorzAlignmentRow::IsChild_IdNull() {
        return this->IsNull(this->tableHorzAlignment->Child_IdColumn);
    }
    
    inline ::System::Void NewDataSet::HorzAlignmentRow::SetChild_IdNull() {
        this[this->tableHorzAlignment->Child_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ImagerySectionRow::ImagerySectionRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableImagerySection = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ImagerySectionRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableImagerySection->nameColumn]));
    }
    inline System::Void NewDataSet::ImagerySectionRow::name::set(System::String^  value) {
        this[this->tableImagerySection->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImagerySectionRow::ImagerySection_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableImagerySection->ImagerySection_IdColumn]));
    }
    inline System::Void NewDataSet::ImagerySectionRow::ImagerySection_Id::set(System::Int32 value) {
        this[this->tableImagerySection->ImagerySection_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImagerySectionRow::WidgetLook_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImagerySection->WidgetLook_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'WidgetLook_Id\' in table \'ImagerySection\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImagerySectionRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tableImagerySection->WidgetLook_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::ImagerySectionRow::WidgetLookRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->GetParentRow(this->Table->ParentRelations[L"WidgetLook_ImagerySection"])));
    }
    inline System::Void NewDataSet::ImagerySectionRow::WidgetLookRow::set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"WidgetLook_ImagerySection"]);
    }
    
    inline ::System::Boolean NewDataSet::ImagerySectionRow::IsWidgetLook_IdNull() {
        return this->IsNull(this->tableImagerySection->WidgetLook_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImagerySectionRow::SetWidgetLook_IdNull() {
        this[this->tableImagerySection->WidgetLook_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  NewDataSet::ImagerySectionRow::GetColourRows() {
        if (this->Table->ChildRelations[L"ImagerySection_Colour"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImagerySection_Colour"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  NewDataSet::ImagerySectionRow::GetColoursRows() {
        if (this->Table->ChildRelations[L"ImagerySection_Colours"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImagerySection_Colours"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  NewDataSet::ImagerySectionRow::GetColourPropertyRows() {
        if (this->Table->ChildRelations[L"ImagerySection_ColourProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImagerySection_ColourProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  NewDataSet::ImagerySectionRow::GetColourRectPropertyRows() {
        if (this->Table->ChildRelations[L"ImagerySection_ColourRectProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImagerySection_ColourRectProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::FrameComponentRow^  >^  NewDataSet::ImagerySectionRow::GetFrameComponentRows() {
        if (this->Table->ChildRelations[L"ImagerySection_FrameComponent"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::FrameComponentRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::FrameComponentRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImagerySection_FrameComponent"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImageryComponentRow^  >^  NewDataSet::ImagerySectionRow::GetImageryComponentRows() {
        if (this->Table->ChildRelations[L"ImagerySection_ImageryComponent"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImageryComponentRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImagerySection_ImageryComponent"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::TextComponentRow^  >^  NewDataSet::ImagerySectionRow::GetTextComponentRows() {
        if (this->Table->ChildRelations[L"ImagerySection_TextComponent"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::TextComponentRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::TextComponentRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImagerySection_TextComponent"])));
        }
    }
    
    
    inline NewDataSet::ColourRow::ColourRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableColour = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ColourRow::colour::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableColour->colourColumn]));
    }
    inline System::Void NewDataSet::ColourRow::colour::set(System::String^  value) {
        this[this->tableColour->colourColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColour->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'Colour\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableColour->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColour->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'Colour\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableColour->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColour->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'Colour\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableColour->TextComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRow::ImagerySection_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColour->ImagerySection_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImagerySection_Id\' in table \'Colour\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRow::ImagerySection_Id::set(System::Int32 value) {
        this[this->tableColour->ImagerySection_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRow::Section_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColour->Section_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Section_Id\' in table \'Colour\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRow::Section_Id::set(System::Int32 value) {
        this[this->tableColour->Section_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::ColourRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_Colour"])));
    }
    inline System::Void NewDataSet::ColourRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_Colour"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ColourRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_Colour"])));
    }
    inline System::Void NewDataSet::ColourRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_Colour"]);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::ColourRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_Colour"])));
    }
    inline System::Void NewDataSet::ColourRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_Colour"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::ColourRow::ImagerySectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImagerySection_Colour"])));
    }
    inline System::Void NewDataSet::ColourRow::ImagerySectionRow::set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImagerySection_Colour"]);
    }
    
    inline NinjaPlatformer::NewDataSet::SectionRow^  NewDataSet::ColourRow::SectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Section_Colour"])));
    }
    inline System::Void NewDataSet::ColourRow::SectionRow::set(NinjaPlatformer::NewDataSet::SectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Section_Colour"]);
    }
    
    inline ::System::Boolean NewDataSet::ColourRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableColour->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRow::SetFrameComponent_IdNull() {
        this[this->tableColour->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableColour->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRow::SetImageryComponent_IdNull() {
        this[this->tableColour->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableColour->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRow::SetTextComponent_IdNull() {
        this[this->tableColour->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourRow::IsImagerySection_IdNull() {
        return this->IsNull(this->tableColour->ImagerySection_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRow::SetImagerySection_IdNull() {
        this[this->tableColour->ImagerySection_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourRow::IsSection_IdNull() {
        return this->IsNull(this->tableColour->Section_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRow::SetSection_IdNull() {
        this[this->tableColour->Section_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ColoursRow::ColoursRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableColours = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColoursDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ColoursRow::topLeft::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableColours->topLeftColumn]));
    }
    inline System::Void NewDataSet::ColoursRow::topLeft::set(System::String^  value) {
        this[this->tableColours->topLeftColumn] = value;
    }
    
    inline System::String^  NewDataSet::ColoursRow::topRight::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableColours->topRightColumn]));
    }
    inline System::Void NewDataSet::ColoursRow::topRight::set(System::String^  value) {
        this[this->tableColours->topRightColumn] = value;
    }
    
    inline System::String^  NewDataSet::ColoursRow::bottomLeft::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableColours->bottomLeftColumn]));
    }
    inline System::Void NewDataSet::ColoursRow::bottomLeft::set(System::String^  value) {
        this[this->tableColours->bottomLeftColumn] = value;
    }
    
    inline System::String^  NewDataSet::ColoursRow::bottomRight::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableColours->bottomRightColumn]));
    }
    inline System::Void NewDataSet::ColoursRow::bottomRight::set(System::String^  value) {
        this[this->tableColours->bottomRightColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColoursRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColours->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'Colours\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColoursRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableColours->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColoursRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColours->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'Colours\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColoursRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableColours->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColoursRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColours->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'Colours\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColoursRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableColours->TextComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColoursRow::ImagerySection_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColours->ImagerySection_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImagerySection_Id\' in table \'Colours\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColoursRow::ImagerySection_Id::set(System::Int32 value) {
        this[this->tableColours->ImagerySection_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColoursRow::Section_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColours->Section_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Section_Id\' in table \'Colours\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColoursRow::Section_Id::set(System::Int32 value) {
        this[this->tableColours->Section_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::ColoursRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_Colours"])));
    }
    inline System::Void NewDataSet::ColoursRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_Colours"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ColoursRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_Colours"])));
    }
    inline System::Void NewDataSet::ColoursRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_Colours"]);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::ColoursRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_Colours"])));
    }
    inline System::Void NewDataSet::ColoursRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_Colours"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::ColoursRow::ImagerySectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImagerySection_Colours"])));
    }
    inline System::Void NewDataSet::ColoursRow::ImagerySectionRow::set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImagerySection_Colours"]);
    }
    
    inline NinjaPlatformer::NewDataSet::SectionRow^  NewDataSet::ColoursRow::SectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Section_Colours"])));
    }
    inline System::Void NewDataSet::ColoursRow::SectionRow::set(NinjaPlatformer::NewDataSet::SectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Section_Colours"]);
    }
    
    inline ::System::Boolean NewDataSet::ColoursRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableColours->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColoursRow::SetFrameComponent_IdNull() {
        this[this->tableColours->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColoursRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableColours->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColoursRow::SetImageryComponent_IdNull() {
        this[this->tableColours->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColoursRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableColours->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColoursRow::SetTextComponent_IdNull() {
        this[this->tableColours->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColoursRow::IsImagerySection_IdNull() {
        return this->IsNull(this->tableColours->ImagerySection_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColoursRow::SetImagerySection_IdNull() {
        this[this->tableColours->ImagerySection_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColoursRow::IsSection_IdNull() {
        return this->IsNull(this->tableColours->Section_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColoursRow::SetSection_IdNull() {
        this[this->tableColours->Section_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ColourPropertyRow::ColourPropertyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableColourProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourPropertyDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ColourPropertyRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableColourProperty->nameColumn]));
    }
    inline System::Void NewDataSet::ColourPropertyRow::name::set(System::String^  value) {
        this[this->tableColourProperty->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourPropertyRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourProperty->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'ColourProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourPropertyRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableColourProperty->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourPropertyRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourProperty->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'ColourProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourPropertyRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableColourProperty->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourPropertyRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourProperty->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'ColourProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourPropertyRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableColourProperty->TextComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourPropertyRow::ImagerySection_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourProperty->ImagerySection_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImagerySection_Id\' in table \'ColourProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourPropertyRow::ImagerySection_Id::set(System::Int32 value) {
        this[this->tableColourProperty->ImagerySection_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourPropertyRow::Section_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourProperty->Section_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Section_Id\' in table \'ColourProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourPropertyRow::Section_Id::set(System::Int32 value) {
        this[this->tableColourProperty->Section_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::ColourPropertyRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_ColourProperty"])));
    }
    inline System::Void NewDataSet::ColourPropertyRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_ColourProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ColourPropertyRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_ColourProperty"])));
    }
    inline System::Void NewDataSet::ColourPropertyRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_ColourProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::ColourPropertyRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_ColourProperty"])));
    }
    inline System::Void NewDataSet::ColourPropertyRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_ColourProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::ColourPropertyRow::ImagerySectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImagerySection_ColourProperty"])));
    }
    inline System::Void NewDataSet::ColourPropertyRow::ImagerySectionRow::set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImagerySection_ColourProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::SectionRow^  NewDataSet::ColourPropertyRow::SectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Section_ColourProperty"])));
    }
    inline System::Void NewDataSet::ColourPropertyRow::SectionRow::set(NinjaPlatformer::NewDataSet::SectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Section_ColourProperty"]);
    }
    
    inline ::System::Boolean NewDataSet::ColourPropertyRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableColourProperty->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourPropertyRow::SetFrameComponent_IdNull() {
        this[this->tableColourProperty->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourPropertyRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableColourProperty->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourPropertyRow::SetImageryComponent_IdNull() {
        this[this->tableColourProperty->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourPropertyRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableColourProperty->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourPropertyRow::SetTextComponent_IdNull() {
        this[this->tableColourProperty->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourPropertyRow::IsImagerySection_IdNull() {
        return this->IsNull(this->tableColourProperty->ImagerySection_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourPropertyRow::SetImagerySection_IdNull() {
        this[this->tableColourProperty->ImagerySection_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourPropertyRow::IsSection_IdNull() {
        return this->IsNull(this->tableColourProperty->Section_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourPropertyRow::SetSection_IdNull() {
        this[this->tableColourProperty->Section_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ColourRectPropertyRow::ColourRectPropertyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableColourRectProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::ColourRectPropertyDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ColourRectPropertyRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableColourRectProperty->nameColumn]));
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::name::set(System::String^  value) {
        this[this->tableColourRectProperty->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRectPropertyRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourRectProperty->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'ColourRectProperty\' is DBNull." 
L"", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableColourRectProperty->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRectPropertyRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourRectProperty->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'ColourRectProperty\' is DBNul" 
L"l.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableColourRectProperty->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRectPropertyRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourRectProperty->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'ColourRectProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableColourRectProperty->TextComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRectPropertyRow::ImagerySection_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourRectProperty->ImagerySection_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImagerySection_Id\' in table \'ColourRectProperty\' is DBNull." 
L"", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::ImagerySection_Id::set(System::Int32 value) {
        this[this->tableColourRectProperty->ImagerySection_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ColourRectPropertyRow::Section_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableColourRectProperty->Section_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Section_Id\' in table \'ColourRectProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::Section_Id::set(System::Int32 value) {
        this[this->tableColourRectProperty->Section_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::ColourRectPropertyRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_ColourRectProperty"])));
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_ColourRectProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ColourRectPropertyRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_ColourRectProperty"])));
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_ColourRectProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::ColourRectPropertyRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_ColourRectProperty"])));
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_ColourRectProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::ColourRectPropertyRow::ImagerySectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImagerySection_ColourRectProperty"])));
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::ImagerySectionRow::set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImagerySection_ColourRectProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::SectionRow^  NewDataSet::ColourRectPropertyRow::SectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Section_ColourRectProperty"])));
    }
    inline System::Void NewDataSet::ColourRectPropertyRow::SectionRow::set(NinjaPlatformer::NewDataSet::SectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Section_ColourRectProperty"]);
    }
    
    inline ::System::Boolean NewDataSet::ColourRectPropertyRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableColourRectProperty->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyRow::SetFrameComponent_IdNull() {
        this[this->tableColourRectProperty->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourRectPropertyRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableColourRectProperty->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyRow::SetImageryComponent_IdNull() {
        this[this->tableColourRectProperty->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourRectPropertyRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableColourRectProperty->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyRow::SetTextComponent_IdNull() {
        this[this->tableColourRectProperty->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourRectPropertyRow::IsImagerySection_IdNull() {
        return this->IsNull(this->tableColourRectProperty->ImagerySection_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyRow::SetImagerySection_IdNull() {
        this[this->tableColourRectProperty->ImagerySection_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ColourRectPropertyRow::IsSection_IdNull() {
        return this->IsNull(this->tableColourRectProperty->Section_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ColourRectPropertyRow::SetSection_IdNull() {
        this[this->tableColourRectProperty->Section_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::FrameComponentRow::FrameComponentRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableFrameComponent = (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::FrameComponentRow::FrameComponent_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableFrameComponent->FrameComponent_IdColumn]));
    }
    inline System::Void NewDataSet::FrameComponentRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableFrameComponent->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::FrameComponentRow::ImagerySection_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableFrameComponent->ImagerySection_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImagerySection_Id\' in table \'FrameComponent\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::FrameComponentRow::ImagerySection_Id::set(System::Int32 value) {
        this[this->tableFrameComponent->ImagerySection_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::FrameComponentRow::ImagerySectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImagerySection_FrameComponent"])));
    }
    inline System::Void NewDataSet::FrameComponentRow::ImagerySectionRow::set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImagerySection_FrameComponent"]);
    }
    
    inline ::System::Boolean NewDataSet::FrameComponentRow::IsImagerySection_IdNull() {
        return this->IsNull(this->tableFrameComponent->ImagerySection_IdColumn);
    }
    
    inline ::System::Void NewDataSet::FrameComponentRow::SetImagerySection_IdNull() {
        this[this->tableFrameComponent->ImagerySection_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  NewDataSet::FrameComponentRow::GetAreaRows() {
        if (this->Table->ChildRelations[L"FrameComponent_Area"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_Area"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImageRow^  >^  NewDataSet::FrameComponentRow::GetImageRows() {
        if (this->Table->ChildRelations[L"FrameComponent_Image"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImageRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImageRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_Image"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImagePropertyRow^  >^  NewDataSet::FrameComponentRow::GetImagePropertyRows() {
        if (this->Table->ChildRelations[L"FrameComponent_ImageProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImagePropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImagePropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_ImageProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  NewDataSet::FrameComponentRow::GetColourRows() {
        if (this->Table->ChildRelations[L"FrameComponent_Colour"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_Colour"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  NewDataSet::FrameComponentRow::GetColoursRows() {
        if (this->Table->ChildRelations[L"FrameComponent_Colours"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_Colours"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  NewDataSet::FrameComponentRow::GetColourPropertyRows() {
        if (this->Table->ChildRelations[L"FrameComponent_ColourProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_ColourProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  NewDataSet::FrameComponentRow::GetColourRectPropertyRows() {
        if (this->Table->ChildRelations[L"FrameComponent_ColourRectProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_ColourRectProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >^  NewDataSet::FrameComponentRow::GetVertFormatRows() {
        if (this->Table->ChildRelations[L"FrameComponent_VertFormat"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_VertFormat"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >^  NewDataSet::FrameComponentRow::GetVertFormatPropertyRows() {
        if (this->Table->ChildRelations[L"FrameComponent_VertFormatProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_VertFormatProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >^  NewDataSet::FrameComponentRow::GetHorzFormatRows() {
        if (this->Table->ChildRelations[L"FrameComponent_HorzFormat"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_HorzFormat"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >^  NewDataSet::FrameComponentRow::GetHorzFormatPropertyRows() {
        if (this->Table->ChildRelations[L"FrameComponent_HorzFormatProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FrameComponent_HorzFormatProperty"])));
        }
    }
    
    
    inline NewDataSet::ImageRow::ImageRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableImage = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ImageRow::component::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableImage->componentColumn]));
    }
    inline System::Void NewDataSet::ImageRow::component::set(System::String^  value) {
        this[this->tableImage->componentColumn] = value;
    }
    
    inline System::String^  NewDataSet::ImageRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableImage->nameColumn]));
    }
    inline System::Void NewDataSet::ImageRow::name::set(System::String^  value) {
        this[this->tableImage->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImageRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImage->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'Image\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImageRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableImage->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImageRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImage->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'Image\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImageRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableImage->ImageryComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::ImageRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_Image"])));
    }
    inline System::Void NewDataSet::ImageRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_Image"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ImageRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_Image"])));
    }
    inline System::Void NewDataSet::ImageRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_Image"]);
    }
    
    inline ::System::Boolean NewDataSet::ImageRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableImage->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImageRow::SetFrameComponent_IdNull() {
        this[this->tableImage->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ImageRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableImage->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImageRow::SetImageryComponent_IdNull() {
        this[this->tableImage->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ImagePropertyRow::ImagePropertyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableImageProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagePropertyDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ImagePropertyRow::component::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableImageProperty->componentColumn]));
    }
    inline System::Void NewDataSet::ImagePropertyRow::component::set(System::String^  value) {
        this[this->tableImageProperty->componentColumn] = value;
    }
    
    inline System::String^  NewDataSet::ImagePropertyRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableImageProperty->nameColumn]));
    }
    inline System::Void NewDataSet::ImagePropertyRow::name::set(System::String^  value) {
        this[this->tableImageProperty->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImagePropertyRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImageProperty->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'ImageProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImagePropertyRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableImageProperty->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImagePropertyRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImageProperty->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'ImageProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImagePropertyRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableImageProperty->ImageryComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::ImagePropertyRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_ImageProperty"])));
    }
    inline System::Void NewDataSet::ImagePropertyRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_ImageProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ImagePropertyRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_ImageProperty"])));
    }
    inline System::Void NewDataSet::ImagePropertyRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_ImageProperty"]);
    }
    
    inline ::System::Boolean NewDataSet::ImagePropertyRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableImageProperty->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImagePropertyRow::SetFrameComponent_IdNull() {
        this[this->tableImageProperty->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::ImagePropertyRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableImageProperty->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImagePropertyRow::SetImageryComponent_IdNull() {
        this[this->tableImageProperty->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::VertFormatRow::VertFormatRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableVertFormat = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::VertFormatRow::component::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableVertFormat->componentColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'component\' in table \'VertFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::VertFormatRow::component::set(System::String^  value) {
        this[this->tableVertFormat->componentColumn] = value;
    }
    
    inline System::String^  NewDataSet::VertFormatRow::type::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableVertFormat->typeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'type\' in table \'VertFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::VertFormatRow::type::set(System::String^  value) {
        this[this->tableVertFormat->typeColumn] = value;
    }
    
    inline System::Int32 NewDataSet::VertFormatRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableVertFormat->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'VertFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::VertFormatRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableVertFormat->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::VertFormatRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableVertFormat->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'VertFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::VertFormatRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableVertFormat->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::VertFormatRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableVertFormat->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'VertFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::VertFormatRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableVertFormat->TextComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::VertFormatRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_VertFormat"])));
    }
    inline System::Void NewDataSet::VertFormatRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_VertFormat"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::VertFormatRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_VertFormat"])));
    }
    inline System::Void NewDataSet::VertFormatRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_VertFormat"]);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::VertFormatRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_VertFormat"])));
    }
    inline System::Void NewDataSet::VertFormatRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_VertFormat"]);
    }
    
    inline ::System::Boolean NewDataSet::VertFormatRow::IscomponentNull() {
        return this->IsNull(this->tableVertFormat->componentColumn);
    }
    
    inline ::System::Void NewDataSet::VertFormatRow::SetcomponentNull() {
        this[this->tableVertFormat->componentColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::VertFormatRow::IstypeNull() {
        return this->IsNull(this->tableVertFormat->typeColumn);
    }
    
    inline ::System::Void NewDataSet::VertFormatRow::SettypeNull() {
        this[this->tableVertFormat->typeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::VertFormatRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableVertFormat->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::VertFormatRow::SetFrameComponent_IdNull() {
        this[this->tableVertFormat->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::VertFormatRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableVertFormat->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::VertFormatRow::SetImageryComponent_IdNull() {
        this[this->tableVertFormat->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::VertFormatRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableVertFormat->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::VertFormatRow::SetTextComponent_IdNull() {
        this[this->tableVertFormat->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::VertFormatPropertyRow::VertFormatPropertyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableVertFormatProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::VertFormatPropertyDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::VertFormatPropertyRow::component::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableVertFormatProperty->componentColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'component\' in table \'VertFormatProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::VertFormatPropertyRow::component::set(System::String^  value) {
        this[this->tableVertFormatProperty->componentColumn] = value;
    }
    
    inline System::String^  NewDataSet::VertFormatPropertyRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableVertFormatProperty->nameColumn]));
    }
    inline System::Void NewDataSet::VertFormatPropertyRow::name::set(System::String^  value) {
        this[this->tableVertFormatProperty->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::VertFormatPropertyRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableVertFormatProperty->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'VertFormatProperty\' is DBNull." 
L"", 
                e));
        }
    }
    inline System::Void NewDataSet::VertFormatPropertyRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableVertFormatProperty->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::VertFormatPropertyRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableVertFormatProperty->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'VertFormatProperty\' is DBNul" 
L"l.", 
                e));
        }
    }
    inline System::Void NewDataSet::VertFormatPropertyRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableVertFormatProperty->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::VertFormatPropertyRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableVertFormatProperty->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'VertFormatProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::VertFormatPropertyRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableVertFormatProperty->TextComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::VertFormatPropertyRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_VertFormatProperty"])));
    }
    inline System::Void NewDataSet::VertFormatPropertyRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_VertFormatProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::VertFormatPropertyRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_VertFormatProperty"])));
    }
    inline System::Void NewDataSet::VertFormatPropertyRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_VertFormatProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::VertFormatPropertyRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_VertFormatProperty"])));
    }
    inline System::Void NewDataSet::VertFormatPropertyRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_VertFormatProperty"]);
    }
    
    inline ::System::Boolean NewDataSet::VertFormatPropertyRow::IscomponentNull() {
        return this->IsNull(this->tableVertFormatProperty->componentColumn);
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyRow::SetcomponentNull() {
        this[this->tableVertFormatProperty->componentColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::VertFormatPropertyRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableVertFormatProperty->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyRow::SetFrameComponent_IdNull() {
        this[this->tableVertFormatProperty->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::VertFormatPropertyRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableVertFormatProperty->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyRow::SetImageryComponent_IdNull() {
        this[this->tableVertFormatProperty->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::VertFormatPropertyRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableVertFormatProperty->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::VertFormatPropertyRow::SetTextComponent_IdNull() {
        this[this->tableVertFormatProperty->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::HorzFormatRow::HorzFormatRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableHorzFormat = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::HorzFormatRow::component::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableHorzFormat->componentColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'component\' in table \'HorzFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzFormatRow::component::set(System::String^  value) {
        this[this->tableHorzFormat->componentColumn] = value;
    }
    
    inline System::String^  NewDataSet::HorzFormatRow::type::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableHorzFormat->typeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'type\' in table \'HorzFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzFormatRow::type::set(System::String^  value) {
        this[this->tableHorzFormat->typeColumn] = value;
    }
    
    inline System::Int32 NewDataSet::HorzFormatRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableHorzFormat->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'HorzFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzFormatRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableHorzFormat->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::HorzFormatRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableHorzFormat->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'HorzFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzFormatRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableHorzFormat->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::HorzFormatRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableHorzFormat->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'HorzFormat\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzFormatRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableHorzFormat->TextComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::HorzFormatRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_HorzFormat"])));
    }
    inline System::Void NewDataSet::HorzFormatRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_HorzFormat"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::HorzFormatRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_HorzFormat"])));
    }
    inline System::Void NewDataSet::HorzFormatRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_HorzFormat"]);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::HorzFormatRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_HorzFormat"])));
    }
    inline System::Void NewDataSet::HorzFormatRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_HorzFormat"]);
    }
    
    inline ::System::Boolean NewDataSet::HorzFormatRow::IscomponentNull() {
        return this->IsNull(this->tableHorzFormat->componentColumn);
    }
    
    inline ::System::Void NewDataSet::HorzFormatRow::SetcomponentNull() {
        this[this->tableHorzFormat->componentColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::HorzFormatRow::IstypeNull() {
        return this->IsNull(this->tableHorzFormat->typeColumn);
    }
    
    inline ::System::Void NewDataSet::HorzFormatRow::SettypeNull() {
        this[this->tableHorzFormat->typeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::HorzFormatRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableHorzFormat->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::HorzFormatRow::SetFrameComponent_IdNull() {
        this[this->tableHorzFormat->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::HorzFormatRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableHorzFormat->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::HorzFormatRow::SetImageryComponent_IdNull() {
        this[this->tableHorzFormat->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::HorzFormatRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableHorzFormat->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::HorzFormatRow::SetTextComponent_IdNull() {
        this[this->tableHorzFormat->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::HorzFormatPropertyRow::HorzFormatPropertyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableHorzFormatProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::HorzFormatPropertyDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::HorzFormatPropertyRow::component::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableHorzFormatProperty->componentColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'component\' in table \'HorzFormatProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzFormatPropertyRow::component::set(System::String^  value) {
        this[this->tableHorzFormatProperty->componentColumn] = value;
    }
    
    inline System::String^  NewDataSet::HorzFormatPropertyRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableHorzFormatProperty->nameColumn]));
    }
    inline System::Void NewDataSet::HorzFormatPropertyRow::name::set(System::String^  value) {
        this[this->tableHorzFormatProperty->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::HorzFormatPropertyRow::FrameComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableHorzFormatProperty->FrameComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FrameComponent_Id\' in table \'HorzFormatProperty\' is DBNull." 
L"", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzFormatPropertyRow::FrameComponent_Id::set(System::Int32 value) {
        this[this->tableHorzFormatProperty->FrameComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::HorzFormatPropertyRow::ImageryComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableHorzFormatProperty->ImageryComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImageryComponent_Id\' in table \'HorzFormatProperty\' is DBNul" 
L"l.", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzFormatPropertyRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableHorzFormatProperty->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::HorzFormatPropertyRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableHorzFormatProperty->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'HorzFormatProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::HorzFormatPropertyRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableHorzFormatProperty->TextComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::HorzFormatPropertyRow::FrameComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::FrameComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FrameComponent_HorzFormatProperty"])));
    }
    inline System::Void NewDataSet::HorzFormatPropertyRow::FrameComponentRow::set(NinjaPlatformer::NewDataSet::FrameComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"FrameComponent_HorzFormatProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::HorzFormatPropertyRow::ImageryComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImageryComponent_HorzFormatProperty"])));
    }
    inline System::Void NewDataSet::HorzFormatPropertyRow::ImageryComponentRow::set(NinjaPlatformer::NewDataSet::ImageryComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImageryComponent_HorzFormatProperty"]);
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::HorzFormatPropertyRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_HorzFormatProperty"])));
    }
    inline System::Void NewDataSet::HorzFormatPropertyRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_HorzFormatProperty"]);
    }
    
    inline ::System::Boolean NewDataSet::HorzFormatPropertyRow::IscomponentNull() {
        return this->IsNull(this->tableHorzFormatProperty->componentColumn);
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyRow::SetcomponentNull() {
        this[this->tableHorzFormatProperty->componentColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::HorzFormatPropertyRow::IsFrameComponent_IdNull() {
        return this->IsNull(this->tableHorzFormatProperty->FrameComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyRow::SetFrameComponent_IdNull() {
        this[this->tableHorzFormatProperty->FrameComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::HorzFormatPropertyRow::IsImageryComponent_IdNull() {
        return this->IsNull(this->tableHorzFormatProperty->ImageryComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyRow::SetImageryComponent_IdNull() {
        this[this->tableHorzFormatProperty->ImageryComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::HorzFormatPropertyRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableHorzFormatProperty->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::HorzFormatPropertyRow::SetTextComponent_IdNull() {
        this[this->tableHorzFormatProperty->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ImageryComponentRow::ImageryComponentRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableImageryComponent = (cli::safe_cast<NinjaPlatformer::NewDataSet::ImageryComponentDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::ImageryComponentRow::ImageryComponent_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableImageryComponent->ImageryComponent_IdColumn]));
    }
    inline System::Void NewDataSet::ImageryComponentRow::ImageryComponent_Id::set(System::Int32 value) {
        this[this->tableImageryComponent->ImageryComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ImageryComponentRow::ImagerySection_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableImageryComponent->ImagerySection_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImagerySection_Id\' in table \'ImageryComponent\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::ImageryComponentRow::ImagerySection_Id::set(System::Int32 value) {
        this[this->tableImageryComponent->ImagerySection_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::ImageryComponentRow::ImagerySectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImagerySection_ImageryComponent"])));
    }
    inline System::Void NewDataSet::ImageryComponentRow::ImagerySectionRow::set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImagerySection_ImageryComponent"]);
    }
    
    inline ::System::Boolean NewDataSet::ImageryComponentRow::IsImagerySection_IdNull() {
        return this->IsNull(this->tableImageryComponent->ImagerySection_IdColumn);
    }
    
    inline ::System::Void NewDataSet::ImageryComponentRow::SetImagerySection_IdNull() {
        this[this->tableImageryComponent->ImagerySection_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  NewDataSet::ImageryComponentRow::GetAreaRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_Area"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_Area"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImageRow^  >^  NewDataSet::ImageryComponentRow::GetImageRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_Image"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImageRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImageRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_Image"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ImagePropertyRow^  >^  NewDataSet::ImageryComponentRow::GetImagePropertyRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_ImageProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ImagePropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ImagePropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_ImageProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  NewDataSet::ImageryComponentRow::GetColourRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_Colour"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_Colour"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  NewDataSet::ImageryComponentRow::GetColoursRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_Colours"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_Colours"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  NewDataSet::ImageryComponentRow::GetColourPropertyRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_ColourProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_ColourProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  NewDataSet::ImageryComponentRow::GetColourRectPropertyRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_ColourRectProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_ColourRectProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >^  NewDataSet::ImageryComponentRow::GetVertFormatRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_VertFormat"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_VertFormat"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >^  NewDataSet::ImageryComponentRow::GetVertFormatPropertyRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_VertFormatProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_VertFormatProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >^  NewDataSet::ImageryComponentRow::GetHorzFormatRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_HorzFormat"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_HorzFormat"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >^  NewDataSet::ImageryComponentRow::GetHorzFormatPropertyRows() {
        if (this->Table->ChildRelations[L"ImageryComponent_HorzFormatProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"ImageryComponent_HorzFormatProperty"])));
        }
    }
    
    
    inline NewDataSet::TextComponentRow::TextComponentRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableTextComponent = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::TextComponentRow::TextComponent_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableTextComponent->TextComponent_IdColumn]));
    }
    inline System::Void NewDataSet::TextComponentRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableTextComponent->TextComponent_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::TextComponentRow::ImagerySection_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableTextComponent->ImagerySection_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ImagerySection_Id\' in table \'TextComponent\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::TextComponentRow::ImagerySection_Id::set(System::Int32 value) {
        this[this->tableTextComponent->ImagerySection_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::TextComponentRow::ImagerySectionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::ImagerySectionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"ImagerySection_TextComponent"])));
    }
    inline System::Void NewDataSet::TextComponentRow::ImagerySectionRow::set(NinjaPlatformer::NewDataSet::ImagerySectionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"ImagerySection_TextComponent"]);
    }
    
    inline ::System::Boolean NewDataSet::TextComponentRow::IsImagerySection_IdNull() {
        return this->IsNull(this->tableTextComponent->ImagerySection_IdColumn);
    }
    
    inline ::System::Void NewDataSet::TextComponentRow::SetImagerySection_IdNull() {
        this[this->tableTextComponent->ImagerySection_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  NewDataSet::TextComponentRow::GetAreaRows() {
        if (this->Table->ChildRelations[L"TextComponent_Area"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AreaRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_Area"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::TextRow^  >^  NewDataSet::TextComponentRow::GetTextRows() {
        if (this->Table->ChildRelations[L"TextComponent_Text"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::TextRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::TextRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_Text"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::TextPropertyRow^  >^  NewDataSet::TextComponentRow::GetTextPropertyRows() {
        if (this->Table->ChildRelations[L"TextComponent_TextProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::TextPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::TextPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_TextProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::FontPropertyRow^  >^  NewDataSet::TextComponentRow::GetFontPropertyRows() {
        if (this->Table->ChildRelations[L"TextComponent_FontProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::FontPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::FontPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_FontProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  NewDataSet::TextComponentRow::GetColourRows() {
        if (this->Table->ChildRelations[L"TextComponent_Colour"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_Colour"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  NewDataSet::TextComponentRow::GetColoursRows() {
        if (this->Table->ChildRelations[L"TextComponent_Colours"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_Colours"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  NewDataSet::TextComponentRow::GetColourPropertyRows() {
        if (this->Table->ChildRelations[L"TextComponent_ColourProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_ColourProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  NewDataSet::TextComponentRow::GetColourRectPropertyRows() {
        if (this->Table->ChildRelations[L"TextComponent_ColourRectProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_ColourRectProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >^  NewDataSet::TextComponentRow::GetVertFormatRows() {
        if (this->Table->ChildRelations[L"TextComponent_VertFormat"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::VertFormatRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_VertFormat"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >^  NewDataSet::TextComponentRow::GetVertFormatPropertyRows() {
        if (this->Table->ChildRelations[L"TextComponent_VertFormatProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_VertFormatProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >^  NewDataSet::TextComponentRow::GetHorzFormatRows() {
        if (this->Table->ChildRelations[L"TextComponent_HorzFormat"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::HorzFormatRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_HorzFormat"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >^  NewDataSet::TextComponentRow::GetHorzFormatPropertyRows() {
        if (this->Table->ChildRelations[L"TextComponent_HorzFormatProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TextComponent_HorzFormatProperty"])));
        }
    }
    
    
    inline NewDataSet::TextRow::TextRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableText = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::TextRow::string::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableText->stringColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'string\' in table \'Text\' is DBNull.", e));
        }
    }
    inline System::Void NewDataSet::TextRow::string::set(System::String^  value) {
        this[this->tableText->stringColumn] = value;
    }
    
    inline System::String^  NewDataSet::TextRow::font::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableText->fontColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'font\' in table \'Text\' is DBNull.", e));
        }
    }
    inline System::Void NewDataSet::TextRow::font::set(System::String^  value) {
        this[this->tableText->fontColumn] = value;
    }
    
    inline System::Int32 NewDataSet::TextRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableText->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'Text\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::TextRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableText->TextComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::TextRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_Text"])));
    }
    inline System::Void NewDataSet::TextRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_Text"]);
    }
    
    inline ::System::Boolean NewDataSet::TextRow::IsstringNull() {
        return this->IsNull(this->tableText->stringColumn);
    }
    
    inline ::System::Void NewDataSet::TextRow::SetstringNull() {
        this[this->tableText->stringColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::TextRow::IsfontNull() {
        return this->IsNull(this->tableText->fontColumn);
    }
    
    inline ::System::Void NewDataSet::TextRow::SetfontNull() {
        this[this->tableText->fontColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::TextRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableText->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::TextRow::SetTextComponent_IdNull() {
        this[this->tableText->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::TextPropertyRow::TextPropertyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableTextProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::TextPropertyDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::TextPropertyRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableTextProperty->nameColumn]));
    }
    inline System::Void NewDataSet::TextPropertyRow::name::set(System::String^  value) {
        this[this->tableTextProperty->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::TextPropertyRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableTextProperty->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'TextProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::TextPropertyRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableTextProperty->TextComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::TextPropertyRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_TextProperty"])));
    }
    inline System::Void NewDataSet::TextPropertyRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_TextProperty"]);
    }
    
    inline ::System::Boolean NewDataSet::TextPropertyRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableTextProperty->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::TextPropertyRow::SetTextComponent_IdNull() {
        this[this->tableTextProperty->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::FontPropertyRow::FontPropertyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableFontProperty = (cli::safe_cast<NinjaPlatformer::NewDataSet::FontPropertyDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::FontPropertyRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableFontProperty->nameColumn]));
    }
    inline System::Void NewDataSet::FontPropertyRow::name::set(System::String^  value) {
        this[this->tableFontProperty->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::FontPropertyRow::TextComponent_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableFontProperty->TextComponent_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TextComponent_Id\' in table \'FontProperty\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::FontPropertyRow::TextComponent_Id::set(System::Int32 value) {
        this[this->tableFontProperty->TextComponent_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::FontPropertyRow::TextComponentRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::TextComponentRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TextComponent_FontProperty"])));
    }
    inline System::Void NewDataSet::FontPropertyRow::TextComponentRow::set(NinjaPlatformer::NewDataSet::TextComponentRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"TextComponent_FontProperty"]);
    }
    
    inline ::System::Boolean NewDataSet::FontPropertyRow::IsTextComponent_IdNull() {
        return this->IsNull(this->tableFontProperty->TextComponent_IdColumn);
    }
    
    inline ::System::Void NewDataSet::FontPropertyRow::SetTextComponent_IdNull() {
        this[this->tableFontProperty->TextComponent_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::StateImageryRow::StateImageryRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableStateImagery = (cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::StateImageryRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableStateImagery->nameColumn]));
    }
    inline System::Void NewDataSet::StateImageryRow::name::set(System::String^  value) {
        this[this->tableStateImagery->nameColumn] = value;
    }
    
    inline System::Boolean NewDataSet::StateImageryRow::clipped::get() {
        try {
            return (cli::safe_cast<::System::Boolean >(this[this->tableStateImagery->clippedColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'clipped\' in table \'StateImagery\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::StateImageryRow::clipped::set(System::Boolean value) {
        this[this->tableStateImagery->clippedColumn] = value;
    }
    
    inline System::Int32 NewDataSet::StateImageryRow::StateImagery_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableStateImagery->StateImagery_IdColumn]));
    }
    inline System::Void NewDataSet::StateImageryRow::StateImagery_Id::set(System::Int32 value) {
        this[this->tableStateImagery->StateImagery_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::StateImageryRow::WidgetLook_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableStateImagery->WidgetLook_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'WidgetLook_Id\' in table \'StateImagery\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::StateImageryRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tableStateImagery->WidgetLook_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::StateImageryRow::WidgetLookRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->GetParentRow(this->Table->ParentRelations[L"WidgetLook_StateImagery"])));
    }
    inline System::Void NewDataSet::StateImageryRow::WidgetLookRow::set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"WidgetLook_StateImagery"]);
    }
    
    inline ::System::Boolean NewDataSet::StateImageryRow::IsclippedNull() {
        return this->IsNull(this->tableStateImagery->clippedColumn);
    }
    
    inline ::System::Void NewDataSet::StateImageryRow::SetclippedNull() {
        this[this->tableStateImagery->clippedColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::StateImageryRow::IsWidgetLook_IdNull() {
        return this->IsNull(this->tableStateImagery->WidgetLook_IdColumn);
    }
    
    inline ::System::Void NewDataSet::StateImageryRow::SetWidgetLook_IdNull() {
        this[this->tableStateImagery->WidgetLook_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::LayerRow^  >^  NewDataSet::StateImageryRow::GetLayerRows() {
        if (this->Table->ChildRelations[L"StateImagery_Layer"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::LayerRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::LayerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"StateImagery_Layer"])));
        }
    }
    
    
    inline NewDataSet::LayerRow::LayerRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableLayer = (cli::safe_cast<NinjaPlatformer::NewDataSet::LayerDataTable^  >(this->Table));
    }
    
    inline System::Int64 NewDataSet::LayerRow::priority::get() {
        try {
            return (cli::safe_cast<::System::Int64 >(this[this->tableLayer->priorityColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'priority\' in table \'Layer\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::LayerRow::priority::set(System::Int64 value) {
        this[this->tableLayer->priorityColumn] = value;
    }
    
    inline System::Int32 NewDataSet::LayerRow::Layer_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableLayer->Layer_IdColumn]));
    }
    inline System::Void NewDataSet::LayerRow::Layer_Id::set(System::Int32 value) {
        this[this->tableLayer->Layer_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::LayerRow::StateImagery_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableLayer->StateImagery_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'StateImagery_Id\' in table \'Layer\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::LayerRow::StateImagery_Id::set(System::Int32 value) {
        this[this->tableLayer->StateImagery_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::StateImageryRow^  NewDataSet::LayerRow::StateImageryRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::StateImageryRow^  >(this->GetParentRow(this->Table->ParentRelations[L"StateImagery_Layer"])));
    }
    inline System::Void NewDataSet::LayerRow::StateImageryRow::set(NinjaPlatformer::NewDataSet::StateImageryRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"StateImagery_Layer"]);
    }
    
    inline ::System::Boolean NewDataSet::LayerRow::IspriorityNull() {
        return this->IsNull(this->tableLayer->priorityColumn);
    }
    
    inline ::System::Void NewDataSet::LayerRow::SetpriorityNull() {
        this[this->tableLayer->priorityColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::LayerRow::IsStateImagery_IdNull() {
        return this->IsNull(this->tableLayer->StateImagery_IdColumn);
    }
    
    inline ::System::Void NewDataSet::LayerRow::SetStateImagery_IdNull() {
        this[this->tableLayer->StateImagery_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::SectionRow^  >^  NewDataSet::LayerRow::GetSectionRows() {
        if (this->Table->ChildRelations[L"Layer_Section"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::SectionRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::SectionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Layer_Section"])));
        }
    }
    
    
    inline NewDataSet::SectionRow::SectionRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableSection = (cli::safe_cast<NinjaPlatformer::NewDataSet::SectionDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::SectionRow::look::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableSection->lookColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'look\' in table \'Section\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::SectionRow::look::set(System::String^  value) {
        this[this->tableSection->lookColumn] = value;
    }
    
    inline System::String^  NewDataSet::SectionRow::section::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableSection->sectionColumn]));
    }
    inline System::Void NewDataSet::SectionRow::section::set(System::String^  value) {
        this[this->tableSection->sectionColumn] = value;
    }
    
    inline System::String^  NewDataSet::SectionRow::controlProperty::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableSection->controlPropertyColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'controlProperty\' in table \'Section\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::SectionRow::controlProperty::set(System::String^  value) {
        this[this->tableSection->controlPropertyColumn] = value;
    }
    
    inline System::String^  NewDataSet::SectionRow::controlValue::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableSection->controlValueColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'controlValue\' in table \'Section\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::SectionRow::controlValue::set(System::String^  value) {
        this[this->tableSection->controlValueColumn] = value;
    }
    
    inline System::String^  NewDataSet::SectionRow::controlWidget::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableSection->controlWidgetColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'controlWidget\' in table \'Section\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::SectionRow::controlWidget::set(System::String^  value) {
        this[this->tableSection->controlWidgetColumn] = value;
    }
    
    inline System::Int32 NewDataSet::SectionRow::Section_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableSection->Section_IdColumn]));
    }
    inline System::Void NewDataSet::SectionRow::Section_Id::set(System::Int32 value) {
        this[this->tableSection->Section_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::SectionRow::Layer_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableSection->Layer_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Layer_Id\' in table \'Section\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::SectionRow::Layer_Id::set(System::Int32 value) {
        this[this->tableSection->Layer_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::LayerRow^  NewDataSet::SectionRow::LayerRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::LayerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Layer_Section"])));
    }
    inline System::Void NewDataSet::SectionRow::LayerRow::set(NinjaPlatformer::NewDataSet::LayerRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Layer_Section"]);
    }
    
    inline ::System::Boolean NewDataSet::SectionRow::IslookNull() {
        return this->IsNull(this->tableSection->lookColumn);
    }
    
    inline ::System::Void NewDataSet::SectionRow::SetlookNull() {
        this[this->tableSection->lookColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::SectionRow::IscontrolPropertyNull() {
        return this->IsNull(this->tableSection->controlPropertyColumn);
    }
    
    inline ::System::Void NewDataSet::SectionRow::SetcontrolPropertyNull() {
        this[this->tableSection->controlPropertyColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::SectionRow::IscontrolValueNull() {
        return this->IsNull(this->tableSection->controlValueColumn);
    }
    
    inline ::System::Void NewDataSet::SectionRow::SetcontrolValueNull() {
        this[this->tableSection->controlValueColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::SectionRow::IscontrolWidgetNull() {
        return this->IsNull(this->tableSection->controlWidgetColumn);
    }
    
    inline ::System::Void NewDataSet::SectionRow::SetcontrolWidgetNull() {
        this[this->tableSection->controlWidgetColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::SectionRow::IsLayer_IdNull() {
        return this->IsNull(this->tableSection->Layer_IdColumn);
    }
    
    inline ::System::Void NewDataSet::SectionRow::SetLayer_IdNull() {
        this[this->tableSection->Layer_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  NewDataSet::SectionRow::GetColourRows() {
        if (this->Table->ChildRelations[L"Section_Colour"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Section_Colour"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  NewDataSet::SectionRow::GetColoursRows() {
        if (this->Table->ChildRelations[L"Section_Colours"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColoursRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Section_Colours"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  NewDataSet::SectionRow::GetColourPropertyRows() {
        if (this->Table->ChildRelations[L"Section_ColourProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Section_ColourProperty"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  NewDataSet::SectionRow::GetColourRectPropertyRows() {
        if (this->Table->ChildRelations[L"Section_ColourRectProperty"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Section_ColourRectProperty"])));
        }
    }
    
    
    inline NewDataSet::AnimationDefinitionRow::AnimationDefinitionRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableAnimationDefinition = (cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::AnimationDefinitionRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableAnimationDefinition->nameColumn]));
    }
    inline System::Void NewDataSet::AnimationDefinitionRow::name::set(System::String^  value) {
        this[this->tableAnimationDefinition->nameColumn] = value;
    }
    
    inline System::Decimal NewDataSet::AnimationDefinitionRow::duration::get() {
        return (cli::safe_cast<::System::Decimal >(this[this->tableAnimationDefinition->durationColumn]));
    }
    inline System::Void NewDataSet::AnimationDefinitionRow::duration::set(System::Decimal value) {
        this[this->tableAnimationDefinition->durationColumn] = value;
    }
    
    inline System::String^  NewDataSet::AnimationDefinitionRow::replayMode::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableAnimationDefinition->replayModeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'replayMode\' in table \'AnimationDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AnimationDefinitionRow::replayMode::set(System::String^  value) {
        this[this->tableAnimationDefinition->replayModeColumn] = value;
    }
    
    inline System::Boolean NewDataSet::AnimationDefinitionRow::autoStart::get() {
        try {
            return (cli::safe_cast<::System::Boolean >(this[this->tableAnimationDefinition->autoStartColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'autoStart\' in table \'AnimationDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AnimationDefinitionRow::autoStart::set(System::Boolean value) {
        this[this->tableAnimationDefinition->autoStartColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AnimationDefinitionRow::AnimationDefinition_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableAnimationDefinition->AnimationDefinition_IdColumn]));
    }
    inline System::Void NewDataSet::AnimationDefinitionRow::AnimationDefinition_Id::set(System::Int32 value) {
        this[this->tableAnimationDefinition->AnimationDefinition_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AnimationDefinitionRow::WidgetLook_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableAnimationDefinition->WidgetLook_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'WidgetLook_Id\' in table \'AnimationDefinition\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AnimationDefinitionRow::WidgetLook_Id::set(System::Int32 value) {
        this[this->tableAnimationDefinition->WidgetLook_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::AnimationDefinitionRow::WidgetLookRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::WidgetLookRow^  >(this->GetParentRow(this->Table->ParentRelations[L"WidgetLook_AnimationDefinition"])));
    }
    inline System::Void NewDataSet::AnimationDefinitionRow::WidgetLookRow::set(NinjaPlatformer::NewDataSet::WidgetLookRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"WidgetLook_AnimationDefinition"]);
    }
    
    inline ::System::Boolean NewDataSet::AnimationDefinitionRow::IsreplayModeNull() {
        return this->IsNull(this->tableAnimationDefinition->replayModeColumn);
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionRow::SetreplayModeNull() {
        this[this->tableAnimationDefinition->replayModeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::AnimationDefinitionRow::IsautoStartNull() {
        return this->IsNull(this->tableAnimationDefinition->autoStartColumn);
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionRow::SetautoStartNull() {
        this[this->tableAnimationDefinition->autoStartColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::AnimationDefinitionRow::IsWidgetLook_IdNull() {
        return this->IsNull(this->tableAnimationDefinition->WidgetLook_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AnimationDefinitionRow::SetWidgetLook_IdNull() {
        this[this->tableAnimationDefinition->WidgetLook_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::AffectorRow^  >^  NewDataSet::AnimationDefinitionRow::GetAffectorRows() {
        if (this->Table->ChildRelations[L"AnimationDefinition_Affector"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::AffectorRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::AffectorRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AnimationDefinition_Affector"])));
        }
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::SubscriptionRow^  >^  NewDataSet::AnimationDefinitionRow::GetSubscriptionRows() {
        if (this->Table->ChildRelations[L"AnimationDefinition_Subscription"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::SubscriptionRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::SubscriptionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AnimationDefinition_Subscription"])));
        }
    }
    
    
    inline NewDataSet::AffectorRow::AffectorRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableAffector = (cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::AffectorRow::applicationMethod::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableAffector->applicationMethodColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'applicationMethod\' in table \'Affector\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AffectorRow::applicationMethod::set(System::String^  value) {
        this[this->tableAffector->applicationMethodColumn] = value;
    }
    
    inline System::String^  NewDataSet::AffectorRow::_property::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableAffector->_propertyColumn]));
    }
    inline System::Void NewDataSet::AffectorRow::_property::set(System::String^  value) {
        this[this->tableAffector->_propertyColumn] = value;
    }
    
    inline System::String^  NewDataSet::AffectorRow::interpolator::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableAffector->interpolatorColumn]));
    }
    inline System::Void NewDataSet::AffectorRow::interpolator::set(System::String^  value) {
        this[this->tableAffector->interpolatorColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AffectorRow::Affector_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableAffector->Affector_IdColumn]));
    }
    inline System::Void NewDataSet::AffectorRow::Affector_Id::set(System::Int32 value) {
        this[this->tableAffector->Affector_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::AffectorRow::AnimationDefinition_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableAffector->AnimationDefinition_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AnimationDefinition_Id\' in table \'Affector\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::AffectorRow::AnimationDefinition_Id::set(System::Int32 value) {
        this[this->tableAffector->AnimationDefinition_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  NewDataSet::AffectorRow::AnimationDefinitionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AnimationDefinition_Affector"])));
    }
    inline System::Void NewDataSet::AffectorRow::AnimationDefinitionRow::set(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"AnimationDefinition_Affector"]);
    }
    
    inline ::System::Boolean NewDataSet::AffectorRow::IsapplicationMethodNull() {
        return this->IsNull(this->tableAffector->applicationMethodColumn);
    }
    
    inline ::System::Void NewDataSet::AffectorRow::SetapplicationMethodNull() {
        this[this->tableAffector->applicationMethodColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::AffectorRow::IsAnimationDefinition_IdNull() {
        return this->IsNull(this->tableAffector->AnimationDefinition_IdColumn);
    }
    
    inline ::System::Void NewDataSet::AffectorRow::SetAnimationDefinition_IdNull() {
        this[this->tableAffector->AnimationDefinition_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< NinjaPlatformer::NewDataSet::KeyFrameRow^  >^  NewDataSet::AffectorRow::GetKeyFrameRows() {
        if (this->Table->ChildRelations[L"Affector_KeyFrame"] == nullptr) {
            return gcnew cli::array< NinjaPlatformer::NewDataSet::KeyFrameRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< NinjaPlatformer::NewDataSet::KeyFrameRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Affector_KeyFrame"])));
        }
    }
    
    
    inline NewDataSet::KeyFrameRow::KeyFrameRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableKeyFrame = (cli::safe_cast<NinjaPlatformer::NewDataSet::KeyFrameDataTable^  >(this->Table));
    }
    
    inline System::Decimal NewDataSet::KeyFrameRow::position::get() {
        return (cli::safe_cast<::System::Decimal >(this[this->tableKeyFrame->positionColumn]));
    }
    inline System::Void NewDataSet::KeyFrameRow::position::set(System::Decimal value) {
        this[this->tableKeyFrame->positionColumn] = value;
    }
    
    inline System::String^  NewDataSet::KeyFrameRow::_value::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableKeyFrame->_valueColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'value\' in table \'KeyFrame\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::KeyFrameRow::_value::set(System::String^  value) {
        this[this->tableKeyFrame->_valueColumn] = value;
    }
    
    inline System::String^  NewDataSet::KeyFrameRow::progression::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableKeyFrame->progressionColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'progression\' in table \'KeyFrame\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::KeyFrameRow::progression::set(System::String^  value) {
        this[this->tableKeyFrame->progressionColumn] = value;
    }
    
    inline System::String^  NewDataSet::KeyFrameRow::sourceProperty::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableKeyFrame->sourcePropertyColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'sourceProperty\' in table \'KeyFrame\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::KeyFrameRow::sourceProperty::set(System::String^  value) {
        this[this->tableKeyFrame->sourcePropertyColumn] = value;
    }
    
    inline System::Int32 NewDataSet::KeyFrameRow::Affector_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableKeyFrame->Affector_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Affector_Id\' in table \'KeyFrame\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::KeyFrameRow::Affector_Id::set(System::Int32 value) {
        this[this->tableKeyFrame->Affector_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::AffectorRow^  NewDataSet::KeyFrameRow::AffectorRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AffectorRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Affector_KeyFrame"])));
    }
    inline System::Void NewDataSet::KeyFrameRow::AffectorRow::set(NinjaPlatformer::NewDataSet::AffectorRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Affector_KeyFrame"]);
    }
    
    inline ::System::Boolean NewDataSet::KeyFrameRow::Is_valueNull() {
        return this->IsNull(this->tableKeyFrame->_valueColumn);
    }
    
    inline ::System::Void NewDataSet::KeyFrameRow::Set_valueNull() {
        this[this->tableKeyFrame->_valueColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::KeyFrameRow::IsprogressionNull() {
        return this->IsNull(this->tableKeyFrame->progressionColumn);
    }
    
    inline ::System::Void NewDataSet::KeyFrameRow::SetprogressionNull() {
        this[this->tableKeyFrame->progressionColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::KeyFrameRow::IssourcePropertyNull() {
        return this->IsNull(this->tableKeyFrame->sourcePropertyColumn);
    }
    
    inline ::System::Void NewDataSet::KeyFrameRow::SetsourcePropertyNull() {
        this[this->tableKeyFrame->sourcePropertyColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::KeyFrameRow::IsAffector_IdNull() {
        return this->IsNull(this->tableKeyFrame->Affector_IdColumn);
    }
    
    inline ::System::Void NewDataSet::KeyFrameRow::SetAffector_IdNull() {
        this[this->tableKeyFrame->Affector_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::SubscriptionRow::SubscriptionRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableSubscription = (cli::safe_cast<NinjaPlatformer::NewDataSet::SubscriptionDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::SubscriptionRow::_event::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableSubscription->_eventColumn]));
    }
    inline System::Void NewDataSet::SubscriptionRow::_event::set(System::String^  value) {
        this[this->tableSubscription->_eventColumn] = value;
    }
    
    inline System::String^  NewDataSet::SubscriptionRow::action::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableSubscription->actionColumn]));
    }
    inline System::Void NewDataSet::SubscriptionRow::action::set(System::String^  value) {
        this[this->tableSubscription->actionColumn] = value;
    }
    
    inline System::Int32 NewDataSet::SubscriptionRow::AnimationDefinition_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableSubscription->AnimationDefinition_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AnimationDefinition_Id\' in table \'Subscription\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::SubscriptionRow::AnimationDefinition_Id::set(System::Int32 value) {
        this[this->tableSubscription->AnimationDefinition_IdColumn] = value;
    }
    
    inline NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  NewDataSet::SubscriptionRow::AnimationDefinitionRow::get() {
        return (cli::safe_cast<NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AnimationDefinition_Subscription"])));
    }
    inline System::Void NewDataSet::SubscriptionRow::AnimationDefinitionRow::set(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"AnimationDefinition_Subscription"]);
    }
    
    inline ::System::Boolean NewDataSet::SubscriptionRow::IsAnimationDefinition_IdNull() {
        return this->IsNull(this->tableSubscription->AnimationDefinition_IdColumn);
    }
    
    inline ::System::Void NewDataSet::SubscriptionRow::SetAnimationDefinition_IdNull() {
        this[this->tableSubscription->AnimationDefinition_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::FalagardRowChangeEvent::FalagardRowChangeEvent(NinjaPlatformer::NewDataSet::FalagardRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::FalagardRow^  NewDataSet::FalagardRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::FalagardRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::WidgetLookRowChangeEvent::WidgetLookRowChangeEvent(NinjaPlatformer::NewDataSet::WidgetLookRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetLookRow^  NewDataSet::WidgetLookRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::WidgetLookRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::EventLinkDefinitionRowChangeEvent::EventLinkDefinitionRowChangeEvent(NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkDefinitionRow^  NewDataSet::EventLinkDefinitionRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::EventLinkDefinitionRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::EventLinkTargetRowChangeEvent::EventLinkTargetRowChangeEvent(NinjaPlatformer::NewDataSet::EventLinkTargetRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::EventLinkTargetRow^  NewDataSet::EventLinkTargetRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::EventLinkTargetRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::PropertyDefinitionRowChangeEvent::PropertyDefinitionRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDefinitionRow^  NewDataSet::PropertyDefinitionRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::PropertyDefinitionRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::PropertyLinkDefinitionRowChangeEvent::PropertyLinkDefinitionRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkDefinitionRow^  NewDataSet::PropertyLinkDefinitionRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::PropertyLinkDefinitionRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::PropertyLinkTargetRowChangeEvent::PropertyLinkTargetRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyLinkTargetRow^  NewDataSet::PropertyLinkTargetRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::PropertyLinkTargetRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::PropertyRowChangeEvent::PropertyRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyRow^  NewDataSet::PropertyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::PropertyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::NamedAreaRowChangeEvent::NamedAreaRowChangeEvent(NinjaPlatformer::NewDataSet::NamedAreaRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaRow^  NewDataSet::NamedAreaRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::NamedAreaRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::AreaRowChangeEvent::AreaRowChangeEvent(NinjaPlatformer::NewDataSet::AreaRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaRow^  NewDataSet::AreaRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::AreaRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::DimRowChangeEvent::DimRowChangeEvent(NinjaPlatformer::NewDataSet::DimRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::DimRow^  NewDataSet::DimRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::DimRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::UnifiedDimRowChangeEvent::UnifiedDimRowChangeEvent(NinjaPlatformer::NewDataSet::UnifiedDimRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::UnifiedDimRow^  NewDataSet::UnifiedDimRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::UnifiedDimRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::AbsoluteDimRowChangeEvent::AbsoluteDimRowChangeEvent(NinjaPlatformer::NewDataSet::AbsoluteDimRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::AbsoluteDimRow^  NewDataSet::AbsoluteDimRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::AbsoluteDimRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ImageDimRowChangeEvent::ImageDimRowChangeEvent(NinjaPlatformer::NewDataSet::ImageDimRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageDimRow^  NewDataSet::ImageDimRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ImageDimRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ImagePropertyDimRowChangeEvent::ImagePropertyDimRowChangeEvent(NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyDimRow^  NewDataSet::ImagePropertyDimRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ImagePropertyDimRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::WidgetDimRowChangeEvent::WidgetDimRowChangeEvent(NinjaPlatformer::NewDataSet::WidgetDimRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::WidgetDimRow^  NewDataSet::WidgetDimRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::WidgetDimRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::FontDimRowChangeEvent::FontDimRowChangeEvent(NinjaPlatformer::NewDataSet::FontDimRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::FontDimRow^  NewDataSet::FontDimRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::FontDimRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::PropertyDimRowChangeEvent::PropertyDimRowChangeEvent(NinjaPlatformer::NewDataSet::PropertyDimRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::PropertyDimRow^  NewDataSet::PropertyDimRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::PropertyDimRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::OperatorDimRowChangeEvent::OperatorDimRowChangeEvent(NinjaPlatformer::NewDataSet::OperatorDimRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::OperatorDimRow^  NewDataSet::OperatorDimRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::OperatorDimRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::AreaPropertyRowChangeEvent::AreaPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::AreaPropertyRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::AreaPropertyRow^  NewDataSet::AreaPropertyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::AreaPropertyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::NamedAreaSourceRowChangeEvent::NamedAreaSourceRowChangeEvent(NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::NamedAreaSourceRow^  NewDataSet::NamedAreaSourceRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::NamedAreaSourceRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ChildRowChangeEvent::ChildRowChangeEvent(NinjaPlatformer::NewDataSet::ChildRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ChildRow^  NewDataSet::ChildRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ChildRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::EventActionRowChangeEvent::EventActionRowChangeEvent(NinjaPlatformer::NewDataSet::EventActionRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::EventActionRow^  NewDataSet::EventActionRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::EventActionRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::VertAlignmentRowChangeEvent::VertAlignmentRowChangeEvent(NinjaPlatformer::NewDataSet::VertAlignmentRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::VertAlignmentRow^  NewDataSet::VertAlignmentRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::VertAlignmentRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::HorzAlignmentRowChangeEvent::HorzAlignmentRowChangeEvent(NinjaPlatformer::NewDataSet::HorzAlignmentRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::HorzAlignmentRow^  NewDataSet::HorzAlignmentRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::HorzAlignmentRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ImagerySectionRowChangeEvent::ImagerySectionRowChangeEvent(NinjaPlatformer::NewDataSet::ImagerySectionRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagerySectionRow^  NewDataSet::ImagerySectionRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ImagerySectionRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ColourRowChangeEvent::ColourRowChangeEvent(NinjaPlatformer::NewDataSet::ColourRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ColourRow^  NewDataSet::ColourRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ColourRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ColoursRowChangeEvent::ColoursRowChangeEvent(NinjaPlatformer::NewDataSet::ColoursRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ColoursRow^  NewDataSet::ColoursRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ColoursRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ColourPropertyRowChangeEvent::ColourPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::ColourPropertyRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ColourPropertyRow^  NewDataSet::ColourPropertyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ColourPropertyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ColourRectPropertyRowChangeEvent::ColourRectPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ColourRectPropertyRow^  NewDataSet::ColourRectPropertyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ColourRectPropertyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::FrameComponentRowChangeEvent::FrameComponentRowChangeEvent(NinjaPlatformer::NewDataSet::FrameComponentRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::FrameComponentRow^  NewDataSet::FrameComponentRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::FrameComponentRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ImageRowChangeEvent::ImageRowChangeEvent(NinjaPlatformer::NewDataSet::ImageRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageRow^  NewDataSet::ImageRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ImageRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ImagePropertyRowChangeEvent::ImagePropertyRowChangeEvent(NinjaPlatformer::NewDataSet::ImagePropertyRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ImagePropertyRow^  NewDataSet::ImagePropertyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ImagePropertyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::VertFormatRowChangeEvent::VertFormatRowChangeEvent(NinjaPlatformer::NewDataSet::VertFormatRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatRow^  NewDataSet::VertFormatRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::VertFormatRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::VertFormatPropertyRowChangeEvent::VertFormatPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::VertFormatPropertyRow^  NewDataSet::VertFormatPropertyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::VertFormatPropertyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::HorzFormatRowChangeEvent::HorzFormatRowChangeEvent(NinjaPlatformer::NewDataSet::HorzFormatRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatRow^  NewDataSet::HorzFormatRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::HorzFormatRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::HorzFormatPropertyRowChangeEvent::HorzFormatPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::HorzFormatPropertyRow^  NewDataSet::HorzFormatPropertyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::HorzFormatPropertyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::ImageryComponentRowChangeEvent::ImageryComponentRowChangeEvent(NinjaPlatformer::NewDataSet::ImageryComponentRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::ImageryComponentRow^  NewDataSet::ImageryComponentRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ImageryComponentRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::TextComponentRowChangeEvent::TextComponentRowChangeEvent(NinjaPlatformer::NewDataSet::TextComponentRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::TextComponentRow^  NewDataSet::TextComponentRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::TextComponentRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::TextRowChangeEvent::TextRowChangeEvent(NinjaPlatformer::NewDataSet::TextRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::TextRow^  NewDataSet::TextRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::TextRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::TextPropertyRowChangeEvent::TextPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::TextPropertyRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::TextPropertyRow^  NewDataSet::TextPropertyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::TextPropertyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::FontPropertyRowChangeEvent::FontPropertyRowChangeEvent(NinjaPlatformer::NewDataSet::FontPropertyRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::FontPropertyRow^  NewDataSet::FontPropertyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::FontPropertyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::StateImageryRowChangeEvent::StateImageryRowChangeEvent(NinjaPlatformer::NewDataSet::StateImageryRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::StateImageryRow^  NewDataSet::StateImageryRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::StateImageryRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::LayerRowChangeEvent::LayerRowChangeEvent(NinjaPlatformer::NewDataSet::LayerRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::LayerRow^  NewDataSet::LayerRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::LayerRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::SectionRowChangeEvent::SectionRowChangeEvent(NinjaPlatformer::NewDataSet::SectionRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::SectionRow^  NewDataSet::SectionRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::SectionRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::AnimationDefinitionRowChangeEvent::AnimationDefinitionRowChangeEvent(NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::AnimationDefinitionRow^  NewDataSet::AnimationDefinitionRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::AnimationDefinitionRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::AffectorRowChangeEvent::AffectorRowChangeEvent(NinjaPlatformer::NewDataSet::AffectorRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::AffectorRow^  NewDataSet::AffectorRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::AffectorRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::KeyFrameRowChangeEvent::KeyFrameRowChangeEvent(NinjaPlatformer::NewDataSet::KeyFrameRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::KeyFrameRow^  NewDataSet::KeyFrameRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::KeyFrameRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::SubscriptionRowChangeEvent::SubscriptionRowChangeEvent(NinjaPlatformer::NewDataSet::SubscriptionRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline NinjaPlatformer::NewDataSet::SubscriptionRow^  NewDataSet::SubscriptionRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::SubscriptionRowChangeEvent::Action::get() {
        return this->eventAction;
    }
}
